
import java_swift
import javax_swing
import java_awt
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:52:06 GMT 2016 ///

/// class com.apple.laf.AquaInternalFramePaneUI ///

open class AquaInternalFramePaneUI: javax_swing.BasicDesktopPaneUI, java_awt.MouseListener {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "com.apple.laf.AquaInternalFramePaneUI", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var AquaInternalFramePaneUIJNIClass: jclass?

    /// javax.swing.JComponent com.apple.laf.AquaInternalFramePaneUI.fDock

    /// com.apple.laf.AquaInternalFramePaneUI$DockLayoutManager com.apple.laf.AquaInternalFramePaneUI.fLayoutMgr

    /// private static final javax.swing.plaf.basic.BasicDesktopPaneUI$Actions javax.swing.plaf.basic.BasicDesktopPaneUI.SHARED_ACTION

    /// private static java.awt.Dimension javax.swing.plaf.basic.BasicDesktopPaneUI.minSize

    /// private static java.awt.Dimension javax.swing.plaf.basic.BasicDesktopPaneUI.maxSize

    /// private javax.swing.plaf.basic.BasicDesktopPaneUI$Handler javax.swing.plaf.basic.BasicDesktopPaneUI.handler

    /// private java.beans.PropertyChangeListener javax.swing.plaf.basic.BasicDesktopPaneUI.pcl

    /// protected javax.swing.JDesktopPane javax.swing.plaf.basic.BasicDesktopPaneUI.desktop

    private static var desktop_FieldID: jfieldID?

    override open var desktop: javax_swing.JDesktopPane! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "desktop", fieldType: "Ljavax/swing/JDesktopPane;", fieldCache: &AquaInternalFramePaneUI.desktop_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.JDesktopPane( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "desktop", fieldType: "Ljavax/swing/JDesktopPane;", fieldCache: &AquaInternalFramePaneUI.desktop_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected javax.swing.DesktopManager javax.swing.plaf.basic.BasicDesktopPaneUI.desktopManager

    private static var desktopManager_FieldID: jfieldID?

    override open var desktopManager: javax_swing.DesktopManager! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "desktopManager", fieldType: "Ljavax/swing/DesktopManager;", fieldCache: &AquaInternalFramePaneUI.desktopManager_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.DesktopManagerForward( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = jvalue( l: newValue?.localJavaObject( &__locals ) )
            JNIField.SetObjectField( fieldName: "desktopManager", fieldType: "Ljavax/swing/DesktopManager;", fieldCache: &AquaInternalFramePaneUI.desktopManager_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicDesktopPaneUI.minimizeKey

    private static var minimizeKey_FieldID: jfieldID?

    override open var minimizeKey: javax_swing.KeyStroke! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "minimizeKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaInternalFramePaneUI.minimizeKey_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.KeyStroke( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "minimizeKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaInternalFramePaneUI.minimizeKey_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicDesktopPaneUI.maximizeKey

    private static var maximizeKey_FieldID: jfieldID?

    override open var maximizeKey: javax_swing.KeyStroke! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "maximizeKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaInternalFramePaneUI.maximizeKey_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.KeyStroke( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "maximizeKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaInternalFramePaneUI.maximizeKey_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicDesktopPaneUI.closeKey

    private static var closeKey_FieldID: jfieldID?

    override open var closeKey: javax_swing.KeyStroke! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "closeKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaInternalFramePaneUI.closeKey_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.KeyStroke( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "closeKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaInternalFramePaneUI.closeKey_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicDesktopPaneUI.navigateKey

    private static var navigateKey_FieldID: jfieldID?

    override open var navigateKey: javax_swing.KeyStroke! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "navigateKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaInternalFramePaneUI.navigateKey_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.KeyStroke( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "navigateKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaInternalFramePaneUI.navigateKey_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected javax.swing.KeyStroke javax.swing.plaf.basic.BasicDesktopPaneUI.navigateKey2

    private static var navigateKey2_FieldID: jfieldID?

    override open var navigateKey2: javax_swing.KeyStroke! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "navigateKey2", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaInternalFramePaneUI.navigateKey2_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.KeyStroke( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "navigateKey2", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaInternalFramePaneUI.navigateKey2_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// public com.apple.laf.AquaInternalFramePaneUI()

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "com/apple/laf/AquaInternalFramePaneUI", classCache: &AquaInternalFramePaneUI.AquaInternalFramePaneUIJNIClass, methodSig: "()V", methodCache: &AquaInternalFramePaneUI.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public void com.apple.laf.AquaInternalFramePaneUI.update(java.awt.Graphics,javax.swing.JComponent)

    /// public void com.apple.laf.AquaInternalFramePaneUI.installUI(javax.swing.JComponent)

    /// public void com.apple.laf.AquaInternalFramePaneUI.uninstallUI(javax.swing.JComponent)

    /// public void com.apple.laf.AquaInternalFramePaneUI.mousePressed(java.awt.event.MouseEvent)

    private static var mousePressed_MethodID_2: jmethodID?

    open func mousePressed( arg0: java_awt.MouseEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "mousePressed", methodSig: "(Ljava/awt/event/MouseEvent;)V", methodCache: &AquaInternalFramePaneUI.mousePressed_MethodID_2, args: &__args, locals: &__locals )
    }

    open func mousePressed( _ _arg0: java_awt.MouseEvent? ) {
        mousePressed( arg0: _arg0 )
    }

    /// public void com.apple.laf.AquaInternalFramePaneUI.mouseReleased(java.awt.event.MouseEvent)

    private static var mouseReleased_MethodID_3: jmethodID?

    open func mouseReleased( arg0: java_awt.MouseEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "mouseReleased", methodSig: "(Ljava/awt/event/MouseEvent;)V", methodCache: &AquaInternalFramePaneUI.mouseReleased_MethodID_3, args: &__args, locals: &__locals )
    }

    open func mouseReleased( _ _arg0: java_awt.MouseEvent? ) {
        mouseReleased( arg0: _arg0 )
    }

    /// public void com.apple.laf.AquaInternalFramePaneUI.mouseClicked(java.awt.event.MouseEvent)

    private static var mouseClicked_MethodID_4: jmethodID?

    open func mouseClicked( arg0: java_awt.MouseEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "mouseClicked", methodSig: "(Ljava/awt/event/MouseEvent;)V", methodCache: &AquaInternalFramePaneUI.mouseClicked_MethodID_4, args: &__args, locals: &__locals )
    }

    open func mouseClicked( _ _arg0: java_awt.MouseEvent? ) {
        mouseClicked( arg0: _arg0 )
    }

    /// public void com.apple.laf.AquaInternalFramePaneUI.mouseExited(java.awt.event.MouseEvent)

    private static var mouseExited_MethodID_5: jmethodID?

    open func mouseExited( arg0: java_awt.MouseEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "mouseExited", methodSig: "(Ljava/awt/event/MouseEvent;)V", methodCache: &AquaInternalFramePaneUI.mouseExited_MethodID_5, args: &__args, locals: &__locals )
    }

    open func mouseExited( _ _arg0: java_awt.MouseEvent? ) {
        mouseExited( arg0: _arg0 )
    }

    /// public void com.apple.laf.AquaInternalFramePaneUI.mouseEntered(java.awt.event.MouseEvent)

    private static var mouseEntered_MethodID_6: jmethodID?

    open func mouseEntered( arg0: java_awt.MouseEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "mouseEntered", methodSig: "(Ljava/awt/event/MouseEvent;)V", methodCache: &AquaInternalFramePaneUI.mouseEntered_MethodID_6, args: &__args, locals: &__locals )
    }

    open func mouseEntered( _ _arg0: java_awt.MouseEvent? ) {
        mouseEntered( arg0: _arg0 )
    }

    /// public static javax.swing.plaf.ComponentUI com.apple.laf.AquaInternalFramePaneUI.createUI(javax.swing.JComponent)

    private static var createUI_MethodID_7: jmethodID?

    override open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "com/apple/laf/AquaInternalFramePaneUI", classCache: &AquaInternalFramePaneUIJNIClass, methodName: "createUI", methodSig: "(Ljavax/swing/JComponent;)Ljavax/swing/plaf/ComponentUI;", methodCache: &createUI_MethodID_7, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? javax_swing.ComponentUI( javaObject: __return ) : nil
    }

    override open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
        return createUI( arg0: _arg0 )
    }

    /// protected void com.apple.laf.AquaInternalFramePaneUI.installDesktopManager()

    private static var installDesktopManager_MethodID_8: jmethodID?

    override open func installDesktopManager() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "installDesktopManager", methodSig: "()V", methodCache: &AquaInternalFramePaneUI.installDesktopManager_MethodID_8, args: &__args, locals: &__locals )
    }


    /// protected void com.apple.laf.AquaInternalFramePaneUI.uninstallDesktopManager()

    private static var uninstallDesktopManager_MethodID_9: jmethodID?

    override open func uninstallDesktopManager() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "uninstallDesktopManager", methodSig: "()V", methodCache: &AquaInternalFramePaneUI.uninstallDesktopManager_MethodID_9, args: &__args, locals: &__locals )
    }


    /// javax.swing.JComponent com.apple.laf.AquaInternalFramePaneUI.getDock()

}
