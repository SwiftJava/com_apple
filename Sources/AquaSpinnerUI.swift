
import java_swift
import javax_swing
import java_lang
import java_awt

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:52:07 GMT 2016 ///

/// class com.apple.laf.AquaSpinnerUI ///

open class AquaSpinnerUI: javax_swing.SpinnerUI {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "com.apple.laf.AquaSpinnerUI", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var AquaSpinnerUIJNIClass: jclass?

    /// private static final com.apple.laf.AquaUtils$LazySingleton com.apple.laf.AquaSpinnerUI.propertyChangeListener

    /// private static final com.apple.laf.AquaUtils$LazySingleton com.apple.laf.AquaSpinnerUI.nextButtonHandler

    /// private static final com.apple.laf.AquaUtils$LazySingleton com.apple.laf.AquaSpinnerUI.previousButtonHandler

    /// javax.swing.JSpinner com.apple.laf.AquaSpinnerUI.spinner

    /// com.apple.laf.AquaSpinnerUI$SpinPainter com.apple.laf.AquaSpinnerUI.spinPainter

    /// boolean com.apple.laf.AquaSpinnerUI.wasOpaque

    /// public com.apple.laf.AquaSpinnerUI()

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "com/apple/laf/AquaSpinnerUI", classCache: &AquaSpinnerUI.AquaSpinnerUIJNIClass, methodSig: "()V", methodCache: &AquaSpinnerUI.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public void com.apple.laf.AquaSpinnerUI.installUI(javax.swing.JComponent)

    /// private javax.swing.InputMap com.apple.laf.AquaSpinnerUI.getInputMap(int)

    /// private javax.swing.ActionMap com.apple.laf.AquaSpinnerUI.getActionMap()

    /// public void com.apple.laf.AquaSpinnerUI.uninstallUI(javax.swing.JComponent)

    /// public static javax.swing.plaf.ComponentUI com.apple.laf.AquaSpinnerUI.createUI(javax.swing.JComponent)

    private static var createUI_MethodID_2: jmethodID?

    override open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "com/apple/laf/AquaSpinnerUI", classCache: &AquaSpinnerUIJNIClass, methodName: "createUI", methodSig: "(Ljavax/swing/JComponent;)Ljavax/swing/plaf/ComponentUI;", methodCache: &createUI_MethodID_2, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? javax_swing.ComponentUI( javaObject: __return ) : nil
    }

    override open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
        return createUI( arg0: _arg0 )
    }

    /// protected void com.apple.laf.AquaSpinnerUI.installDefaults()

    private static var installDefaults_MethodID_3: jmethodID?

    open func installDefaults() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "installDefaults", methodSig: "()V", methodCache: &AquaSpinnerUI.installDefaults_MethodID_3, args: &__args, locals: &__locals )
    }


    /// protected void com.apple.laf.AquaSpinnerUI.installListeners()

    private static var installListeners_MethodID_4: jmethodID?

    open func installListeners() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "installListeners", methodSig: "()V", methodCache: &AquaSpinnerUI.installListeners_MethodID_4, args: &__args, locals: &__locals )
    }


    /// private void com.apple.laf.AquaSpinnerUI.installKeyboardActions()

    /// protected void com.apple.laf.AquaSpinnerUI.uninstallListeners()

    private static var uninstallListeners_MethodID_5: jmethodID?

    open func uninstallListeners() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "uninstallListeners", methodSig: "()V", methodCache: &AquaSpinnerUI.uninstallListeners_MethodID_5, args: &__args, locals: &__locals )
    }


    /// protected void com.apple.laf.AquaSpinnerUI.uninstallDefaults()

    private static var uninstallDefaults_MethodID_6: jmethodID?

    open func uninstallDefaults() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "uninstallDefaults", methodSig: "()V", methodCache: &AquaSpinnerUI.uninstallDefaults_MethodID_6, args: &__args, locals: &__locals )
    }


    /// protected java.beans.PropertyChangeListener com.apple.laf.AquaSpinnerUI.createPropertyChangeListener()

    private static var createPropertyChangeListener_MethodID_7: jmethodID?

    open func createPropertyChangeListener() -> /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "createPropertyChangeListener", methodSig: "()Ljava/beans/PropertyChangeListener;", methodCache: &AquaSpinnerUI.createPropertyChangeListener_MethodID_7, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? /* java.beans.PropertyChangeListener */ UnclassedProtocolForward( javaObject: __return ) : nil
    }


    /// protected javax.swing.JComponent com.apple.laf.AquaSpinnerUI.createEditor()

    private static var createEditor_MethodID_8: jmethodID?

    open func createEditor() -> javax_swing.JComponent! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "createEditor", methodSig: "()Ljavax/swing/JComponent;", methodCache: &AquaSpinnerUI.createEditor_MethodID_8, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? javax_swing.JComponent( javaObject: __return ) : nil
    }


    /// void com.apple.laf.AquaSpinnerUI.updateToolTipTextForChildren(javax.swing.JComponent)

    /// private javax.swing.ActionMap com.apple.laf.AquaSpinnerUI.createActionMap()

    /// protected java.awt.LayoutManager com.apple.laf.AquaSpinnerUI.createLayout()

    private static var createLayout_MethodID_9: jmethodID?

    open func createLayout() -> java_awt.LayoutManager! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "createLayout", methodSig: "()Ljava/awt/LayoutManager;", methodCache: &AquaSpinnerUI.createLayout_MethodID_9, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? java_awt.LayoutManagerForward( javaObject: __return ) : nil
    }


    /// protected void com.apple.laf.AquaSpinnerUI.replaceEditor(javax.swing.JComponent,javax.swing.JComponent)

    private static var replaceEditor_MethodID_10: jmethodID?

    open func replaceEditor( arg0: javax_swing.JComponent?, arg1: javax_swing.JComponent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "replaceEditor", methodSig: "(Ljavax/swing/JComponent;Ljavax/swing/JComponent;)V", methodCache: &AquaSpinnerUI.replaceEditor_MethodID_10, args: &__args, locals: &__locals )
    }

    open func replaceEditor( _ _arg0: javax_swing.JComponent?, _ _arg1: javax_swing.JComponent? ) {
        replaceEditor( arg0: _arg0, arg1: _arg1 )
    }

    /// void com.apple.laf.AquaSpinnerUI.updateEnabledState()

    /// private void com.apple.laf.AquaSpinnerUI.updateEnabledState(java.awt.Container,boolean)

    /// static java.beans.PropertyChangeListener com.apple.laf.AquaSpinnerUI.getPropertyChangeListener()

    /// static com.apple.laf.AquaSpinnerUI$ArrowButtonHandler com.apple.laf.AquaSpinnerUI.getNextButtonHandler()

    /// static com.apple.laf.AquaSpinnerUI$ArrowButtonHandler com.apple.laf.AquaSpinnerUI.getPreviousButtonHandler()

    /// private void com.apple.laf.AquaSpinnerUI.maybeAdd(java.awt.Component,java.lang.String)

    /// protected com.apple.laf.AquaSpinnerUI$TransparentButton com.apple.laf.AquaSpinnerUI.createPreviousButton()

    private static var createPreviousButton_MethodID_11: jmethodID?

    open func createPreviousButton() -> /* com.apple.laf.AquaSpinnerUI$TransparentButton */ UnclassedObject! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "createPreviousButton", methodSig: "()Lcom/apple/laf/AquaSpinnerUI$TransparentButton;", methodCache: &AquaSpinnerUI.createPreviousButton_MethodID_11, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? /* com.apple.laf.AquaSpinnerUI$TransparentButton */ UnclassedObject( javaObject: __return ) : nil
    }


    /// protected com.apple.laf.AquaSpinnerUI$TransparentButton com.apple.laf.AquaSpinnerUI.createNextButton()

    private static var createNextButton_MethodID_12: jmethodID?

    open func createNextButton() -> /* com.apple.laf.AquaSpinnerUI$TransparentButton */ UnclassedObject! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "createNextButton", methodSig: "()Lcom/apple/laf/AquaSpinnerUI$TransparentButton;", methodCache: &AquaSpinnerUI.createNextButton_MethodID_12, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? /* com.apple.laf.AquaSpinnerUI$TransparentButton */ UnclassedObject( javaObject: __return ) : nil
    }


    /// protected void com.apple.laf.AquaSpinnerUI.fixupEditor(javax.swing.JComponent)

    private static var fixupEditor_MethodID_13: jmethodID?

    open func fixupEditor( arg0: javax_swing.JComponent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "fixupEditor", methodSig: "(Ljavax/swing/JComponent;)V", methodCache: &AquaSpinnerUI.fixupEditor_MethodID_13, args: &__args, locals: &__locals )
    }

    open func fixupEditor( _ _arg0: javax_swing.JComponent? ) {
        fixupEditor( arg0: _arg0 )
    }

}
