
import java_swift
import javax_swing
import java_awt

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home ///
/// Tue Aug 08 14:27:28 BST 2017 ///

/// class com.apple.laf.AquaMenuBorder ///

open class AquaMenuBorder: java_swift.JavaObject, javax_swing.Border, javax_swing.UIResource {

    public convenience init?( casting object: java_swift.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var AquaMenuBorderJNIClass: jclass?

    /// public com.apple.laf.AquaMenuBorder()

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "com/apple/laf/AquaMenuBorder", classCache: &AquaMenuBorder.AquaMenuBorderJNIClass, methodSig: "()V", methodCache: &AquaMenuBorder.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public java.awt.Insets com.apple.laf.AquaMenuBorder.getBorderInsets(java.awt.Component)

    private static var getBorderInsets_MethodID_2: jmethodID?

    open func getBorderInsets( c: java_awt.Component? ) -> java_awt.Insets! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: c, locals: &__locals )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getBorderInsets", methodSig: "(Ljava/awt/Component;)Ljava/awt/Insets;", methodCache: &AquaMenuBorder.getBorderInsets_MethodID_2, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? java_awt.Insets( javaObject: __return ) : nil
    }

    open func getBorderInsets( _ _c: java_awt.Component? ) -> java_awt.Insets! {
        return getBorderInsets( c: _c )
    }

    /// public boolean com.apple.laf.AquaMenuBorder.isBorderOpaque()

    private static var isBorderOpaque_MethodID_3: jmethodID?

    open func isBorderOpaque() -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "isBorderOpaque", methodSig: "()Z", methodCache: &AquaMenuBorder.isBorderOpaque_MethodID_3, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: Bool(), from: __return )
    }


    /// public void com.apple.laf.AquaMenuBorder.paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)

    private static var paintBorder_MethodID_4: jmethodID?

    open func paintBorder( c: java_awt.Component?, g: java_awt.Graphics?, x: Int, y: Int, width: Int, height: Int ) {
        var __args = [jvalue]( repeating: jvalue(), count: 6 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: c, locals: &__locals )
        __args[1] = JNIType.toJava( value: g, locals: &__locals )
        __args[2] = JNIType.toJava( value: x, locals: &__locals )
        __args[3] = JNIType.toJava( value: y, locals: &__locals )
        __args[4] = JNIType.toJava( value: width, locals: &__locals )
        __args[5] = JNIType.toJava( value: height, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "paintBorder", methodSig: "(Ljava/awt/Component;Ljava/awt/Graphics;IIII)V", methodCache: &AquaMenuBorder.paintBorder_MethodID_4, args: &__args, locals: &__locals )
    }

    open func paintBorder( _ _c: java_awt.Component?, _ _g: java_awt.Graphics?, _ _x: Int, _ _y: Int, _ _width: Int, _ _height: Int ) {
        paintBorder( c: _c, g: _g, x: _x, y: _y, width: _width, height: _height )
    }

    /// protected static java.awt.Insets com.apple.laf.AquaMenuBorder.getItemInsets()

    private static var getItemInsets_MethodID_5: jmethodID?

    open class func getItemInsets() -> java_awt.Insets! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "com/apple/laf/AquaMenuBorder", classCache: &AquaMenuBorderJNIClass, methodName: "getItemInsets", methodSig: "()Ljava/awt/Insets;", methodCache: &getItemInsets_MethodID_5, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? java_awt.Insets( javaObject: __return ) : nil
    }


    /// protected static java.awt.Insets com.apple.laf.AquaMenuBorder.getEmptyInsets()

    private static var getEmptyInsets_MethodID_6: jmethodID?

    open class func getEmptyInsets() -> java_awt.Insets! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "com/apple/laf/AquaMenuBorder", classCache: &AquaMenuBorderJNIClass, methodName: "getEmptyInsets", methodSig: "()Ljava/awt/Insets;", methodCache: &getEmptyInsets_MethodID_6, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? java_awt.Insets( javaObject: __return ) : nil
    }


    /// protected static java.awt.Insets com.apple.laf.AquaMenuBorder.getPopupInsets()

    private static var getPopupInsets_MethodID_7: jmethodID?

    open class func getPopupInsets() -> java_awt.Insets! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "com/apple/laf/AquaMenuBorder", classCache: &AquaMenuBorderJNIClass, methodName: "getPopupInsets", methodSig: "()Ljava/awt/Insets;", methodCache: &getPopupInsets_MethodID_7, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? java_awt.Insets( javaObject: __return ) : nil
    }


}

