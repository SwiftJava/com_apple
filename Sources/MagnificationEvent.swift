
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// class com.apple.eawt.event.MagnificationEvent ///

open class MagnificationEvent: GestureEvent {

    public convenience init?( casting object: java_swift.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var MagnificationEventJNIClass: jclass?

    /// final double com.apple.eawt.event.MagnificationEvent.magnification

    // Skipping field: true false false false false false 

    /// boolean com.apple.eawt.event.GestureEvent.consumed

    // Skipping field: true false false false false false 

    /// com.apple.eawt.event.MagnificationEvent(double)

    // Skipping init: true false false 

    /// public double com.apple.eawt.event.MagnificationEvent.getMagnification()

    private static var getMagnification_MethodID_1: jmethodID?

    open func getMagnification() -> Double {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallDoubleMethod( object: javaObject, methodName: "getMagnification", methodSig: "()D", methodCache: &MagnificationEvent.getMagnification_MethodID_1, args: &__args, locals: &__locals )
        return __return
    }


}

