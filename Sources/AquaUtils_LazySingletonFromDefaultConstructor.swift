
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:52:09 GMT 2016 ///

/// class com.apple.laf.AquaUtils$LazySingletonFromDefaultConstructor ///

open class AquaUtils_LazySingletonFromDefaultConstructor: AquaUtils_LazySingleton {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "com.apple.laf.AquaUtils$LazySingletonFromDefaultConstructor", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var AquaUtils_LazySingletonFromDefaultConstructorJNIClass: jclass?

    /// protected final java.lang.Class com.apple.laf.AquaUtils$LazySingletonFromDefaultConstructor.clazz

    private static var clazz_FieldID: jfieldID?

    open var clazz: java_lang.Class! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "clazz", fieldType: "Ljava/lang/Class;", fieldCache: &AquaUtils_LazySingletonFromDefaultConstructor.clazz_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_lang.Class( javaObject: __value ) : nil
        }
    }

    /// public com.apple.laf.AquaUtils$LazySingletonFromDefaultConstructor(java.lang.Class)

    private static var new_MethodID_1: jmethodID?

    public convenience init( arg0: java_lang.Class? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "com/apple/laf/AquaUtils$LazySingletonFromDefaultConstructor", classCache: &AquaUtils_LazySingletonFromDefaultConstructor.AquaUtils_LazySingletonFromDefaultConstructorJNIClass, methodSig: "(Ljava/lang/Class;)V", methodCache: &AquaUtils_LazySingletonFromDefaultConstructor.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _arg0: java_lang.Class? ) {
        self.init( arg0: _arg0 )
    }

    /// protected java.lang.Object com.apple.laf.AquaUtils$LazySingletonFromDefaultConstructor.getInstance()

    private static var getInstance_MethodID_2: jmethodID?

    override open func getInstance() -> java_lang.JavaObject! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getInstance", methodSig: "()Ljava/lang/Object;", methodCache: &AquaUtils_LazySingletonFromDefaultConstructor.getInstance_MethodID_2, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? java_lang.JavaObject( javaObject: __return ) : nil
    }


}
