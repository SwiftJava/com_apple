
import java_swift
import java_awt

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home ///
/// Tue Aug 08 14:27:28 BST 2017 ///

/// class com.apple.laf.AquaInternalFrameBorderMetrics ///

open class AquaInternalFrameBorderMetrics: java_swift.JavaObject {

    public convenience init?( casting object: java_swift.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var AquaInternalFrameBorderMetricsJNIClass: jclass?

    /// private static final boolean com.apple.laf.AquaInternalFrameBorderMetrics.useLegacyBorderMetrics

    /// public java.awt.Font com.apple.laf.AquaInternalFrameBorderMetrics.font

    private static var font_FieldID: jfieldID?

    open var font: java_awt.Font! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "font", fieldType: "Ljava/awt/Font;", fieldCache: &AquaInternalFrameBorderMetrics.font_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Font( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.toJava( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "font", fieldType: "Ljava/awt/Font;", fieldCache: &AquaInternalFrameBorderMetrics.font_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// public int com.apple.laf.AquaInternalFrameBorderMetrics.titleBarHeight

    private static var titleBarHeight_FieldID: jfieldID?

    open var titleBarHeight: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "titleBarHeight", fieldType: "I", fieldCache: &AquaInternalFrameBorderMetrics.titleBarHeight_FieldID, object: javaObject, locals: &__locals )
            return JNIType.toSwift( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.toJava( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "titleBarHeight", fieldType: "I", fieldCache: &AquaInternalFrameBorderMetrics.titleBarHeight_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// public int com.apple.laf.AquaInternalFrameBorderMetrics.leftSidePadding

    private static var leftSidePadding_FieldID: jfieldID?

    open var leftSidePadding: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "leftSidePadding", fieldType: "I", fieldCache: &AquaInternalFrameBorderMetrics.leftSidePadding_FieldID, object: javaObject, locals: &__locals )
            return JNIType.toSwift( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.toJava( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "leftSidePadding", fieldType: "I", fieldCache: &AquaInternalFrameBorderMetrics.leftSidePadding_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// public int com.apple.laf.AquaInternalFrameBorderMetrics.buttonHeight

    private static var buttonHeight_FieldID: jfieldID?

    open var buttonHeight: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "buttonHeight", fieldType: "I", fieldCache: &AquaInternalFrameBorderMetrics.buttonHeight_FieldID, object: javaObject, locals: &__locals )
            return JNIType.toSwift( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.toJava( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "buttonHeight", fieldType: "I", fieldCache: &AquaInternalFrameBorderMetrics.buttonHeight_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// public int com.apple.laf.AquaInternalFrameBorderMetrics.buttonWidth

    private static var buttonWidth_FieldID: jfieldID?

    open var buttonWidth: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "buttonWidth", fieldType: "I", fieldCache: &AquaInternalFrameBorderMetrics.buttonWidth_FieldID, object: javaObject, locals: &__locals )
            return JNIType.toSwift( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.toJava( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "buttonWidth", fieldType: "I", fieldCache: &AquaInternalFrameBorderMetrics.buttonWidth_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// public int com.apple.laf.AquaInternalFrameBorderMetrics.buttonPadding

    private static var buttonPadding_FieldID: jfieldID?

    open var buttonPadding: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "buttonPadding", fieldType: "I", fieldCache: &AquaInternalFrameBorderMetrics.buttonPadding_FieldID, object: javaObject, locals: &__locals )
            return JNIType.toSwift( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.toJava( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "buttonPadding", fieldType: "I", fieldCache: &AquaInternalFrameBorderMetrics.buttonPadding_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// public int com.apple.laf.AquaInternalFrameBorderMetrics.downShift

    private static var downShift_FieldID: jfieldID?

    open var downShift: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "downShift", fieldType: "I", fieldCache: &AquaInternalFrameBorderMetrics.downShift_FieldID, object: javaObject, locals: &__locals )
            return JNIType.toSwift( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.toJava( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "downShift", fieldType: "I", fieldCache: &AquaInternalFrameBorderMetrics.downShift_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// private static final com.apple.laf.AquaUtils$RecyclableSingleton com.apple.laf.AquaInternalFrameBorderMetrics.standardMetrics

    /// private static final com.apple.laf.AquaUtils$RecyclableSingleton com.apple.laf.AquaInternalFrameBorderMetrics.utilityMetrics

    /// private static final com.apple.laf.AquaUtils$RecyclableSingleton com.apple.laf.AquaInternalFrameBorderMetrics.legacyStandardMetrics

    /// private static final com.apple.laf.AquaUtils$RecyclableSingleton com.apple.laf.AquaInternalFrameBorderMetrics.legacyUtilityMetrics

    /// private com.apple.laf.AquaInternalFrameBorderMetrics()

    /// com.apple.laf.AquaInternalFrameBorderMetrics(com.apple.laf.AquaInternalFrameBorderMetrics$1)

    /// protected abstract void com.apple.laf.AquaInternalFrameBorderMetrics.initialize()

    private static var initialize_MethodID_1: jmethodID?

    open func initialize() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "initialize", methodSig: "()V", methodCache: &AquaInternalFrameBorderMetrics.initialize_MethodID_1, args: &__args, locals: &__locals )
    }


    /// public static com.apple.laf.AquaInternalFrameBorderMetrics com.apple.laf.AquaInternalFrameBorderMetrics.getMetrics(boolean)

    private static var getMetrics_MethodID_2: jmethodID?

    open class func getMetrics( arg0: Bool ) -> AquaInternalFrameBorderMetrics! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "com/apple/laf/AquaInternalFrameBorderMetrics", classCache: &AquaInternalFrameBorderMetricsJNIClass, methodName: "getMetrics", methodSig: "(Z)Lcom/apple/laf/AquaInternalFrameBorderMetrics;", methodCache: &getMetrics_MethodID_2, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? AquaInternalFrameBorderMetrics( javaObject: __return ) : nil
    }

    open class func getMetrics( _ _arg0: Bool ) -> AquaInternalFrameBorderMetrics! {
        return getMetrics( arg0: _arg0 )
    }

}

