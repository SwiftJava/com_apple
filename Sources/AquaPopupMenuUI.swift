
import java_swift
import javax_swing
import java_lang
import java_awt

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:52:06 GMT 2016 ///

/// class com.apple.laf.AquaPopupMenuUI ///

open class AquaPopupMenuUI: javax_swing.BasicPopupMenuUI {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "com.apple.laf.AquaPopupMenuUI", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var AquaPopupMenuUIJNIClass: jclass?

    /// static final int com.apple.laf.AquaPopupMenuUI.OVERLAP_SLACK

    /// static final java.lang.Object javax.swing.plaf.basic.BasicPopupMenuUI.MOUSE_GRABBER_KEY

    /// static final java.lang.Object javax.swing.plaf.basic.BasicPopupMenuUI.MENU_KEYBOARD_HELPER_KEY

    /// protected javax.swing.JPopupMenu javax.swing.plaf.basic.BasicPopupMenuUI.popupMenu

    private static var popupMenu_FieldID: jfieldID?

    override open var popupMenu: javax_swing.JPopupMenu! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "popupMenu", fieldType: "Ljavax/swing/JPopupMenu;", fieldCache: &AquaPopupMenuUI.popupMenu_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.JPopupMenu( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "popupMenu", fieldType: "Ljavax/swing/JPopupMenu;", fieldCache: &AquaPopupMenuUI.popupMenu_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// private transient javax.swing.event.PopupMenuListener javax.swing.plaf.basic.BasicPopupMenuUI.popupMenuListener

    /// private javax.swing.event.MenuKeyListener javax.swing.plaf.basic.BasicPopupMenuUI.menuKeyListener

    /// private static boolean javax.swing.plaf.basic.BasicPopupMenuUI.checkedUnpostPopup

    /// private static boolean javax.swing.plaf.basic.BasicPopupMenuUI.unpostPopup

    /// public com.apple.laf.AquaPopupMenuUI()

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "com/apple/laf/AquaPopupMenuUI", classCache: &AquaPopupMenuUI.AquaPopupMenuUIJNIClass, methodSig: "()V", methodCache: &AquaPopupMenuUI.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public void com.apple.laf.AquaPopupMenuUI.paint(java.awt.Graphics,javax.swing.JComponent)

    /// public boolean com.apple.laf.AquaPopupMenuUI.isPopupTrigger(java.awt.event.MouseEvent)

    /// public static javax.swing.plaf.ComponentUI com.apple.laf.AquaPopupMenuUI.createUI(javax.swing.JComponent)

    private static var createUI_MethodID_2: jmethodID?

    override open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "com/apple/laf/AquaPopupMenuUI", classCache: &AquaPopupMenuUIJNIClass, methodName: "createUI", methodSig: "(Ljavax/swing/JComponent;)Ljavax/swing/plaf/ComponentUI;", methodCache: &createUI_MethodID_2, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? javax_swing.ComponentUI( javaObject: __return ) : nil
    }

    override open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
        return createUI( arg0: _arg0 )
    }

    /// protected void com.apple.laf.AquaPopupMenuUI.paintRoundRect(java.awt.Graphics2D,java.awt.Rectangle)

    private static var paintRoundRect_MethodID_3: jmethodID?

    open func paintRoundRect( arg0: java_awt.Graphics2D?, arg1: java_awt.Rectangle? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "paintRoundRect", methodSig: "(Ljava/awt/Graphics2D;Ljava/awt/Rectangle;)V", methodCache: &AquaPopupMenuUI.paintRoundRect_MethodID_3, args: &__args, locals: &__locals )
    }

    open func paintRoundRect( _ _arg0: java_awt.Graphics2D?, _ _arg1: java_awt.Rectangle? ) {
        paintRoundRect( arg0: _arg0, arg1: _arg1 )
    }

    /// protected void com.apple.laf.AquaPopupMenuUI.clipEdges(java.awt.Graphics2D,java.awt.Rectangle)

    private static var clipEdges_MethodID_4: jmethodID?

    open func clipEdges( arg0: java_awt.Graphics2D?, arg1: java_awt.Rectangle? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "clipEdges", methodSig: "(Ljava/awt/Graphics2D;Ljava/awt/Rectangle;)V", methodCache: &AquaPopupMenuUI.clipEdges_MethodID_4, args: &__args, locals: &__locals )
    }

    open func clipEdges( _ _arg0: java_awt.Graphics2D?, _ _arg1: java_awt.Rectangle? ) {
        clipEdges( arg0: _arg0, arg1: _arg1 )
    }

}
