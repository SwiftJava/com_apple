
import java_swift
import javax_swing
import java_awt
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:52:08 GMT 2016 ///

/// class com.apple.laf.AquaTabbedPaneUI$MouseHandler ///

open class AquaTabbedPaneUI_MouseHandler: javax_swing.MouseInputAdapter, java_awt.ActionListener {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "com.apple.laf.AquaTabbedPaneUI$MouseHandler", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var AquaTabbedPaneUI_MouseHandlerJNIClass: jclass?

    /// protected int com.apple.laf.AquaTabbedPaneUI$MouseHandler.trackingTab

    private static var trackingTab_FieldID: jfieldID?

    open var trackingTab: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "trackingTab", fieldType: "I", fieldCache: &AquaTabbedPaneUI_MouseHandler.trackingTab_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "trackingTab", fieldType: "I", fieldCache: &AquaTabbedPaneUI_MouseHandler.trackingTab_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// protected javax.swing.Timer com.apple.laf.AquaTabbedPaneUI$MouseHandler.popupTimer

    private static var popupTimer_FieldID: jfieldID?

    open var popupTimer: javax_swing.Timer! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "popupTimer", fieldType: "Ljavax/swing/Timer;", fieldCache: &AquaTabbedPaneUI_MouseHandler.popupTimer_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.Timer( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "popupTimer", fieldType: "Ljavax/swing/Timer;", fieldCache: &AquaTabbedPaneUI_MouseHandler.popupTimer_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// final com.apple.laf.AquaTabbedPaneUI com.apple.laf.AquaTabbedPaneUI$MouseHandler.this$0

    /// public com.apple.laf.AquaTabbedPaneUI$MouseHandler(com.apple.laf.AquaTabbedPaneUI)

    private static var new_MethodID_1: jmethodID?

    public convenience init( arg0: AquaTabbedPaneUI? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "com/apple/laf/AquaTabbedPaneUI$MouseHandler", classCache: &AquaTabbedPaneUI_MouseHandler.AquaTabbedPaneUI_MouseHandlerJNIClass, methodSig: "(Lcom/apple/laf/AquaTabbedPaneUI;)V", methodCache: &AquaTabbedPaneUI_MouseHandler.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _arg0: AquaTabbedPaneUI? ) {
        self.init( arg0: _arg0 )
    }

    /// void com.apple.laf.AquaTabbedPaneUI$MouseHandler.repaint(javax.swing.JTabbedPane,int)

    /// void com.apple.laf.AquaTabbedPaneUI$MouseHandler.repaint(javax.swing.JTabbedPane,int[])

    /// public void com.apple.laf.AquaTabbedPaneUI$MouseHandler.mousePressed(java.awt.event.MouseEvent)

    /// public void com.apple.laf.AquaTabbedPaneUI$MouseHandler.mouseReleased(java.awt.event.MouseEvent)

    /// public void com.apple.laf.AquaTabbedPaneUI$MouseHandler.mouseDragged(java.awt.event.MouseEvent)

    /// javax.swing.JMenuItem com.apple.laf.AquaTabbedPaneUI$MouseHandler.createMenuItem(int)

    /// public void com.apple.laf.AquaTabbedPaneUI$MouseHandler.actionPerformed(java.awt.event.ActionEvent)

    private static var actionPerformed_MethodID_2: jmethodID?

    open func actionPerformed( arg0: java_awt.ActionEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "actionPerformed", methodSig: "(Ljava/awt/event/ActionEvent;)V", methodCache: &AquaTabbedPaneUI_MouseHandler.actionPerformed_MethodID_2, args: &__args, locals: &__locals )
    }

    open func actionPerformed( _ _arg0: java_awt.ActionEvent? ) {
        actionPerformed( arg0: _arg0 )
    }

    /// void com.apple.laf.AquaTabbedPaneUI$MouseHandler.showFullPopup(boolean)

    /// int com.apple.laf.AquaTabbedPaneUI$MouseHandler.getCurrentTab(javax.swing.JTabbedPane,java.awt.Point)

    /// java.awt.Rectangle com.apple.laf.AquaTabbedPaneUI$MouseHandler.getRectForTab(int)

}
