
import java_swift
import java_lang
import java_awt
import javax_swing

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:52:08 GMT 2016 ///

/// class com.apple.laf.AquaTabbedPaneContrastUI ///

open class AquaTabbedPaneContrastUI: AquaTabbedPaneUI {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "com.apple.laf.AquaTabbedPaneContrastUI", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var AquaTabbedPaneContrastUIJNIClass: jclass?

    /// private static final int com.apple.laf.AquaTabbedPaneUI.kSmallTabHeight

    /// private static final int com.apple.laf.AquaTabbedPaneUI.kLargeTabHeight

    /// private static final int com.apple.laf.AquaTabbedPaneUI.kMaxIconSize

    /// private static final double com.apple.laf.AquaTabbedPaneUI.kNinetyDegrees

    /// protected final java.awt.Insets com.apple.laf.AquaTabbedPaneUI.currentContentDrawingInsets

    private static var currentContentDrawingInsets_FieldID: jfieldID?

    override open var currentContentDrawingInsets: java_awt.Insets! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "currentContentDrawingInsets", fieldType: "Ljava/awt/Insets;", fieldCache: &AquaTabbedPaneContrastUI.currentContentDrawingInsets_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Insets( javaObject: __value ) : nil
        }
    }

    /// protected final java.awt.Insets com.apple.laf.AquaTabbedPaneUI.currentContentBorderInsets

    private static var currentContentBorderInsets_FieldID: jfieldID?

    override open var currentContentBorderInsets: java_awt.Insets! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "currentContentBorderInsets", fieldType: "Ljava/awt/Insets;", fieldCache: &AquaTabbedPaneContrastUI.currentContentBorderInsets_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Insets( javaObject: __value ) : nil
        }
    }

    /// protected final java.awt.Insets com.apple.laf.AquaTabbedPaneUI.contentDrawingInsets

    private static var contentDrawingInsets_FieldID: jfieldID?

    override open var contentDrawingInsets: java_awt.Insets! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "contentDrawingInsets", fieldType: "Ljava/awt/Insets;", fieldCache: &AquaTabbedPaneContrastUI.contentDrawingInsets_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Insets( javaObject: __value ) : nil
        }
    }

    /// protected int com.apple.laf.AquaTabbedPaneUI.pressedTab

    private static var pressedTab_FieldID: jfieldID?

    override open var pressedTab: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "pressedTab", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.pressedTab_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "pressedTab", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.pressedTab_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// protected boolean com.apple.laf.AquaTabbedPaneUI.popupSelectionChanged

    private static var popupSelectionChanged_FieldID: jfieldID?

    override open var popupSelectionChanged: Bool {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetBooleanField( fieldName: "popupSelectionChanged", fieldType: "Z", fieldCache: &AquaTabbedPaneContrastUI.popupSelectionChanged_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: Bool(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetBooleanField( fieldName: "popupSelectionChanged", fieldType: "Z", fieldCache: &AquaTabbedPaneContrastUI.popupSelectionChanged_FieldID, object: javaObject, value: __value.z, locals: &__locals )
        }
    }

    /// protected java.lang.Boolean com.apple.laf.AquaTabbedPaneUI.isDefaultFocusReceiver

    private static var isDefaultFocusReceiver_FieldID: jfieldID?

    override open var isDefaultFocusReceiver: java_lang.Boolean! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "isDefaultFocusReceiver", fieldType: "Ljava/lang/Boolean;", fieldCache: &AquaTabbedPaneContrastUI.isDefaultFocusReceiver_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_lang.Boolean( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "isDefaultFocusReceiver", fieldType: "Ljava/lang/Boolean;", fieldCache: &AquaTabbedPaneContrastUI.isDefaultFocusReceiver_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected boolean com.apple.laf.AquaTabbedPaneUI.hasAvoidedFirstFocus

    private static var hasAvoidedFirstFocus_FieldID: jfieldID?

    override open var hasAvoidedFirstFocus: Bool {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetBooleanField( fieldName: "hasAvoidedFirstFocus", fieldType: "Z", fieldCache: &AquaTabbedPaneContrastUI.hasAvoidedFirstFocus_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: Bool(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetBooleanField( fieldName: "hasAvoidedFirstFocus", fieldType: "Z", fieldCache: &AquaTabbedPaneContrastUI.hasAvoidedFirstFocus_FieldID, object: javaObject, value: __value.z, locals: &__locals )
        }
    }

    /// protected final com.apple.laf.AquaTabbedPaneTabState com.apple.laf.AquaTabbedPaneUI.visibleTabState

    private static var visibleTabState_FieldID: jfieldID?

    override open var visibleTabState: /* com.apple.laf.AquaTabbedPaneTabState */ UnclassedObject! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "visibleTabState", fieldType: "Lcom/apple/laf/AquaTabbedPaneTabState;", fieldCache: &AquaTabbedPaneContrastUI.visibleTabState_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? /* com.apple.laf.AquaTabbedPaneTabState */ UnclassedObject( javaObject: __value ) : nil
        }
    }

    /// protected final com.apple.laf.AquaPainter com.apple.laf.AquaTabbedPaneUI.painter

    private static var painter_FieldID: jfieldID?

    override open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "painter", fieldType: "Lcom/apple/laf/AquaPainter;", fieldCache: &AquaTabbedPaneContrastUI.painter_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? /* com.apple.laf.AquaPainter */ UnclassedObject( javaObject: __value ) : nil
        }
    }

    /// final java.awt.Rectangle com.apple.laf.AquaTabbedPaneUI.fContentRect

    /// final java.awt.Rectangle com.apple.laf.AquaTabbedPaneUI.fIconRect

    /// final java.awt.Rectangle com.apple.laf.AquaTabbedPaneUI.fTextRect

    /// static com.apple.laf.AquaTabbedPaneUI$AlterRects[] com.apple.laf.AquaTabbedPaneUI.alterRects

    /// private static final int com.apple.laf.AquaTabbedPaneUI.TAB_BORDER_INSET

    /// protected javax.swing.JTabbedPane com.apple.laf.AquaTabbedPaneCopyFromBasicUI.tabPane

    private static var tabPane_FieldID: jfieldID?

    override open var tabPane: javax_swing.JTabbedPane! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "tabPane", fieldType: "Ljavax/swing/JTabbedPane;", fieldCache: &AquaTabbedPaneContrastUI.tabPane_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.JTabbedPane( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "tabPane", fieldType: "Ljavax/swing/JTabbedPane;", fieldCache: &AquaTabbedPaneContrastUI.tabPane_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected java.awt.Color com.apple.laf.AquaTabbedPaneCopyFromBasicUI.highlight

    private static var highlight_FieldID: jfieldID?

    override open var highlight: java_awt.Color! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "highlight", fieldType: "Ljava/awt/Color;", fieldCache: &AquaTabbedPaneContrastUI.highlight_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Color( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "highlight", fieldType: "Ljava/awt/Color;", fieldCache: &AquaTabbedPaneContrastUI.highlight_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected java.awt.Color com.apple.laf.AquaTabbedPaneCopyFromBasicUI.lightHighlight

    private static var lightHighlight_FieldID: jfieldID?

    override open var lightHighlight: java_awt.Color! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "lightHighlight", fieldType: "Ljava/awt/Color;", fieldCache: &AquaTabbedPaneContrastUI.lightHighlight_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Color( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "lightHighlight", fieldType: "Ljava/awt/Color;", fieldCache: &AquaTabbedPaneContrastUI.lightHighlight_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected java.awt.Color com.apple.laf.AquaTabbedPaneCopyFromBasicUI.shadow

    private static var shadow_FieldID: jfieldID?

    override open var shadow: java_awt.Color! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "shadow", fieldType: "Ljava/awt/Color;", fieldCache: &AquaTabbedPaneContrastUI.shadow_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Color( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "shadow", fieldType: "Ljava/awt/Color;", fieldCache: &AquaTabbedPaneContrastUI.shadow_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected java.awt.Color com.apple.laf.AquaTabbedPaneCopyFromBasicUI.darkShadow

    private static var darkShadow_FieldID: jfieldID?

    override open var darkShadow: java_awt.Color! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "darkShadow", fieldType: "Ljava/awt/Color;", fieldCache: &AquaTabbedPaneContrastUI.darkShadow_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Color( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "darkShadow", fieldType: "Ljava/awt/Color;", fieldCache: &AquaTabbedPaneContrastUI.darkShadow_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected java.awt.Color com.apple.laf.AquaTabbedPaneCopyFromBasicUI.focus

    private static var focus_FieldID: jfieldID?

    override open var focus: java_awt.Color! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "focus", fieldType: "Ljava/awt/Color;", fieldCache: &AquaTabbedPaneContrastUI.focus_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Color( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "focus", fieldType: "Ljava/awt/Color;", fieldCache: &AquaTabbedPaneContrastUI.focus_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// private java.awt.Color com.apple.laf.AquaTabbedPaneCopyFromBasicUI.selectedColor

    /// protected int com.apple.laf.AquaTabbedPaneCopyFromBasicUI.textIconGap

    private static var textIconGap_FieldID: jfieldID?

    override open var textIconGap: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "textIconGap", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.textIconGap_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "textIconGap", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.textIconGap_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// protected int com.apple.laf.AquaTabbedPaneCopyFromBasicUI.tabRunOverlay

    private static var tabRunOverlay_FieldID: jfieldID?

    override open var tabRunOverlay: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "tabRunOverlay", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.tabRunOverlay_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "tabRunOverlay", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.tabRunOverlay_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// protected java.awt.Insets com.apple.laf.AquaTabbedPaneCopyFromBasicUI.tabInsets

    private static var tabInsets_FieldID: jfieldID?

    override open var tabInsets: java_awt.Insets! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "tabInsets", fieldType: "Ljava/awt/Insets;", fieldCache: &AquaTabbedPaneContrastUI.tabInsets_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Insets( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "tabInsets", fieldType: "Ljava/awt/Insets;", fieldCache: &AquaTabbedPaneContrastUI.tabInsets_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected java.awt.Insets com.apple.laf.AquaTabbedPaneCopyFromBasicUI.selectedTabPadInsets

    private static var selectedTabPadInsets_FieldID: jfieldID?

    override open var selectedTabPadInsets: java_awt.Insets! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "selectedTabPadInsets", fieldType: "Ljava/awt/Insets;", fieldCache: &AquaTabbedPaneContrastUI.selectedTabPadInsets_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Insets( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "selectedTabPadInsets", fieldType: "Ljava/awt/Insets;", fieldCache: &AquaTabbedPaneContrastUI.selectedTabPadInsets_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected java.awt.Insets com.apple.laf.AquaTabbedPaneCopyFromBasicUI.tabAreaInsets

    private static var tabAreaInsets_FieldID: jfieldID?

    override open var tabAreaInsets: java_awt.Insets! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "tabAreaInsets", fieldType: "Ljava/awt/Insets;", fieldCache: &AquaTabbedPaneContrastUI.tabAreaInsets_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Insets( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "tabAreaInsets", fieldType: "Ljava/awt/Insets;", fieldCache: &AquaTabbedPaneContrastUI.tabAreaInsets_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected java.awt.Insets com.apple.laf.AquaTabbedPaneCopyFromBasicUI.contentBorderInsets

    private static var contentBorderInsets_FieldID: jfieldID?

    override open var contentBorderInsets: java_awt.Insets! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "contentBorderInsets", fieldType: "Ljava/awt/Insets;", fieldCache: &AquaTabbedPaneContrastUI.contentBorderInsets_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Insets( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "contentBorderInsets", fieldType: "Ljava/awt/Insets;", fieldCache: &AquaTabbedPaneContrastUI.contentBorderInsets_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// private boolean com.apple.laf.AquaTabbedPaneCopyFromBasicUI.tabsOverlapBorder

    /// private boolean com.apple.laf.AquaTabbedPaneCopyFromBasicUI.tabsOpaque

    /// private boolean com.apple.laf.AquaTabbedPaneCopyFromBasicUI.contentOpaque

    /// protected javax.swing.KeyStroke com.apple.laf.AquaTabbedPaneCopyFromBasicUI.upKey

    private static var upKey_FieldID: jfieldID?

    override open var upKey: javax_swing.KeyStroke! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "upKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaTabbedPaneContrastUI.upKey_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.KeyStroke( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "upKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaTabbedPaneContrastUI.upKey_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected javax.swing.KeyStroke com.apple.laf.AquaTabbedPaneCopyFromBasicUI.downKey

    private static var downKey_FieldID: jfieldID?

    override open var downKey: javax_swing.KeyStroke! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "downKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaTabbedPaneContrastUI.downKey_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.KeyStroke( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "downKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaTabbedPaneContrastUI.downKey_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected javax.swing.KeyStroke com.apple.laf.AquaTabbedPaneCopyFromBasicUI.leftKey

    private static var leftKey_FieldID: jfieldID?

    override open var leftKey: javax_swing.KeyStroke! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "leftKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaTabbedPaneContrastUI.leftKey_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.KeyStroke( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "leftKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaTabbedPaneContrastUI.leftKey_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected javax.swing.KeyStroke com.apple.laf.AquaTabbedPaneCopyFromBasicUI.rightKey

    private static var rightKey_FieldID: jfieldID?

    override open var rightKey: javax_swing.KeyStroke! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "rightKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaTabbedPaneContrastUI.rightKey_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.KeyStroke( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "rightKey", fieldType: "Ljavax/swing/KeyStroke;", fieldCache: &AquaTabbedPaneContrastUI.rightKey_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected int[] com.apple.laf.AquaTabbedPaneCopyFromBasicUI.tabRuns

    private static var tabRuns_FieldID: jfieldID?

    override open var tabRuns: [Int32]! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "tabRuns", fieldType: "[I", fieldCache: &AquaTabbedPaneContrastUI.tabRuns_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: [Int32](), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "tabRuns", fieldType: "[I", fieldCache: &AquaTabbedPaneContrastUI.tabRuns_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected int com.apple.laf.AquaTabbedPaneCopyFromBasicUI.runCount

    private static var runCount_FieldID: jfieldID?

    override open var runCount: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "runCount", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.runCount_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "runCount", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.runCount_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// protected int com.apple.laf.AquaTabbedPaneCopyFromBasicUI.selectedRun

    private static var selectedRun_FieldID: jfieldID?

    override open var selectedRun: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "selectedRun", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.selectedRun_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "selectedRun", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.selectedRun_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// protected java.awt.Rectangle[] com.apple.laf.AquaTabbedPaneCopyFromBasicUI.rects

    private static var rects_FieldID: jfieldID?

    override open var rects: [Rectangle]! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "rects", fieldType: "[Ljava/awt/Rectangle;", fieldCache: &AquaTabbedPaneContrastUI.rects_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: [Rectangle](), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "rects", fieldType: "[Ljava/awt/Rectangle;", fieldCache: &AquaTabbedPaneContrastUI.rects_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected int com.apple.laf.AquaTabbedPaneCopyFromBasicUI.maxTabHeight

    private static var maxTabHeight_FieldID: jfieldID?

    override open var maxTabHeight: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "maxTabHeight", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.maxTabHeight_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "maxTabHeight", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.maxTabHeight_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// protected int com.apple.laf.AquaTabbedPaneCopyFromBasicUI.maxTabWidth

    private static var maxTabWidth_FieldID: jfieldID?

    override open var maxTabWidth: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "maxTabWidth", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.maxTabWidth_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "maxTabWidth", fieldType: "I", fieldCache: &AquaTabbedPaneContrastUI.maxTabWidth_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// protected javax.swing.event.ChangeListener com.apple.laf.AquaTabbedPaneCopyFromBasicUI.tabChangeListener

    private static var tabChangeListener_FieldID: jfieldID?

    override open var tabChangeListener: javax_swing.ChangeListener! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "tabChangeListener", fieldType: "Ljavax/swing/event/ChangeListener;", fieldCache: &AquaTabbedPaneContrastUI.tabChangeListener_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? javax_swing.ChangeListenerForward( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = jvalue( l: newValue?.localJavaObject( &__locals ) )
            JNIField.SetObjectField( fieldName: "tabChangeListener", fieldType: "Ljavax/swing/event/ChangeListener;", fieldCache: &AquaTabbedPaneContrastUI.tabChangeListener_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected java.beans.PropertyChangeListener com.apple.laf.AquaTabbedPaneCopyFromBasicUI.propertyChangeListener

    private static var propertyChangeListener_FieldID: jfieldID?

    override open var propertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "propertyChangeListener", fieldType: "Ljava/beans/PropertyChangeListener;", fieldCache: &AquaTabbedPaneContrastUI.propertyChangeListener_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? /* java.beans.PropertyChangeListener */ UnclassedProtocolForward( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = jvalue( l: newValue?.localJavaObject( &__locals ) )
            JNIField.SetObjectField( fieldName: "propertyChangeListener", fieldType: "Ljava/beans/PropertyChangeListener;", fieldCache: &AquaTabbedPaneContrastUI.propertyChangeListener_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected java.awt.event.MouseListener com.apple.laf.AquaTabbedPaneCopyFromBasicUI.mouseListener

    private static var mouseListener_FieldID: jfieldID?

    override open var mouseListener: java_awt.MouseListener! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "mouseListener", fieldType: "Ljava/awt/event/MouseListener;", fieldCache: &AquaTabbedPaneContrastUI.mouseListener_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.MouseListenerForward( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = jvalue( l: newValue?.localJavaObject( &__locals ) )
            JNIField.SetObjectField( fieldName: "mouseListener", fieldType: "Ljava/awt/event/MouseListener;", fieldCache: &AquaTabbedPaneContrastUI.mouseListener_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// protected java.awt.event.FocusListener com.apple.laf.AquaTabbedPaneCopyFromBasicUI.focusListener

    private static var focusListener_FieldID: jfieldID?

    override open var focusListener: java_awt.FocusListener! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "focusListener", fieldType: "Ljava/awt/event/FocusListener;", fieldCache: &AquaTabbedPaneContrastUI.focusListener_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.FocusListenerForward( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = jvalue( l: newValue?.localJavaObject( &__locals ) )
            JNIField.SetObjectField( fieldName: "focusListener", fieldType: "Ljava/awt/event/FocusListener;", fieldCache: &AquaTabbedPaneContrastUI.focusListener_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// private final java.awt.Insets com.apple.laf.AquaTabbedPaneCopyFromBasicUI.currentPadInsets

    /// private final java.awt.Insets com.apple.laf.AquaTabbedPaneCopyFromBasicUI.currentTabAreaInsets

    /// private java.awt.Component com.apple.laf.AquaTabbedPaneCopyFromBasicUI.visibleComponent

    /// private java.util.Vector com.apple.laf.AquaTabbedPaneCopyFromBasicUI.htmlViews

    /// private java.util.Hashtable com.apple.laf.AquaTabbedPaneCopyFromBasicUI.mnemonicToIndexMap

    /// private javax.swing.InputMap com.apple.laf.AquaTabbedPaneCopyFromBasicUI.mnemonicInputMap

    /// private com.apple.laf.AquaTabbedPaneCopyFromBasicUI$ScrollableTabSupport com.apple.laf.AquaTabbedPaneCopyFromBasicUI.tabScroller

    /// private com.apple.laf.AquaTabbedPaneCopyFromBasicUI$TabContainer com.apple.laf.AquaTabbedPaneCopyFromBasicUI.tabContainer

    /// protected transient java.awt.Rectangle com.apple.laf.AquaTabbedPaneCopyFromBasicUI.calcRect

    private static var calcRect_FieldID: jfieldID?

    override open var calcRect: java_awt.Rectangle! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "calcRect", fieldType: "Ljava/awt/Rectangle;", fieldCache: &AquaTabbedPaneContrastUI.calcRect_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_awt.Rectangle( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "calcRect", fieldType: "Ljava/awt/Rectangle;", fieldCache: &AquaTabbedPaneContrastUI.calcRect_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// private int com.apple.laf.AquaTabbedPaneCopyFromBasicUI.focusIndex

    /// private com.apple.laf.AquaTabbedPaneCopyFromBasicUI$Handler com.apple.laf.AquaTabbedPaneCopyFromBasicUI.handler

    /// private int com.apple.laf.AquaTabbedPaneCopyFromBasicUI.rolloverTabIndex

    /// private boolean com.apple.laf.AquaTabbedPaneCopyFromBasicUI.isRunsDirty

    /// private boolean com.apple.laf.AquaTabbedPaneCopyFromBasicUI.calculatedBaseline

    /// private int com.apple.laf.AquaTabbedPaneCopyFromBasicUI.baseline

    /// private static int[] com.apple.laf.AquaTabbedPaneCopyFromBasicUI.xCropLen

    /// private static int[] com.apple.laf.AquaTabbedPaneCopyFromBasicUI.yCropLen

    /// private static final int com.apple.laf.AquaTabbedPaneCopyFromBasicUI.CROP_SEGMENT

    /// public static final int javax.swing.SwingConstants.CENTER

    /// public static final int javax.swing.SwingConstants.TOP

    /// public static final int javax.swing.SwingConstants.LEFT

    /// public static final int javax.swing.SwingConstants.BOTTOM

    /// public static final int javax.swing.SwingConstants.RIGHT

    /// public static final int javax.swing.SwingConstants.NORTH

    /// public static final int javax.swing.SwingConstants.NORTH_EAST

    /// public static final int javax.swing.SwingConstants.EAST

    /// public static final int javax.swing.SwingConstants.SOUTH_EAST

    /// public static final int javax.swing.SwingConstants.SOUTH

    /// public static final int javax.swing.SwingConstants.SOUTH_WEST

    /// public static final int javax.swing.SwingConstants.WEST

    /// public static final int javax.swing.SwingConstants.NORTH_WEST

    /// public static final int javax.swing.SwingConstants.HORIZONTAL

    /// public static final int javax.swing.SwingConstants.VERTICAL

    /// public static final int javax.swing.SwingConstants.LEADING

    /// public static final int javax.swing.SwingConstants.TRAILING

    /// public static final int javax.swing.SwingConstants.NEXT

    /// public static final int javax.swing.SwingConstants.PREVIOUS

    /// public com.apple.laf.AquaTabbedPaneContrastUI()

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "com/apple/laf/AquaTabbedPaneContrastUI", classCache: &AquaTabbedPaneContrastUI.AquaTabbedPaneContrastUIJNIClass, methodSig: "()V", methodCache: &AquaTabbedPaneContrastUI.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// protected apple.laf.JRSUIConstants$State com.apple.laf.AquaTabbedPaneContrastUI.getState(int,boolean,boolean)

    private static var getState_MethodID_2: jmethodID?

    override open func getState( arg0: Int, arg1: Bool, arg2: Bool ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
        var __args = [jvalue]( repeating: jvalue(), count: 3 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        __args[2] = JNIType.encode( value: arg2, locals: &__locals )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getState", methodSig: "(IZZ)Lapple/laf/JRSUIConstants$State;", methodCache: &AquaTabbedPaneContrastUI.getState_MethodID_2, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? /* apple.laf.JRSUIConstants$State */ UnclassedObject( javaObject: __return ) : nil
    }

    override open func getState( _ _arg0: Int, _ _arg1: Bool, _ _arg2: Bool ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
        return getState( arg0: _arg0, arg1: _arg1, arg2: _arg2 )
    }

    /// public static javax.swing.plaf.ComponentUI com.apple.laf.AquaTabbedPaneContrastUI.createUI(javax.swing.JComponent)

    private static var createUI_MethodID_3: jmethodID?

    override open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "com/apple/laf/AquaTabbedPaneContrastUI", classCache: &AquaTabbedPaneContrastUIJNIClass, methodName: "createUI", methodSig: "(Ljavax/swing/JComponent;)Ljavax/swing/plaf/ComponentUI;", methodCache: &createUI_MethodID_3, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? javax_swing.ComponentUI( javaObject: __return ) : nil
    }

    override open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
        return createUI( arg0: _arg0 )
    }

    /// protected void com.apple.laf.AquaTabbedPaneContrastUI.paintTitle(java.awt.Graphics2D,java.awt.Font,java.awt.FontMetrics,java.awt.Rectangle,int,java.lang.String)

    private static var paintTitle_MethodID_4: jmethodID?

    override open func paintTitle( arg0: java_awt.Graphics2D?, arg1: java_awt.Font?, arg2: java_awt.FontMetrics?, arg3: java_awt.Rectangle?, arg4: Int, arg5: String? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 6 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        __args[2] = JNIType.encode( value: arg2, locals: &__locals )
        __args[3] = JNIType.encode( value: arg3, locals: &__locals )
        __args[4] = JNIType.encode( value: arg4, locals: &__locals )
        __args[5] = JNIType.encode( value: arg5, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "paintTitle", methodSig: "(Ljava/awt/Graphics2D;Ljava/awt/Font;Ljava/awt/FontMetrics;Ljava/awt/Rectangle;ILjava/lang/String;)V", methodCache: &AquaTabbedPaneContrastUI.paintTitle_MethodID_4, args: &__args, locals: &__locals )
    }

    override open func paintTitle( _ _arg0: java_awt.Graphics2D?, _ _arg1: java_awt.Font?, _ _arg2: java_awt.FontMetrics?, _ _arg3: java_awt.Rectangle?, _ _arg4: Int, _ _arg5: String? ) {
        paintTitle( arg0: _arg0, arg1: _arg1, arg2: _arg2, arg3: _arg3, arg4: _arg4, arg5: _arg5 )
    }

    /// protected static java.awt.Color com.apple.laf.AquaTabbedPaneContrastUI.getSelectedTabTitleColor(boolean,boolean)

    private static var getSelectedTabTitleColor_MethodID_5: jmethodID?

    open class func getSelectedTabTitleColor( arg0: Bool, arg1: Bool ) -> java_awt.Color! {
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "com/apple/laf/AquaTabbedPaneContrastUI", classCache: &AquaTabbedPaneContrastUIJNIClass, methodName: "getSelectedTabTitleColor", methodSig: "(ZZ)Ljava/awt/Color;", methodCache: &getSelectedTabTitleColor_MethodID_5, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? java_awt.Color( javaObject: __return ) : nil
    }

    open class func getSelectedTabTitleColor( _ _arg0: Bool, _ _arg1: Bool ) -> java_awt.Color! {
        return getSelectedTabTitleColor( arg0: _arg0, arg1: _arg1 )
    }

    /// protected static java.awt.Color com.apple.laf.AquaTabbedPaneContrastUI.getSelectedTabTitleShadowColor(boolean)

    private static var getSelectedTabTitleShadowColor_MethodID_6: jmethodID?

    open class func getSelectedTabTitleShadowColor( arg0: Bool ) -> java_awt.Color! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "com/apple/laf/AquaTabbedPaneContrastUI", classCache: &AquaTabbedPaneContrastUIJNIClass, methodName: "getSelectedTabTitleShadowColor", methodSig: "(Z)Ljava/awt/Color;", methodCache: &getSelectedTabTitleShadowColor_MethodID_6, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? java_awt.Color( javaObject: __return ) : nil
    }

    open class func getSelectedTabTitleShadowColor( _ _arg0: Bool ) -> java_awt.Color! {
        return getSelectedTabTitleShadowColor( arg0: _arg0 )
    }

    /// protected static java.awt.Color com.apple.laf.AquaTabbedPaneContrastUI.getNonSelectedTabTitleColor()

    private static var getNonSelectedTabTitleColor_MethodID_7: jmethodID?

    open class func getNonSelectedTabTitleColor() -> java_awt.Color! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "com/apple/laf/AquaTabbedPaneContrastUI", classCache: &AquaTabbedPaneContrastUIJNIClass, methodName: "getNonSelectedTabTitleColor", methodSig: "()Ljava/awt/Color;", methodCache: &getNonSelectedTabTitleColor_MethodID_7, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? java_awt.Color( javaObject: __return ) : nil
    }


    /// protected boolean com.apple.laf.AquaTabbedPaneContrastUI.isPressedAt(int)

    private static var isPressedAt_MethodID_8: jmethodID?

    open func isPressedAt( arg0: Int ) -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "isPressedAt", methodSig: "(I)Z", methodCache: &AquaTabbedPaneContrastUI.isPressedAt_MethodID_8, args: &__args, locals: &__locals )
        return JNIType.decode( type: Bool(), from: __return )
    }

    open func isPressedAt( _ _arg0: Int ) -> Bool {
        return isPressedAt( arg0: _arg0 )
    }

    /// protected boolean com.apple.laf.AquaTabbedPaneContrastUI.shouldRepaintSelectedTabOnMouseDown()

    private static var shouldRepaintSelectedTabOnMouseDown_MethodID_9: jmethodID?

    override open func shouldRepaintSelectedTabOnMouseDown() -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "shouldRepaintSelectedTabOnMouseDown", methodSig: "()Z", methodCache: &AquaTabbedPaneContrastUI.shouldRepaintSelectedTabOnMouseDown_MethodID_9, args: &__args, locals: &__locals )
        return JNIType.decode( type: Bool(), from: __return )
    }


    /// protected boolean com.apple.laf.AquaTabbedPaneContrastUI.shouldPressTabsOnMouseDrag()

    private static var shouldPressTabsOnMouseDrag_MethodID_10: jmethodID?

    override open func shouldPressTabsOnMouseDrag() -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "shouldPressTabsOnMouseDrag", methodSig: "()Z", methodCache: &AquaTabbedPaneContrastUI.shouldPressTabsOnMouseDrag_MethodID_10, args: &__args, locals: &__locals )
        return JNIType.decode( type: Bool(), from: __return )
    }


    /// protected apple.laf.JRSUIConstants$SegmentTrailingSeparator com.apple.laf.AquaTabbedPaneContrastUI.getSegmentTrailingSeparator(int,int)

    private static var getSegmentTrailingSeparator_MethodID_11: jmethodID?

    override open func getSegmentTrailingSeparator( arg0: Int, arg1: Int ) -> /* apple.laf.JRSUIConstants$SegmentTrailingSeparator */ UnclassedObject! {
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getSegmentTrailingSeparator", methodSig: "(II)Lapple/laf/JRSUIConstants$SegmentTrailingSeparator;", methodCache: &AquaTabbedPaneContrastUI.getSegmentTrailingSeparator_MethodID_11, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? /* apple.laf.JRSUIConstants$SegmentTrailingSeparator */ UnclassedObject( javaObject: __return ) : nil
    }

    override open func getSegmentTrailingSeparator( _ _arg0: Int, _ _arg1: Int ) -> /* apple.laf.JRSUIConstants$SegmentTrailingSeparator */ UnclassedObject! {
        return getSegmentTrailingSeparator( arg0: _arg0, arg1: _arg1 )
    }

    /// protected apple.laf.JRSUIConstants$SegmentLeadingSeparator com.apple.laf.AquaTabbedPaneContrastUI.getSegmentLeadingSeparator(int,int)

    private static var getSegmentLeadingSeparator_MethodID_12: jmethodID?

    override open func getSegmentLeadingSeparator( arg0: Int, arg1: Int ) -> /* apple.laf.JRSUIConstants$SegmentLeadingSeparator */ UnclassedObject! {
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getSegmentLeadingSeparator", methodSig: "(II)Lapple/laf/JRSUIConstants$SegmentLeadingSeparator;", methodCache: &AquaTabbedPaneContrastUI.getSegmentLeadingSeparator_MethodID_12, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? /* apple.laf.JRSUIConstants$SegmentLeadingSeparator */ UnclassedObject( javaObject: __return ) : nil
    }

    override open func getSegmentLeadingSeparator( _ _arg0: Int, _ _arg1: Int ) -> /* apple.laf.JRSUIConstants$SegmentLeadingSeparator */ UnclassedObject! {
        return getSegmentLeadingSeparator( arg0: _arg0, arg1: _arg1 )
    }

}
