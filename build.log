Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTableHeaderUI.swift:145:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicTableHeaderUI:8:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicTableHeaderUI:9:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaListUI.swift:282:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicListUI:16:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicListUI:17:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaButtonUI.swift:107:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicButtonUI:9:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicButtonUI:10:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTableHeaderUI.swift:145:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicTableHeaderUI:8:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicTableHeaderUI:9:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaListUI.swift:282:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicListUI:16:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicListUI:17:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaButtonUI.swift:107:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicButtonUI:9:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicButtonUI:10:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaScrollBarUI.swift:259:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTextPaneUI.swift:64:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicTextPaneUI:7:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicTextPaneUI:8:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaLookAndFeel.swift:93:24: error: declaration 'initComponentDefaults(arg1:)' has different argument names from any potential overrides
    override open func initComponentDefaults( arg1: javax_swing.UIDefaults? ) {
                       ^
javax_swing.BasicLookAndFeel:8:15: note: potential overridden instance method 'initComponentDefaults(arg0:)' here
    open func initComponentDefaults(arg0: javax_swing.UIDefaults?)
              ^
javax_swing.BasicLookAndFeel:9:15: note: potential overridden instance method 'initComponentDefaults' here
    open func initComponentDefaults(_ _arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaLookAndFeel.swift:108:24: error: declaration 'initSystemColorDefaults(arg1:)' has different argument names from any potential overrides
    override open func initSystemColorDefaults( arg1: javax_swing.UIDefaults? ) {
                       ^
javax_swing.BasicLookAndFeel:10:15: note: potential overridden instance method 'initSystemColorDefaults(arg0:)' here
    open func initSystemColorDefaults(arg0: javax_swing.UIDefaults?)
              ^
javax_swing.BasicLookAndFeel:11:15: note: potential overridden instance method 'initSystemColorDefaults' here
    open func initSystemColorDefaults(_ _arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaLookAndFeel.swift:123:24: error: declaration 'initClassDefaults(arg1:)' has different argument names from any potential overrides
    override open func initClassDefaults( arg1: javax_swing.UIDefaults? ) {
                       ^
javax_swing.BasicLookAndFeel:12:15: note: potential overridden instance method 'initClassDefaults(arg0:)' here
    open func initClassDefaults(arg0: javax_swing.UIDefaults?)
              ^
javax_swing.BasicLookAndFeel:13:15: note: potential overridden instance method 'initClassDefaults' here
    open func initClassDefaults(_ _arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:651:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicInternalFrameUI:18:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicInternalFrameUI:19:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaInternalFrameUI.swift:933:24: error: declaration 'installMouseHandlers(arg1:)' has different argument names from any potential overrides
    override open func installMouseHandlers( arg1: javax_swing.JComponent? ) {
                       ^
javax_swing.BasicInternalFrameUI:51:15: note: potential overridden instance method 'installMouseHandlers(arg0:)' here
    open func installMouseHandlers(arg0: javax_swing.JComponent?)
              ^
javax_swing.BasicInternalFrameUI:52:15: note: potential overridden instance method 'installMouseHandlers' here
    open func installMouseHandlers(_ _arg0: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:948:24: error: declaration 'deinstallMouseHandlers(arg1:)' has different argument names from any potential overrides
    override open func deinstallMouseHandlers( arg1: javax_swing.JComponent? ) {
                       ^
javax_swing.BasicInternalFrameUI:49:15: note: potential overridden instance method 'deinstallMouseHandlers(arg0:)' here
    open func deinstallMouseHandlers(arg0: javax_swing.JComponent?)
              ^
javax_swing.BasicInternalFrameUI:50:15: note: potential overridden instance method 'deinstallMouseHandlers' here
    open func deinstallMouseHandlers(_ _arg0: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:965:24: error: declaration 'replacePane(arg1:arg2:)' has different argument names from any potential overrides
    override open func replacePane( arg1: javax_swing.JComponent?, arg2: javax_swing.JComponent? ) {
                       ^
javax_swing.BasicInternalFrameUI:47:15: note: potential overridden instance method 'replacePane(arg0:arg1:)' here
    open func replacePane(arg0: javax_swing.JComponent?, arg1: javax_swing.JComponent?)
              ^
javax_swing.BasicInternalFrameUI:48:15: note: potential overridden instance method 'replacePane' here
    open func replacePane(_ _arg0: javax_swing.JComponent?, _ _arg1: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:981:24: error: declaration 'createBorderListener(arg1:)' has different argument names from any potential overrides
    override open func createBorderListener( arg1: javax_swing.JInternalFrame? ) -> javax_swing.MouseInputAdapter! {
                       ^
javax_swing.BasicInternalFrameUI:61:15: note: potential overridden instance method 'createBorderListener(arg0:)' here
    open func createBorderListener(arg0: javax_swing.JInternalFrame?) -> javax_swing.MouseInputAdapter!
              ^
javax_swing.BasicInternalFrameUI:62:15: note: potential overridden instance method 'createBorderListener' here
    open func createBorderListener(_ _arg0: javax_swing.JInternalFrame?) -> javax_swing.MouseInputAdapter!
              ^
com_apple/Sources/AquaPopupMenuUI.swift:74:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicPopupMenuUI:6:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicPopupMenuUI:7:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/ScreenMenuBar.swift:9:12: error: type 'ScreenMenuBar' does not conform to protocol 'ContainerListener'
open class ScreenMenuBar: java_awt.MenuBar, java_awt.ContainerListener, java_awt.ComponentListener {
           ^
java_awt.ContainerListener:7:17: note: multiple matching functions named 'componentAdded(arg0:)' with type '(ContainerEvent?) -> ()'
    public func componentAdded(arg0: java_awt.ContainerEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:170:15: note: rename to 'componentAdded(arg0:)' to satisfy this requirement
    open func componentAdded( arg1: java_awt.ContainerEvent? ) {
              ^
    @objc(componentAddedWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:177:15: note: rename to 'componentAdded(arg0:)' to satisfy this requirement
    open func componentAdded( _ _arg1: java_awt.ContainerEvent? ) {
              ^               ~
    @objc(componentAddedWithArg0:)  arg0
java_awt.ContainerListener:10:17: note: multiple matching functions named 'componentRemoved(arg0:)' with type '(ContainerEvent?) -> ()'
    public func componentRemoved(arg0: java_awt.ContainerEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:185:15: note: rename to 'componentRemoved(arg0:)' to satisfy this requirement
    open func componentRemoved( arg1: java_awt.ContainerEvent? ) {
              ^
    @objc(componentRemovedWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:192:15: note: rename to 'componentRemoved(arg0:)' to satisfy this requirement
    open func componentRemoved( _ _arg1: java_awt.ContainerEvent? ) {
              ^                 ~
    @objc(componentRemovedWithArg0:)  arg0
com_apple/Sources/ScreenMenuBar.swift:9:12: error: type 'ScreenMenuBar' does not conform to protocol 'ComponentListener'
open class ScreenMenuBar: java_awt.MenuBar, java_awt.ContainerListener, java_awt.ComponentListener {
           ^
java_awt.ComponentListener:7:17: note: multiple matching functions named 'componentResized(arg0:)' with type '(ComponentEvent?) -> ()'
    public func componentResized(arg0: java_awt.ComponentEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:200:15: note: rename to 'componentResized(arg0:)' to satisfy this requirement
    open func componentResized( arg1: java_awt.ComponentEvent? ) {
              ^
    @objc(componentResizedWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:207:15: note: rename to 'componentResized(arg0:)' to satisfy this requirement
    open func componentResized( _ _arg1: java_awt.ComponentEvent? ) {
              ^                 ~
    @objc(componentResizedWithArg0:)  arg0
java_awt.ComponentListener:10:17: note: multiple matching functions named 'componentMoved(arg0:)' with type '(ComponentEvent?) -> ()'
    public func componentMoved(arg0: java_awt.ComponentEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:215:15: note: rename to 'componentMoved(arg0:)' to satisfy this requirement
    open func componentMoved( arg1: java_awt.ComponentEvent? ) {
              ^
    @objc(componentMovedWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:222:15: note: rename to 'componentMoved(arg0:)' to satisfy this requirement
    open func componentMoved( _ _arg1: java_awt.ComponentEvent? ) {
              ^               ~
    @objc(componentMovedWithArg0:)  arg0
java_awt.ComponentListener:13:17: note: multiple matching functions named 'componentShown(arg0:)' with type '(ComponentEvent?) -> ()'
    public func componentShown(arg0: java_awt.ComponentEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:230:15: note: rename to 'componentShown(arg0:)' to satisfy this requirement
    open func componentShown( arg1: java_awt.ComponentEvent? ) {
              ^
    @objc(componentShownWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:237:15: note: rename to 'componentShown(arg0:)' to satisfy this requirement
    open func componentShown( _ _arg1: java_awt.ComponentEvent? ) {
              ^               ~
    @objc(componentShownWithArg0:)  arg0
java_awt.ComponentListener:16:17: note: multiple matching functions named 'componentHidden(arg0:)' with type '(ComponentEvent?) -> ()'
    public func componentHidden(arg0: java_awt.ComponentEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:245:15: note: rename to 'componentHidden(arg0:)' to satisfy this requirement
    open func componentHidden( arg1: java_awt.ComponentEvent? ) {
              ^
    @objc(componentHiddenWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:252:15: note: rename to 'componentHidden(arg0:)' to satisfy this requirement
    open func componentHidden( _ _arg1: java_awt.ComponentEvent? ) {
              ^                ~
    @objc(componentHiddenWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTreeUI.swift:745:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicTreeUI:39:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicTreeUI:40:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTreeUI.swift:872:24: error: declaration 'paintVerticalPartOfLeg(arg1:arg2:arg3:arg4:)' has different argument names from any potential overrides
    override open func paintVerticalPartOfLeg( arg1: java_awt.Graphics?, arg2: java_awt.Rectangle?, arg3: java_awt.Insets?, arg4: javax_swing.TreePath? ) {
                       ^
javax_swing.BasicTreeUI:113:15: note: potential overridden instance method 'paintVerticalPartOfLeg(arg0:arg1:arg2:arg3:)' here
    open func paintVerticalPartOfLeg(arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: javax_swing.TreePath?)
              ^
javax_swing.BasicTreeUI:114:15: note: potential overridden instance method 'paintVerticalPartOfLeg' here
    open func paintVerticalPartOfLeg(_ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: javax_swing.TreePath?)
              ^
com_apple/Sources/AquaTreeUI.swift:890:24: error: declaration 'paintHorizontalPartOfLeg(arg1:arg2:arg3:arg4:arg5:arg6:arg7:arg8:arg9:)' has different argument names from any potential overrides
    override open func paintHorizontalPartOfLeg( arg1: java_awt.Graphics?, arg2: java_awt.Rectangle?, arg3: java_awt.Insets?, arg4: java_awt.Rectangle?, arg5: javax_swing.TreePath?, arg6: Int, arg7: Bool, arg8: Bool, arg9: Bool ) {
                       ^
javax_swing.BasicTreeUI:111:15: note: potential overridden instance method 'paintHorizontalPartOfLeg(arg0:arg1:arg2:arg3:arg4:arg5:arg6:arg7:arg8:)' here
    open func paintHorizontalPartOfLeg(arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: java_awt.Rectangle?, arg4: javax_swing.TreePath?, arg5: Int, arg6: Bool, arg7: Bool, arg8: Bool)
              ^
javax_swing.BasicTreeUI:112:15: note: potential overridden instance method 'paintHorizontalPartOfLeg' here
    open func paintHorizontalPartOfLeg(_ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: java_awt.Rectangle?, _ _arg4: javax_swing.TreePath?, _ _arg5: Int, _ _arg6: Bool, _ _arg7: Bool, _ _arg8: Bool)
              ^
com_apple/Sources/AquaTreeUI.swift:913:24: error: declaration 'paintExpandControl(arg1:arg2:arg3:arg4:arg5:arg6:arg7:arg8:arg9:)' has different argument names from any potential overrides
    override open func paintExpandControl( arg1: java_awt.Graphics?, arg2: java_awt.Rectangle?, arg3: java_awt.Insets?, arg4: java_awt.Rectangle?, arg5: javax_swing.TreePath?, arg6: Int, arg7: Bool, arg8: Bool, arg9: Bool ) {
                       ^
javax_swing.BasicTreeUI:115:15: note: potential overridden instance method 'paintExpandControl(arg0:arg1:arg2:arg3:arg4:arg5:arg6:arg7:arg8:)' here
    open func paintExpandControl(arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: java_awt.Rectangle?, arg4: javax_swing.TreePath?, arg5: Int, arg6: Bool, arg7: Bool, arg8: Bool)
              ^
javax_swing.BasicTreeUI:116:15: note: potential overridden instance method 'paintExpandControl' here
    open func paintExpandControl(_ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: java_awt.Rectangle?, _ _arg4: javax_swing.TreePath?, _ _arg5: Int, _ _arg6: Bool, _ _arg7: Bool, _ _arg8: Bool)
              ^
com_apple/Sources/AquaTreeUI.swift:955:24: error: declaration 'handleExpandControlClick(arg1:arg2:arg3:)' has different argument names from any potential overrides
    override open func handleExpandControlClick( arg1: javax_swing.TreePath?, arg2: Int, arg3: Int ) {
                       ^
javax_swing.BasicTreeUI:160:15: note: potential overridden instance method 'handleExpandControlClick(arg0:arg1:arg2:)' here
    open func handleExpandControlClick(arg0: javax_swing.TreePath?, arg1: Int, arg2: Int)
              ^
javax_swing.BasicTreeUI:161:15: note: potential overridden instance method 'handleExpandControlClick' here
    open func handleExpandControlClick(_ _arg0: javax_swing.TreePath?, _ _arg1: Int, _ _arg2: Int)
              ^
com_apple/Sources/AquaTreeUI.swift:972:24: error: declaration 'isToggleSelectionEvent(arg1:)' has different argument names from any potential overrides
    override open func isToggleSelectionEvent( arg1: java_awt.MouseEvent? ) -> Bool {
                       ^
javax_swing.BasicTreeUI:164:15: note: potential overridden instance method 'isToggleSelectionEvent(arg0:)' here
    open func isToggleSelectionEvent(arg0: java_awt.MouseEvent?) -> Bool
              ^
javax_swing.BasicTreeUI:165:15: note: potential overridden instance method 'isToggleSelectionEvent' here
    open func isToggleSelectionEvent(_ _arg0: java_awt.MouseEvent?) -> Bool
              ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTableHeaderUI.swift:145:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicTableHeaderUI:8:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicTableHeaderUI:9:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaListUI.swift:282:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicListUI:16:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicListUI:17:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaButtonUI.swift:107:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicButtonUI:9:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicButtonUI:10:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaScrollBarUI.swift:259:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTextPaneUI.swift:64:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicTextPaneUI:7:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicTextPaneUI:8:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaLookAndFeel.swift:93:24: error: declaration 'initComponentDefaults(arg1:)' has different argument names from any potential overrides
    override open func initComponentDefaults( arg1: javax_swing.UIDefaults? ) {
                       ^
javax_swing.BasicLookAndFeel:8:15: note: potential overridden instance method 'initComponentDefaults(arg0:)' here
    open func initComponentDefaults(arg0: javax_swing.UIDefaults?)
              ^
javax_swing.BasicLookAndFeel:9:15: note: potential overridden instance method 'initComponentDefaults' here
    open func initComponentDefaults(_ _arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaLookAndFeel.swift:108:24: error: declaration 'initSystemColorDefaults(arg1:)' has different argument names from any potential overrides
    override open func initSystemColorDefaults( arg1: javax_swing.UIDefaults? ) {
                       ^
javax_swing.BasicLookAndFeel:10:15: note: potential overridden instance method 'initSystemColorDefaults(arg0:)' here
    open func initSystemColorDefaults(arg0: javax_swing.UIDefaults?)
              ^
javax_swing.BasicLookAndFeel:11:15: note: potential overridden instance method 'initSystemColorDefaults' here
    open func initSystemColorDefaults(_ _arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaLookAndFeel.swift:123:24: error: declaration 'initClassDefaults(arg1:)' has different argument names from any potential overrides
    override open func initClassDefaults( arg1: javax_swing.UIDefaults? ) {
                       ^
javax_swing.BasicLookAndFeel:12:15: note: potential overridden instance method 'initClassDefaults(arg0:)' here
    open func initClassDefaults(arg0: javax_swing.UIDefaults?)
              ^
javax_swing.BasicLookAndFeel:13:15: note: potential overridden instance method 'initClassDefaults' here
    open func initClassDefaults(_ _arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:651:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicInternalFrameUI:18:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicInternalFrameUI:19:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaInternalFrameUI.swift:933:24: error: declaration 'installMouseHandlers(arg1:)' has different argument names from any potential overrides
    override open func installMouseHandlers( arg1: javax_swing.JComponent? ) {
                       ^
javax_swing.BasicInternalFrameUI:51:15: note: potential overridden instance method 'installMouseHandlers(arg0:)' here
    open func installMouseHandlers(arg0: javax_swing.JComponent?)
              ^
javax_swing.BasicInternalFrameUI:52:15: note: potential overridden instance method 'installMouseHandlers' here
    open func installMouseHandlers(_ _arg0: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:948:24: error: declaration 'deinstallMouseHandlers(arg1:)' has different argument names from any potential overrides
    override open func deinstallMouseHandlers( arg1: javax_swing.JComponent? ) {
                       ^
javax_swing.BasicInternalFrameUI:49:15: note: potential overridden instance method 'deinstallMouseHandlers(arg0:)' here
    open func deinstallMouseHandlers(arg0: javax_swing.JComponent?)
              ^
javax_swing.BasicInternalFrameUI:50:15: note: potential overridden instance method 'deinstallMouseHandlers' here
    open func deinstallMouseHandlers(_ _arg0: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:965:24: error: declaration 'replacePane(arg1:arg2:)' has different argument names from any potential overrides
    override open func replacePane( arg1: javax_swing.JComponent?, arg2: javax_swing.JComponent? ) {
                       ^
javax_swing.BasicInternalFrameUI:47:15: note: potential overridden instance method 'replacePane(arg0:arg1:)' here
    open func replacePane(arg0: javax_swing.JComponent?, arg1: javax_swing.JComponent?)
              ^
javax_swing.BasicInternalFrameUI:48:15: note: potential overridden instance method 'replacePane' here
    open func replacePane(_ _arg0: javax_swing.JComponent?, _ _arg1: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:981:24: error: declaration 'createBorderListener(arg1:)' has different argument names from any potential overrides
    override open func createBorderListener( arg1: javax_swing.JInternalFrame? ) -> javax_swing.MouseInputAdapter! {
                       ^
javax_swing.BasicInternalFrameUI:61:15: note: potential overridden instance method 'createBorderListener(arg0:)' here
    open func createBorderListener(arg0: javax_swing.JInternalFrame?) -> javax_swing.MouseInputAdapter!
              ^
javax_swing.BasicInternalFrameUI:62:15: note: potential overridden instance method 'createBorderListener' here
    open func createBorderListener(_ _arg0: javax_swing.JInternalFrame?) -> javax_swing.MouseInputAdapter!
              ^
com_apple/Sources/AquaPopupMenuUI.swift:74:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicPopupMenuUI:6:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicPopupMenuUI:7:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/ScreenMenuBar.swift:9:12: error: type 'ScreenMenuBar' does not conform to protocol 'ContainerListener'
open class ScreenMenuBar: java_awt.MenuBar, java_awt.ContainerListener, java_awt.ComponentListener {
           ^
java_awt.ContainerListener:7:17: note: multiple matching functions named 'componentAdded(arg0:)' with type '(ContainerEvent?) -> ()'
    public func componentAdded(arg0: java_awt.ContainerEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:170:15: note: rename to 'componentAdded(arg0:)' to satisfy this requirement
    open func componentAdded( arg1: java_awt.ContainerEvent? ) {
              ^
    @objc(componentAddedWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:177:15: note: rename to 'componentAdded(arg0:)' to satisfy this requirement
    open func componentAdded( _ _arg1: java_awt.ContainerEvent? ) {
              ^               ~
    @objc(componentAddedWithArg0:)  arg0
java_awt.ContainerListener:10:17: note: multiple matching functions named 'componentRemoved(arg0:)' with type '(ContainerEvent?) -> ()'
    public func componentRemoved(arg0: java_awt.ContainerEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:185:15: note: rename to 'componentRemoved(arg0:)' to satisfy this requirement
    open func componentRemoved( arg1: java_awt.ContainerEvent? ) {
              ^
    @objc(componentRemovedWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:192:15: note: rename to 'componentRemoved(arg0:)' to satisfy this requirement
    open func componentRemoved( _ _arg1: java_awt.ContainerEvent? ) {
              ^                 ~
    @objc(componentRemovedWithArg0:)  arg0
com_apple/Sources/ScreenMenuBar.swift:9:12: error: type 'ScreenMenuBar' does not conform to protocol 'ComponentListener'
open class ScreenMenuBar: java_awt.MenuBar, java_awt.ContainerListener, java_awt.ComponentListener {
           ^
java_awt.ComponentListener:7:17: note: multiple matching functions named 'componentResized(arg0:)' with type '(ComponentEvent?) -> ()'
    public func componentResized(arg0: java_awt.ComponentEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:200:15: note: rename to 'componentResized(arg0:)' to satisfy this requirement
    open func componentResized( arg1: java_awt.ComponentEvent? ) {
              ^
    @objc(componentResizedWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:207:15: note: rename to 'componentResized(arg0:)' to satisfy this requirement
    open func componentResized( _ _arg1: java_awt.ComponentEvent? ) {
              ^                 ~
    @objc(componentResizedWithArg0:)  arg0
java_awt.ComponentListener:10:17: note: multiple matching functions named 'componentMoved(arg0:)' with type '(ComponentEvent?) -> ()'
    public func componentMoved(arg0: java_awt.ComponentEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:215:15: note: rename to 'componentMoved(arg0:)' to satisfy this requirement
    open func componentMoved( arg1: java_awt.ComponentEvent? ) {
              ^
    @objc(componentMovedWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:222:15: note: rename to 'componentMoved(arg0:)' to satisfy this requirement
    open func componentMoved( _ _arg1: java_awt.ComponentEvent? ) {
              ^               ~
    @objc(componentMovedWithArg0:)  arg0
java_awt.ComponentListener:13:17: note: multiple matching functions named 'componentShown(arg0:)' with type '(ComponentEvent?) -> ()'
    public func componentShown(arg0: java_awt.ComponentEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:230:15: note: rename to 'componentShown(arg0:)' to satisfy this requirement
    open func componentShown( arg1: java_awt.ComponentEvent? ) {
              ^
    @objc(componentShownWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:237:15: note: rename to 'componentShown(arg0:)' to satisfy this requirement
    open func componentShown( _ _arg1: java_awt.ComponentEvent? ) {
              ^               ~
    @objc(componentShownWithArg0:)  arg0
java_awt.ComponentListener:16:17: note: multiple matching functions named 'componentHidden(arg0:)' with type '(ComponentEvent?) -> ()'
    public func componentHidden(arg0: java_awt.ComponentEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:245:15: note: rename to 'componentHidden(arg0:)' to satisfy this requirement
    open func componentHidden( arg1: java_awt.ComponentEvent? ) {
              ^
    @objc(componentHiddenWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:252:15: note: rename to 'componentHidden(arg0:)' to satisfy this requirement
    open func componentHidden( _ _arg1: java_awt.ComponentEvent? ) {
              ^                ~
    @objc(componentHiddenWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTreeUI.swift:745:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicTreeUI:39:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicTreeUI:40:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTreeUI.swift:872:24: error: declaration 'paintVerticalPartOfLeg(arg1:arg2:arg3:arg4:)' has different argument names from any potential overrides
    override open func paintVerticalPartOfLeg( arg1: java_awt.Graphics?, arg2: java_awt.Rectangle?, arg3: java_awt.Insets?, arg4: javax_swing.TreePath? ) {
                       ^
javax_swing.BasicTreeUI:113:15: note: potential overridden instance method 'paintVerticalPartOfLeg(arg0:arg1:arg2:arg3:)' here
    open func paintVerticalPartOfLeg(arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: javax_swing.TreePath?)
              ^
javax_swing.BasicTreeUI:114:15: note: potential overridden instance method 'paintVerticalPartOfLeg' here
    open func paintVerticalPartOfLeg(_ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: javax_swing.TreePath?)
              ^
com_apple/Sources/AquaTreeUI.swift:890:24: error: declaration 'paintHorizontalPartOfLeg(arg1:arg2:arg3:arg4:arg5:arg6:arg7:arg8:arg9:)' has different argument names from any potential overrides
    override open func paintHorizontalPartOfLeg( arg1: java_awt.Graphics?, arg2: java_awt.Rectangle?, arg3: java_awt.Insets?, arg4: java_awt.Rectangle?, arg5: javax_swing.TreePath?, arg6: Int, arg7: Bool, arg8: Bool, arg9: Bool ) {
                       ^
javax_swing.BasicTreeUI:111:15: note: potential overridden instance method 'paintHorizontalPartOfLeg(arg0:arg1:arg2:arg3:arg4:arg5:arg6:arg7:arg8:)' here
    open func paintHorizontalPartOfLeg(arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: java_awt.Rectangle?, arg4: javax_swing.TreePath?, arg5: Int, arg6: Bool, arg7: Bool, arg8: Bool)
              ^
javax_swing.BasicTreeUI:112:15: note: potential overridden instance method 'paintHorizontalPartOfLeg' here
    open func paintHorizontalPartOfLeg(_ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: java_awt.Rectangle?, _ _arg4: javax_swing.TreePath?, _ _arg5: Int, _ _arg6: Bool, _ _arg7: Bool, _ _arg8: Bool)
              ^
com_apple/Sources/AquaTreeUI.swift:913:24: error: declaration 'paintExpandControl(arg1:arg2:arg3:arg4:arg5:arg6:arg7:arg8:arg9:)' has different argument names from any potential overrides
    override open func paintExpandControl( arg1: java_awt.Graphics?, arg2: java_awt.Rectangle?, arg3: java_awt.Insets?, arg4: java_awt.Rectangle?, arg5: javax_swing.TreePath?, arg6: Int, arg7: Bool, arg8: Bool, arg9: Bool ) {
                       ^
javax_swing.BasicTreeUI:115:15: note: potential overridden instance method 'paintExpandControl(arg0:arg1:arg2:arg3:arg4:arg5:arg6:arg7:arg8:)' here
    open func paintExpandControl(arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: java_awt.Rectangle?, arg4: javax_swing.TreePath?, arg5: Int, arg6: Bool, arg7: Bool, arg8: Bool)
              ^
javax_swing.BasicTreeUI:116:15: note: potential overridden instance method 'paintExpandControl' here
    open func paintExpandControl(_ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: java_awt.Rectangle?, _ _arg4: javax_swing.TreePath?, _ _arg5: Int, _ _arg6: Bool, _ _arg7: Bool, _ _arg8: Bool)
              ^
com_apple/Sources/AquaTreeUI.swift:955:24: error: declaration 'handleExpandControlClick(arg1:arg2:arg3:)' has different argument names from any potential overrides
    override open func handleExpandControlClick( arg1: javax_swing.TreePath?, arg2: Int, arg3: Int ) {
                       ^
javax_swing.BasicTreeUI:160:15: note: potential overridden instance method 'handleExpandControlClick(arg0:arg1:arg2:)' here
    open func handleExpandControlClick(arg0: javax_swing.TreePath?, arg1: Int, arg2: Int)
              ^
javax_swing.BasicTreeUI:161:15: note: potential overridden instance method 'handleExpandControlClick' here
    open func handleExpandControlClick(_ _arg0: javax_swing.TreePath?, _ _arg1: Int, _ _arg2: Int)
              ^
com_apple/Sources/AquaTreeUI.swift:972:24: error: declaration 'isToggleSelectionEvent(arg1:)' has different argument names from any potential overrides
    override open func isToggleSelectionEvent( arg1: java_awt.MouseEvent? ) -> Bool {
                       ^
javax_swing.BasicTreeUI:164:15: note: potential overridden instance method 'isToggleSelectionEvent(arg0:)' here
    open func isToggleSelectionEvent(arg0: java_awt.MouseEvent?) -> Bool
              ^
javax_swing.BasicTreeUI:165:15: note: potential overridden instance method 'isToggleSelectionEvent' here
    open func isToggleSelectionEvent(_ _arg0: java_awt.MouseEvent?) -> Bool
              ^
com_apple/Sources/AquaSplitPaneUI.swift:519:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicSplitPaneUI:29:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicSplitPaneUI:30:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:8:12: error: type 'AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout' does not conform to protocol 'LayoutManager'
open class AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout: java_lang.JavaObject, java_awt.LayoutManager {
           ^
java_awt.LayoutManager:7:17: note: multiple matching functions named 'removeLayoutComponent(arg0:)' with type '(Component?) -> ()'
    public func removeLayoutComponent(arg0: java_awt.Component?)
                ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:45:15: note: rename to 'removeLayoutComponent(arg0:)' to satisfy this requirement
    open func removeLayoutComponent( arg1: java_awt.Component? ) {
              ^
    @objc(removeLayoutComponentWithArg0:)  arg0 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:52:15: note: rename to 'removeLayoutComponent(arg0:)' to satisfy this requirement
    open func removeLayoutComponent( _ _arg1: java_awt.Component? ) {
              ^                      ~
    @objc(removeLayoutComponentWithArg0:)  arg0
java_awt.LayoutManager:10:17: note: multiple matching functions named 'addLayoutComponent(arg0:arg1:)' with type '(String?, Component?) -> ()'
    public func addLayoutComponent(arg0: String?, arg1: java_awt.Component?)
                ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:60:15: note: rename to 'addLayoutComponent(arg0:arg1:)' to satisfy this requirement
    open func addLayoutComponent( arg1: String?, arg2: java_awt.Component? ) {
              ^
    @objc(addLayoutComponentWithArg0:arg1:)  arg0  arg1 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:68:15: note: rename to 'addLayoutComponent(arg0:arg1:)' to satisfy this requirement
    open func addLayoutComponent( _ _arg1: String?, _ _arg2: java_awt.Component? ) {
              ^                   ~                 ~
    @objc(addLayoutComponentWithArg0:arg1:)  arg0   arg1
java_awt.LayoutManager:13:17: note: multiple matching functions named 'layoutContainer(arg0:)' with type '(Container?) -> ()'
    public func layoutContainer(arg0: java_awt.Container?)
                ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:76:15: note: rename to 'layoutContainer(arg0:)' to satisfy this requirement
    open func layoutContainer( arg1: java_awt.Container? ) {
              ^
    @objc(layoutContainerWithArg0:)  arg0 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:83:15: note: rename to 'layoutContainer(arg0:)' to satisfy this requirement
    open func layoutContainer( _ _arg1: java_awt.Container? ) {
              ^                ~
    @objc(layoutContainerWithArg0:)  arg0
java_awt.LayoutManager:16:17: note: multiple matching functions named 'preferredLayoutSize(arg0:)' with type '(Container?) -> Dimension!'
    public func preferredLayoutSize(arg0: java_awt.Container?) -> java_awt.Dimension!
                ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:91:15: note: rename to 'preferredLayoutSize(arg0:)' to satisfy this requirement
    open func preferredLayoutSize( arg1: java_awt.Container? ) -> java_awt.Dimension! {
              ^
    @objc(preferredLayoutSizeWithArg0:)  arg0 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:100:15: note: rename to 'preferredLayoutSize(arg0:)' to satisfy this requirement
    open func preferredLayoutSize( _ _arg1: java_awt.Container? ) -> java_awt.Dimension! {
              ^                    ~
    @objc(preferredLayoutSizeWithArg0:)  arg0
java_awt.LayoutManager:19:17: note: multiple matching functions named 'minimumLayoutSize(arg0:)' with type '(Container?) -> Dimension!'
    public func minimumLayoutSize(arg0: java_awt.Container?) -> java_awt.Dimension!
                ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:108:15: note: rename to 'minimumLayoutSize(arg0:)' to satisfy this requirement
    open func minimumLayoutSize( arg1: java_awt.Container? ) -> java_awt.Dimension! {
              ^
    @objc(minimumLayoutSizeWithArg0:)  arg0 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:117:15: note: rename to 'minimumLayoutSize(arg0:)' to satisfy this requirement
    open func minimumLayoutSize( _ _arg1: java_awt.Container? ) -> java_awt.Dimension! {
              ^                  ~
    @objc(minimumLayoutSizeWithArg0:)  arg0
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTableHeaderUI.swift:145:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicTableHeaderUI:8:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicTableHeaderUI:9:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaListUI.swift:282:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicListUI:16:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicListUI:17:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaButtonUI.swift:107:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicButtonUI:9:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicButtonUI:10:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaScrollBarUI.swift:259:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTextPaneUI.swift:64:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicTextPaneUI:7:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicTextPaneUI:8:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaLookAndFeel.swift:93:24: error: declaration 'initComponentDefaults(arg1:)' has different argument names from any potential overrides
    override open func initComponentDefaults( arg1: javax_swing.UIDefaults? ) {
                       ^
javax_swing.BasicLookAndFeel:8:15: note: potential overridden instance method 'initComponentDefaults(arg0:)' here
    open func initComponentDefaults(arg0: javax_swing.UIDefaults?)
              ^
javax_swing.BasicLookAndFeel:9:15: note: potential overridden instance method 'initComponentDefaults' here
    open func initComponentDefaults(_ _arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaLookAndFeel.swift:108:24: error: declaration 'initSystemColorDefaults(arg1:)' has different argument names from any potential overrides
    override open func initSystemColorDefaults( arg1: javax_swing.UIDefaults? ) {
                       ^
javax_swing.BasicLookAndFeel:10:15: note: potential overridden instance method 'initSystemColorDefaults(arg0:)' here
    open func initSystemColorDefaults(arg0: javax_swing.UIDefaults?)
              ^
javax_swing.BasicLookAndFeel:11:15: note: potential overridden instance method 'initSystemColorDefaults' here
    open func initSystemColorDefaults(_ _arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaLookAndFeel.swift:123:24: error: declaration 'initClassDefaults(arg1:)' has different argument names from any potential overrides
    override open func initClassDefaults( arg1: javax_swing.UIDefaults? ) {
                       ^
javax_swing.BasicLookAndFeel:12:15: note: potential overridden instance method 'initClassDefaults(arg0:)' here
    open func initClassDefaults(arg0: javax_swing.UIDefaults?)
              ^
javax_swing.BasicLookAndFeel:13:15: note: potential overridden instance method 'initClassDefaults' here
    open func initClassDefaults(_ _arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:651:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicInternalFrameUI:18:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicInternalFrameUI:19:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaInternalFrameUI.swift:933:24: error: declaration 'installMouseHandlers(arg1:)' has different argument names from any potential overrides
    override open func installMouseHandlers( arg1: javax_swing.JComponent? ) {
                       ^
javax_swing.BasicInternalFrameUI:51:15: note: potential overridden instance method 'installMouseHandlers(arg0:)' here
    open func installMouseHandlers(arg0: javax_swing.JComponent?)
              ^
javax_swing.BasicInternalFrameUI:52:15: note: potential overridden instance method 'installMouseHandlers' here
    open func installMouseHandlers(_ _arg0: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:948:24: error: declaration 'deinstallMouseHandlers(arg1:)' has different argument names from any potential overrides
    override open func deinstallMouseHandlers( arg1: javax_swing.JComponent? ) {
                       ^
javax_swing.BasicInternalFrameUI:49:15: note: potential overridden instance method 'deinstallMouseHandlers(arg0:)' here
    open func deinstallMouseHandlers(arg0: javax_swing.JComponent?)
              ^
javax_swing.BasicInternalFrameUI:50:15: note: potential overridden instance method 'deinstallMouseHandlers' here
    open func deinstallMouseHandlers(_ _arg0: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:965:24: error: declaration 'replacePane(arg1:arg2:)' has different argument names from any potential overrides
    override open func replacePane( arg1: javax_swing.JComponent?, arg2: javax_swing.JComponent? ) {
                       ^
javax_swing.BasicInternalFrameUI:47:15: note: potential overridden instance method 'replacePane(arg0:arg1:)' here
    open func replacePane(arg0: javax_swing.JComponent?, arg1: javax_swing.JComponent?)
              ^
javax_swing.BasicInternalFrameUI:48:15: note: potential overridden instance method 'replacePane' here
    open func replacePane(_ _arg0: javax_swing.JComponent?, _ _arg1: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:981:24: error: declaration 'createBorderListener(arg1:)' has different argument names from any potential overrides
    override open func createBorderListener( arg1: javax_swing.JInternalFrame? ) -> javax_swing.MouseInputAdapter! {
                       ^
javax_swing.BasicInternalFrameUI:61:15: note: potential overridden instance method 'createBorderListener(arg0:)' here
    open func createBorderListener(arg0: javax_swing.JInternalFrame?) -> javax_swing.MouseInputAdapter!
              ^
javax_swing.BasicInternalFrameUI:62:15: note: potential overridden instance method 'createBorderListener' here
    open func createBorderListener(_ _arg0: javax_swing.JInternalFrame?) -> javax_swing.MouseInputAdapter!
              ^
com_apple/Sources/AquaPopupMenuUI.swift:74:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicPopupMenuUI:6:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicPopupMenuUI:7:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/ScreenMenuBar.swift:9:12: error: type 'ScreenMenuBar' does not conform to protocol 'ContainerListener'
open class ScreenMenuBar: java_awt.MenuBar, java_awt.ContainerListener, java_awt.ComponentListener {
           ^
java_awt.ContainerListener:7:17: note: multiple matching functions named 'componentAdded(arg0:)' with type '(ContainerEvent?) -> ()'
    public func componentAdded(arg0: java_awt.ContainerEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:170:15: note: rename to 'componentAdded(arg0:)' to satisfy this requirement
    open func componentAdded( arg1: java_awt.ContainerEvent? ) {
              ^
    @objc(componentAddedWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:177:15: note: rename to 'componentAdded(arg0:)' to satisfy this requirement
    open func componentAdded( _ _arg1: java_awt.ContainerEvent? ) {
              ^               ~
    @objc(componentAddedWithArg0:)  arg0
java_awt.ContainerListener:10:17: note: multiple matching functions named 'componentRemoved(arg0:)' with type '(ContainerEvent?) -> ()'
    public func componentRemoved(arg0: java_awt.ContainerEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:185:15: note: rename to 'componentRemoved(arg0:)' to satisfy this requirement
    open func componentRemoved( arg1: java_awt.ContainerEvent? ) {
              ^
    @objc(componentRemovedWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:192:15: note: rename to 'componentRemoved(arg0:)' to satisfy this requirement
    open func componentRemoved( _ _arg1: java_awt.ContainerEvent? ) {
              ^                 ~
    @objc(componentRemovedWithArg0:)  arg0
com_apple/Sources/ScreenMenuBar.swift:9:12: error: type 'ScreenMenuBar' does not conform to protocol 'ComponentListener'
open class ScreenMenuBar: java_awt.MenuBar, java_awt.ContainerListener, java_awt.ComponentListener {
           ^
java_awt.ComponentListener:7:17: note: multiple matching functions named 'componentResized(arg0:)' with type '(ComponentEvent?) -> ()'
    public func componentResized(arg0: java_awt.ComponentEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:200:15: note: rename to 'componentResized(arg0:)' to satisfy this requirement
    open func componentResized( arg1: java_awt.ComponentEvent? ) {
              ^
    @objc(componentResizedWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:207:15: note: rename to 'componentResized(arg0:)' to satisfy this requirement
    open func componentResized( _ _arg1: java_awt.ComponentEvent? ) {
              ^                 ~
    @objc(componentResizedWithArg0:)  arg0
java_awt.ComponentListener:10:17: note: multiple matching functions named 'componentMoved(arg0:)' with type '(ComponentEvent?) -> ()'
    public func componentMoved(arg0: java_awt.ComponentEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:215:15: note: rename to 'componentMoved(arg0:)' to satisfy this requirement
    open func componentMoved( arg1: java_awt.ComponentEvent? ) {
              ^
    @objc(componentMovedWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:222:15: note: rename to 'componentMoved(arg0:)' to satisfy this requirement
    open func componentMoved( _ _arg1: java_awt.ComponentEvent? ) {
              ^               ~
    @objc(componentMovedWithArg0:)  arg0
java_awt.ComponentListener:13:17: note: multiple matching functions named 'componentShown(arg0:)' with type '(ComponentEvent?) -> ()'
    public func componentShown(arg0: java_awt.ComponentEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:230:15: note: rename to 'componentShown(arg0:)' to satisfy this requirement
    open func componentShown( arg1: java_awt.ComponentEvent? ) {
              ^
    @objc(componentShownWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:237:15: note: rename to 'componentShown(arg0:)' to satisfy this requirement
    open func componentShown( _ _arg1: java_awt.ComponentEvent? ) {
              ^               ~
    @objc(componentShownWithArg0:)  arg0
java_awt.ComponentListener:16:17: note: multiple matching functions named 'componentHidden(arg0:)' with type '(ComponentEvent?) -> ()'
    public func componentHidden(arg0: java_awt.ComponentEvent?)
                ^
com_apple/Sources/ScreenMenuBar.swift:245:15: note: rename to 'componentHidden(arg0:)' to satisfy this requirement
    open func componentHidden( arg1: java_awt.ComponentEvent? ) {
              ^
    @objc(componentHiddenWithArg0:)  arg0 
com_apple/Sources/ScreenMenuBar.swift:252:15: note: rename to 'componentHidden(arg0:)' to satisfy this requirement
    open func componentHidden( _ _arg1: java_awt.ComponentEvent? ) {
              ^                ~
    @objc(componentHiddenWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTreeUI.swift:745:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicTreeUI:39:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicTreeUI:40:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTreeUI.swift:872:24: error: declaration 'paintVerticalPartOfLeg(arg1:arg2:arg3:arg4:)' has different argument names from any potential overrides
    override open func paintVerticalPartOfLeg( arg1: java_awt.Graphics?, arg2: java_awt.Rectangle?, arg3: java_awt.Insets?, arg4: javax_swing.TreePath? ) {
                       ^
javax_swing.BasicTreeUI:113:15: note: potential overridden instance method 'paintVerticalPartOfLeg(arg0:arg1:arg2:arg3:)' here
    open func paintVerticalPartOfLeg(arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: javax_swing.TreePath?)
              ^
javax_swing.BasicTreeUI:114:15: note: potential overridden instance method 'paintVerticalPartOfLeg' here
    open func paintVerticalPartOfLeg(_ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: javax_swing.TreePath?)
              ^
com_apple/Sources/AquaTreeUI.swift:890:24: error: declaration 'paintHorizontalPartOfLeg(arg1:arg2:arg3:arg4:arg5:arg6:arg7:arg8:arg9:)' has different argument names from any potential overrides
    override open func paintHorizontalPartOfLeg( arg1: java_awt.Graphics?, arg2: java_awt.Rectangle?, arg3: java_awt.Insets?, arg4: java_awt.Rectangle?, arg5: javax_swing.TreePath?, arg6: Int, arg7: Bool, arg8: Bool, arg9: Bool ) {
                       ^
javax_swing.BasicTreeUI:111:15: note: potential overridden instance method 'paintHorizontalPartOfLeg(arg0:arg1:arg2:arg3:arg4:arg5:arg6:arg7:arg8:)' here
    open func paintHorizontalPartOfLeg(arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: java_awt.Rectangle?, arg4: javax_swing.TreePath?, arg5: Int, arg6: Bool, arg7: Bool, arg8: Bool)
              ^
javax_swing.BasicTreeUI:112:15: note: potential overridden instance method 'paintHorizontalPartOfLeg' here
    open func paintHorizontalPartOfLeg(_ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: java_awt.Rectangle?, _ _arg4: javax_swing.TreePath?, _ _arg5: Int, _ _arg6: Bool, _ _arg7: Bool, _ _arg8: Bool)
              ^
com_apple/Sources/AquaTreeUI.swift:913:24: error: declaration 'paintExpandControl(arg1:arg2:arg3:arg4:arg5:arg6:arg7:arg8:arg9:)' has different argument names from any potential overrides
    override open func paintExpandControl( arg1: java_awt.Graphics?, arg2: java_awt.Rectangle?, arg3: java_awt.Insets?, arg4: java_awt.Rectangle?, arg5: javax_swing.TreePath?, arg6: Int, arg7: Bool, arg8: Bool, arg9: Bool ) {
                       ^
javax_swing.BasicTreeUI:115:15: note: potential overridden instance method 'paintExpandControl(arg0:arg1:arg2:arg3:arg4:arg5:arg6:arg7:arg8:)' here
    open func paintExpandControl(arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: java_awt.Rectangle?, arg4: javax_swing.TreePath?, arg5: Int, arg6: Bool, arg7: Bool, arg8: Bool)
              ^
javax_swing.BasicTreeUI:116:15: note: potential overridden instance method 'paintExpandControl' here
    open func paintExpandControl(_ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: java_awt.Rectangle?, _ _arg4: javax_swing.TreePath?, _ _arg5: Int, _ _arg6: Bool, _ _arg7: Bool, _ _arg8: Bool)
              ^
com_apple/Sources/AquaTreeUI.swift:955:24: error: declaration 'handleExpandControlClick(arg1:arg2:arg3:)' has different argument names from any potential overrides
    override open func handleExpandControlClick( arg1: javax_swing.TreePath?, arg2: Int, arg3: Int ) {
                       ^
javax_swing.BasicTreeUI:160:15: note: potential overridden instance method 'handleExpandControlClick(arg0:arg1:arg2:)' here
    open func handleExpandControlClick(arg0: javax_swing.TreePath?, arg1: Int, arg2: Int)
              ^
javax_swing.BasicTreeUI:161:15: note: potential overridden instance method 'handleExpandControlClick' here
    open func handleExpandControlClick(_ _arg0: javax_swing.TreePath?, _ _arg1: Int, _ _arg2: Int)
              ^
com_apple/Sources/AquaTreeUI.swift:972:24: error: declaration 'isToggleSelectionEvent(arg1:)' has different argument names from any potential overrides
    override open func isToggleSelectionEvent( arg1: java_awt.MouseEvent? ) -> Bool {
                       ^
javax_swing.BasicTreeUI:164:15: note: potential overridden instance method 'isToggleSelectionEvent(arg0:)' here
    open func isToggleSelectionEvent(arg0: java_awt.MouseEvent?) -> Bool
              ^
javax_swing.BasicTreeUI:165:15: note: potential overridden instance method 'isToggleSelectionEvent' here
    open func isToggleSelectionEvent(_ _arg0: java_awt.MouseEvent?) -> Bool
              ^
com_apple/Sources/AquaSplitPaneUI.swift:519:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicSplitPaneUI:29:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicSplitPaneUI:30:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:8:12: error: type 'AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout' does not conform to protocol 'LayoutManager'
open class AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout: java_lang.JavaObject, java_awt.LayoutManager {
           ^
java_awt.LayoutManager:7:17: note: multiple matching functions named 'removeLayoutComponent(arg0:)' with type '(Component?) -> ()'
    public func removeLayoutComponent(arg0: java_awt.Component?)
                ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:45:15: note: rename to 'removeLayoutComponent(arg0:)' to satisfy this requirement
    open func removeLayoutComponent( arg1: java_awt.Component? ) {
              ^
    @objc(removeLayoutComponentWithArg0:)  arg0 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:52:15: note: rename to 'removeLayoutComponent(arg0:)' to satisfy this requirement
    open func removeLayoutComponent( _ _arg1: java_awt.Component? ) {
              ^                      ~
    @objc(removeLayoutComponentWithArg0:)  arg0
java_awt.LayoutManager:10:17: note: multiple matching functions named 'addLayoutComponent(arg0:arg1:)' with type '(String?, Component?) -> ()'
    public func addLayoutComponent(arg0: String?, arg1: java_awt.Component?)
                ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:60:15: note: rename to 'addLayoutComponent(arg0:arg1:)' to satisfy this requirement
    open func addLayoutComponent( arg1: String?, arg2: java_awt.Component? ) {
              ^
    @objc(addLayoutComponentWithArg0:arg1:)  arg0  arg1 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:68:15: note: rename to 'addLayoutComponent(arg0:arg1:)' to satisfy this requirement
    open func addLayoutComponent( _ _arg1: String?, _ _arg2: java_awt.Component? ) {
              ^                   ~                 ~
    @objc(addLayoutComponentWithArg0:arg1:)  arg0   arg1
java_awt.LayoutManager:13:17: note: multiple matching functions named 'layoutContainer(arg0:)' with type '(Container?) -> ()'
    public func layoutContainer(arg0: java_awt.Container?)
                ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:76:15: note: rename to 'layoutContainer(arg0:)' to satisfy this requirement
    open func layoutContainer( arg1: java_awt.Container? ) {
              ^
    @objc(layoutContainerWithArg0:)  arg0 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:83:15: note: rename to 'layoutContainer(arg0:)' to satisfy this requirement
    open func layoutContainer( _ _arg1: java_awt.Container? ) {
              ^                ~
    @objc(layoutContainerWithArg0:)  arg0
java_awt.LayoutManager:16:17: note: multiple matching functions named 'preferredLayoutSize(arg0:)' with type '(Container?) -> Dimension!'
    public func preferredLayoutSize(arg0: java_awt.Container?) -> java_awt.Dimension!
                ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:91:15: note: rename to 'preferredLayoutSize(arg0:)' to satisfy this requirement
    open func preferredLayoutSize( arg1: java_awt.Container? ) -> java_awt.Dimension! {
              ^
    @objc(preferredLayoutSizeWithArg0:)  arg0 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:100:15: note: rename to 'preferredLayoutSize(arg0:)' to satisfy this requirement
    open func preferredLayoutSize( _ _arg1: java_awt.Container? ) -> java_awt.Dimension! {
              ^                    ~
    @objc(preferredLayoutSizeWithArg0:)  arg0
java_awt.LayoutManager:19:17: note: multiple matching functions named 'minimumLayoutSize(arg0:)' with type '(Container?) -> Dimension!'
    public func minimumLayoutSize(arg0: java_awt.Container?) -> java_awt.Dimension!
                ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:108:15: note: rename to 'minimumLayoutSize(arg0:)' to satisfy this requirement
    open func minimumLayoutSize( arg1: java_awt.Container? ) -> java_awt.Dimension! {
              ^
    @objc(minimumLayoutSizeWithArg0:)  arg0 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI_TabbedPaneLayout.swift:117:15: note: rename to 'minimumLayoutSize(arg0:)' to satisfy this requirement
    open func minimumLayoutSize( _ _arg1: java_awt.Container? ) -> java_awt.Dimension! {
              ^                  ~
    @objc(minimumLayoutSizeWithArg0:)  arg0
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:277:24: error: declaration 'damage(arg1:)' has different argument names from any potential overrides
    override open func damage( arg1: java_awt.Rectangle? ) {
                       ^
javax_swing.DefaultCaret:78:15: note: potential overridden instance method 'damage(arg0:)' here
    open func damage(arg0: java_awt.Rectangle?)
              ^
javax_swing.DefaultCaret:79:15: note: potential overridden instance method 'damage' here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaInternalFrameBorder.swift:9:12: error: type 'AquaInternalFrameBorder' does not conform to protocol 'Border'
open class AquaInternalFrameBorder: java_lang.JavaObject, javax_swing.Border, javax_swing.UIResource {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:144:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaInternalFrameBorder.swift:156:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaInternalFrameBorder.swift:166:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaInternalFrameBorder.swift:175:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaMenuBarBorder.swift:9:12: error: type 'AquaMenuBarBorder' does not conform to protocol 'Border'
open class AquaMenuBarBorder: java_lang.JavaObject, javax_swing.Border {
           ^
javax_swing.Border:4:17: note: multiple matching functions named 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' with type '(Component?, Graphics?, Int, Int, Int, Int) -> ()'
    public func paintBorder(arg0: java_awt.Component?, arg1: java_awt.Graphics?, arg2: Int, arg3: Int, arg4: Int, arg5: Int)
                ^
com_apple/Sources/AquaMenuBarBorder.swift:39:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( arg1: java_awt.Component?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0  arg1            arg2       arg3       arg4       arg5 
com_apple/Sources/AquaMenuBarBorder.swift:51:15: note: rename to 'paintBorder(arg0:arg1:arg2:arg3:arg4:arg5:)' to satisfy this requirement
    open func paintBorder( _ _arg1: java_awt.Component?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^            ~                             ~                            ~             ~             ~             ~
    @objc(paintBorderWithArg0:arg1:arg2:arg3:arg4:arg5:)  arg0 arg1                   arg2          arg3          arg4          arg5
javax_swing.Border:7:17: note: multiple matching functions named 'getBorderInsets(arg0:)' with type '(Component?) -> Insets!'
    public func getBorderInsets(arg0: java_awt.Component?) -> java_awt.Insets!
                ^
com_apple/Sources/AquaMenuBarBorder.swift:59:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^
    @objc(getBorderInsetsWithArg0:)  arg0 
com_apple/Sources/AquaMenuBarBorder.swift:68:15: note: rename to 'getBorderInsets(arg0:)' to satisfy this requirement
    open func getBorderInsets( _ _arg1: java_awt.Component? ) -> java_awt.Insets! {
              ^                ~
    @objc(getBorderInsetsWithArg0:)  arg0
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:851:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.ComponentUI:29:21: note: potential overridden class method 'createUI(arg0:)' here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
javax_swing.ComponentUI:30:21: note: potential overridden class method 'createUI' here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTableHeaderUI.swift:145:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicTableHeaderUI:8:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicTableHeaderUI:9:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaListUI.swift:282:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicListUI:16:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicListUI:17:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaButtonUI.swift:107:30: error: declaration 'createUI(arg1:)' has different argument names from any potential overrides
    override open class func createUI( arg1: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
javax_swing.BasicButtonUI:9:30: note: potential overridden class method 'createUI(arg0:)' here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
javax_swing.BasicButtonUI:10:30: note: potential overridden class method 'createUI' here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaCaret.swift:49:14: error: overriding declaration requires an 'override' keyword
    open var listenerList: javax_swing.EventListenerList! {
             ^
javax_swing.DefaultCaret:7:14: note: overridden declaration is here
    open var listenerList: javax_swing.EventListenerList! { get set }
             ^
com_apple/Sources/AquaCaret.swift:66:14: error: overriding declaration requires an 'override' keyword
    open var changeEvent: javax_swing.ChangeEvent! {
             ^
javax_swing.DefaultCaret:8:14: note: overridden declaration is here
    open var changeEvent: javax_swing.ChangeEvent! { get set }
             ^
com_apple/Sources/AquaCaret.swift:256:15: error: overriding declaration requires an 'override' keyword
    open func fireStateChanged() {
              ^
         override 
javax_swing.DefaultCaret:22:15: note: overridden declaration is here
    open func fireStateChanged()
              ^
com_apple/Sources/AquaCaret.swift:267:15: error: overriding declaration requires an 'override' keyword
    open func getSelectionPainter() -> javax_swing.Highlighter_HighlightPainter! {
              ^
         override 
javax_swing.DefaultCaret:82:15: note: overridden declaration is here
    open func getSelectionPainter() -> Highlighter_HighlightPainter!
              ^
com_apple/Sources/AquaCaret.swift:282:15: error: overriding declaration requires an 'override' keyword
    open func damage( arg0: java_awt.Rectangle? ) {
              ^
         override 
javax_swing.DefaultCaret:78:15: note: overridden declaration is here
    open func damage(arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AquaCaret.swift:289:15: error: overriding declaration requires an 'override' keyword
    open func damage( _ _arg0: java_awt.Rectangle? ) {
              ^
         override 
javax_swing.DefaultCaret:79:15: note: overridden declaration is here
    open func damage(_ _arg0: java_awt.Rectangle?)
              ^
com_apple/Sources/AppEvent.swift:33:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
java_util.EventObject:7:14: note: overridden declaration is here
    open var source: java_lang.JavaObject! { get set }
             ^
com_apple/Sources/AppEvent_OpenURIEvent.swift:34:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:14: note: overridden declaration is here
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:856:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.ComponentUI:29:21: note: overridden declaration is here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:865:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.ComponentUI:30:21: note: overridden declaration is here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTableHeaderUI.swift:71:14: error: overriding declaration requires an 'override' keyword
    open var header: javax_swing.JTableHeader! {
             ^
javax_swing.BasicTableHeaderUI:4:14: note: overridden declaration is here
    open var header: javax_swing.JTableHeader! { get set }
             ^
com_apple/Sources/AquaTableHeaderUI.swift:88:14: error: overriding declaration requires an 'override' keyword
    open var rendererPane: javax_swing.CellRendererPane! {
             ^
javax_swing.BasicTableHeaderUI:5:14: note: overridden declaration is here
    open var rendererPane: javax_swing.CellRendererPane! { get set }
             ^
com_apple/Sources/AquaTableHeaderUI.swift:105:14: error: overriding declaration requires an 'override' keyword
    open var mouseInputListener: javax_swing.MouseInputListener! {
             ^
javax_swing.BasicTableHeaderUI:6:14: note: overridden declaration is here
    open var mouseInputListener: MouseInputListener! { get set }
             ^
com_apple/Sources/AquaTableHeaderUI.swift:150:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicTableHeaderUI:8:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTableHeaderUI.swift:159:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicTableHeaderUI:9:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTableHeaderUI.swift:167:15: error: overriding declaration requires an 'override' keyword
    open func installDefaults() {
              ^
         override 
javax_swing.BasicTableHeaderUI:11:15: note: overridden declaration is here
    open func installDefaults()
              ^
com_apple/Sources/AquaTableHeaderUI.swift:178:15: error: overriding declaration requires an 'override' keyword
    open func installListeners() {
              ^
         override 
javax_swing.BasicTableHeaderUI:10:15: note: overridden declaration is here
    open func installListeners()
              ^
com_apple/Sources/AquaTableHeaderUI.swift:189:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners() {
              ^
         override 
javax_swing.BasicTableHeaderUI:14:15: note: overridden declaration is here
    open func uninstallListeners()
              ^
com_apple/Sources/AquaTableHeaderUI.swift:200:15: error: overriding declaration requires an 'override' keyword
    open func uninstallDefaults() {
              ^
         override 
javax_swing.BasicTableHeaderUI:13:15: note: overridden declaration is here
    open func uninstallDefaults()
              ^
com_apple/Sources/AppEvent.swift:33:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
java_util.EventObject:7:14: note: overridden declaration is here
    open var source: java_lang.JavaObject! { get set }
             ^
com_apple/Sources/AppEvent_OpenURIEvent.swift:34:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:14: note: overridden declaration is here
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AquaListUI.swift:34:14: error: overriding declaration requires an 'override' keyword
    open var list: javax_swing.JList! {
             ^
javax_swing.BasicListUI:4:14: note: overridden declaration is here
    open var list: javax_swing.JList! { get set }
             ^
com_apple/Sources/AquaListUI.swift:51:14: error: overriding declaration requires an 'override' keyword
    open var rendererPane: javax_swing.CellRendererPane! {
             ^
javax_swing.BasicListUI:5:14: note: overridden declaration is here
    open var rendererPane: javax_swing.CellRendererPane! { get set }
             ^
com_apple/Sources/AquaListUI.swift:68:14: error: overriding declaration requires an 'override' keyword
    open var focusListener: java_awt.FocusListener! {
             ^
javax_swing.BasicListUI:6:14: note: overridden declaration is here
    open var focusListener: FocusListener! { get set }
             ^
com_apple/Sources/AquaListUI.swift:85:14: error: overriding declaration requires an 'override' keyword
    open var mouseInputListener: javax_swing.MouseInputListener! {
             ^
javax_swing.BasicListUI:7:14: note: overridden declaration is here
    open var mouseInputListener: MouseInputListener! { get set }
             ^
com_apple/Sources/AquaListUI.swift:102:14: error: overriding declaration requires an 'override' keyword
    open var listSelectionListener: javax_swing.ListSelectionListener! {
             ^
javax_swing.BasicListUI:8:14: note: overridden declaration is here
    open var listSelectionListener: ListSelectionListener! { get set }
             ^
com_apple/Sources/AquaListUI.swift:119:14: error: overriding declaration requires an 'override' keyword
    open var listDataListener: javax_swing.ListDataListener! {
             ^
javax_swing.BasicListUI:9:14: note: overridden declaration is here
    open var listDataListener: ListDataListener! { get set }
             ^
com_apple/Sources/AquaListUI.swift:136:14: error: overriding declaration requires an 'override' keyword
    open var propertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
             ^
javax_swing.BasicListUI:10:14: note: overridden declaration is here
    open var propertyChangeListener: UnclassedProtocol! { get set }
             ^
com_apple/Sources/AquaListUI.swift:155:14: error: overriding declaration requires an 'override' keyword
    open var cellHeights: [Int32]! {
             ^
javax_swing.BasicListUI:11:14: note: overridden declaration is here
    open var cellHeights: [Int32]! { get set }
             ^
com_apple/Sources/AquaListUI.swift:172:14: error: overriding declaration requires an 'override' keyword
    open var cellHeight: Int {
             ^
javax_swing.BasicListUI:12:14: note: overridden declaration is here
    open var cellHeight: Int { get set }
             ^
com_apple/Sources/AquaListUI.swift:189:14: error: overriding declaration requires an 'override' keyword
    open var cellWidth: Int {
             ^
javax_swing.BasicListUI:13:14: note: overridden declaration is here
    open var cellWidth: Int { get set }
             ^
com_apple/Sources/AquaListUI.swift:206:14: error: overriding declaration requires an 'override' keyword
    open var updateLayoutStateNeeded: Int {
             ^
javax_swing.BasicListUI:14:14: note: overridden declaration is here
    open var updateLayoutStateNeeded: Int { get set }
             ^
com_apple/Sources/AquaListUI.swift:287:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicListUI:16:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaListUI.swift:296:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicListUI:17:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaListUI.swift:304:15: error: overriding declaration requires an 'override' keyword
    open func installKeyboardActions() {
              ^
         override 
javax_swing.BasicListUI:22:15: note: overridden declaration is here
    open func installKeyboardActions()
              ^
com_apple/Sources/AquaListUI.swift:315:15: error: overriding declaration requires an 'override' keyword
    open func createPropertyChangeListener() -> /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
              ^
         override 
javax_swing.BasicListUI:27:15: note: overridden declaration is here
    open func createPropertyChangeListener() -> UnclassedProtocol!
              ^
com_apple/Sources/AquaListUI.swift:345:15: error: overriding declaration requires an 'override' keyword
    open func createFocusListener() -> java_awt.FocusListener! {
              ^
         override 
javax_swing.BasicListUI:28:15: note: overridden declaration is here
    open func createFocusListener() -> FocusListener!
              ^
com_apple/Sources/AquaListUI.swift:423:15: error: overriding declaration requires an 'override' keyword
    open func createMouseInputListener() -> javax_swing.MouseInputListener! {
              ^
         override 
javax_swing.BasicListUI:26:15: note: overridden declaration is here
    open func createMouseInputListener() -> MouseInputListener!
              ^
com_apple/Sources/AppEvent.swift:33:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
java_util.EventObject:7:14: note: overridden declaration is here
    open var source: java_lang.JavaObject! { get set }
             ^
com_apple/Sources/AppEvent_ScreenSleepEvent.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:14: note: overridden declaration is here
    open var source: java_lang.JavaObject! {
             ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaButtonRadioUI.swift:41:14: error: overriding declaration requires an 'override' keyword
    open var widgetBorder: AquaButtonBorder! {
             ^
com_apple/Sources/AquaButtonLabeledUI.swift:37:14: note: overridden declaration is here
    open var widgetBorder: AquaButtonBorder! {
             ^
com_apple/Sources/AquaButtonUI.swift:44:14: error: overriding declaration requires an 'override' keyword
    open var defaultTextIconGap: Int {
             ^
javax_swing.BasicButtonUI:4:14: note: overridden declaration is here
    open var defaultTextIconGap: Int { get set }
             ^
com_apple/Sources/AquaButtonToggleUI.swift:45:14: error: overriding declaration requires an 'override' keyword
    open var defaultTextIconGap: Int {
             ^
com_apple/Sources/AquaButtonUI.swift:44:14: note: overridden declaration is here
    open var defaultTextIconGap: Int {
             ^
com_apple/Sources/AquaButtonLabeledUI.swift:68:14: error: overriding declaration requires an 'override' keyword
    open var defaultTextIconGap: Int {
             ^
com_apple/Sources/AquaButtonToggleUI.swift:45:14: note: overridden declaration is here
    open var defaultTextIconGap: Int {
             ^
com_apple/Sources/AquaButtonRadioUI.swift:72:14: error: overriding declaration requires an 'override' keyword
    open var defaultTextIconGap: Int {
             ^
com_apple/Sources/AquaButtonLabeledUI.swift:68:14: note: overridden declaration is here
    open var defaultTextIconGap: Int {
             ^
com_apple/Sources/AquaButtonUI.swift:63:14: error: overriding declaration requires an 'override' keyword
    open var defaultTextShiftOffset: Int {
             ^
javax_swing.BasicButtonUI:5:14: note: overridden declaration is here
    open var defaultTextShiftOffset: Int { get set }
             ^
com_apple/Sources/AquaButtonToggleUI.swift:64:14: error: overriding declaration requires an 'override' keyword
    open var defaultTextShiftOffset: Int {
             ^
com_apple/Sources/AquaButtonUI.swift:63:14: note: overridden declaration is here
    open var defaultTextShiftOffset: Int {
             ^
com_apple/Sources/AquaButtonLabeledUI.swift:87:14: error: overriding declaration requires an 'override' keyword
    open var defaultTextShiftOffset: Int {
             ^
com_apple/Sources/AquaButtonToggleUI.swift:64:14: note: overridden declaration is here
    open var defaultTextShiftOffset: Int {
             ^
com_apple/Sources/AquaButtonRadioUI.swift:91:14: error: overriding declaration requires an 'override' keyword
    open var defaultTextShiftOffset: Int {
             ^
com_apple/Sources/AquaButtonLabeledUI.swift:87:14: note: overridden declaration is here
    open var defaultTextShiftOffset: Int {
             ^
com_apple/Sources/AquaButtonUI.swift:112:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicButtonUI:9:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaButtonUI.swift:121:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicButtonUI:10:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaButtonToggleUI.swift:103:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaButtonUI.swift:112:21: note: overridden declaration is here
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
com_apple/Sources/AquaButtonToggleUI.swift:112:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaButtonUI.swift:121:21: note: overridden declaration is here
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
com_apple/Sources/AquaButtonRadioUI.swift:130:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaButtonToggleUI.swift:103:21: note: overridden declaration is here
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
com_apple/Sources/AquaButtonRadioUI.swift:139:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaButtonToggleUI.swift:112:21: note: overridden declaration is here
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
com_apple/Sources/AquaButtonToggleUI.swift:120:15: error: overriding declaration requires an 'override' keyword
    open func getPropertyPrefix() -> String! {
              ^
         override 
javax_swing.BasicButtonUI:19:15: note: overridden declaration is here
    open func getPropertyPrefix() -> String!
              ^
com_apple/Sources/AquaButtonRadioUI.swift:147:15: error: overriding declaration requires an 'override' keyword
    open func getPropertyPrefix() -> String! {
              ^
         override 
com_apple/Sources/AquaButtonToggleUI.swift:120:15: note: overridden declaration is here
    open func getPropertyPrefix() -> String! {
              ^
com_apple/Sources/AquaButtonRadioUI.swift:159:15: error: overriding declaration requires an 'override' keyword
    open func getPainter() -> AquaButtonBorder! {
              ^
         override 
com_apple/Sources/AquaButtonLabeledUI.swift:130:15: note: overridden declaration is here
    open func getPainter() -> AquaButtonBorder! {
              ^
com_apple/Sources/AquaScrollBarUI.swift:264:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.ComponentUI:29:21: note: overridden declaration is here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaScrollBarUI.swift:273:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.ComponentUI:30:21: note: overridden declaration is here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaButtonBorder.swift:67:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaBorder.swift:32:14: note: overridden declaration is here
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:40:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaButtonBorder.swift:67:14: note: overridden declaration is here
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaButtonBorder.swift:79:14: error: overriding declaration requires an 'override' keyword
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaBorder.swift:44:14: note: overridden declaration is here
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:52:14: error: overriding declaration requires an 'override' keyword
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaButtonBorder.swift:79:14: note: overridden declaration is here
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaButtonBorder.swift:91:14: error: overriding declaration requires an 'override' keyword
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaBorder.swift:56:14: note: overridden declaration is here
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:64:14: error: overriding declaration requires an 'override' keyword
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaButtonBorder.swift:91:14: note: overridden declaration is here
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:115:15: error: overriding declaration requires an 'override' keyword
    open func createPainter() -> /* com.apple.laf.AquaPainter */ UnclassedObject! {
              ^
         override 
com_apple/Sources/AquaBorder.swift:187:15: note: overridden declaration is here
    open func createPainter() -> /* com.apple.laf.AquaPainter */ UnclassedObject! {
              ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:128:15: error: overriding declaration requires an 'override' keyword
    open func getButtonState( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel? ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:148:15: note: overridden declaration is here
    open func getButtonState( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel? ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
              ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:138:15: error: overriding declaration requires an 'override' keyword
    open func getButtonState( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel? ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:158:15: note: overridden declaration is here
    open func getButtonState( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel? ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
              ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:146:15: error: overriding declaration requires an 'override' keyword
    open func doButtonPaint( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:185:15: note: overridden declaration is here
    open func doButtonPaint( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:159:15: error: overriding declaration requires an 'override' keyword
    open func doButtonPaint( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:198:15: note: overridden declaration is here
    open func doButtonPaint( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^
com_apple/Sources/AquaTextPaneUI.swift:69:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicTextPaneUI:7:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTextPaneUI.swift:78:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicTextPaneUI:8:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTextPaneUI.swift:86:15: error: overriding declaration requires an 'override' keyword
    open func installDefaults() {
              ^
         override 
javax_swing.BasicTextUI:15:15: note: overridden declaration is here
    open func installDefaults()
              ^
com_apple/Sources/AquaTextPaneUI.swift:97:15: error: overriding declaration requires an 'override' keyword
    open func installListeners() {
              ^
         override 
javax_swing.BasicTextUI:13:15: note: overridden declaration is here
    open func installListeners()
              ^
com_apple/Sources/AquaTextPaneUI.swift:108:15: error: overriding declaration requires an 'override' keyword
    open func installKeyboardActions() {
              ^
         override 
javax_swing.BasicTextUI:16:15: note: overridden declaration is here
    open func installKeyboardActions()
              ^
com_apple/Sources/AquaTextPaneUI.swift:119:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners() {
              ^
         override 
javax_swing.BasicTextUI:18:15: note: overridden declaration is here
    open func uninstallListeners()
              ^
com_apple/Sources/AquaTextPaneUI.swift:130:15: error: overriding declaration requires an 'override' keyword
    open func uninstallDefaults() {
              ^
         override 
javax_swing.BasicTextUI:17:15: note: overridden declaration is here
    open func uninstallDefaults()
              ^
com_apple/Sources/AquaTextPaneUI.swift:141:15: error: overriding declaration requires an 'override' keyword
    open func createCaret() -> javax_swing.Caret! {
              ^
         override 
javax_swing.BasicTextUI:12:15: note: overridden declaration is here
    open func createCaret() -> Caret!
              ^
com_apple/Sources/AquaTextPaneUI.swift:154:15: error: overriding declaration requires an 'override' keyword
    open func createHighlighter() -> javax_swing.Highlighter! {
              ^
         override 
javax_swing.BasicTextUI:22:15: note: overridden declaration is here
    open func createHighlighter() -> Highlighter!
              ^
com_apple/Sources/AquaLookAndFeel.swift:83:15: error: overriding declaration requires an 'override' keyword
    open func getAudioActionMap() -> javax_swing.ActionMap! {
              ^
         override 
javax_swing.BasicLookAndFeel:7:15: note: overridden declaration is here
    open func getAudioActionMap() -> javax_swing.ActionMap!
              ^
com_apple/Sources/AquaLookAndFeel.swift:98:15: error: overriding declaration requires an 'override' keyword
    open func initComponentDefaults( arg0: javax_swing.UIDefaults? ) {
              ^
         override 
javax_swing.BasicLookAndFeel:8:15: note: overridden declaration is here
    open func initComponentDefaults(arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaLookAndFeel.swift:105:15: error: overriding declaration requires an 'override' keyword
    open func initComponentDefaults( _ _arg0: javax_swing.UIDefaults? ) {
              ^
         override 
javax_swing.BasicLookAndFeel:9:15: note: overridden declaration is here
    open func initComponentDefaults(_ _arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaLookAndFeel.swift:113:15: error: overriding declaration requires an 'override' keyword
    open func initSystemColorDefaults( arg0: javax_swing.UIDefaults? ) {
              ^
         override 
javax_swing.BasicLookAndFeel:10:15: note: overridden declaration is here
    open func initSystemColorDefaults(arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaLookAndFeel.swift:120:15: error: overriding declaration requires an 'override' keyword
    open func initSystemColorDefaults( _ _arg0: javax_swing.UIDefaults? ) {
              ^
         override 
javax_swing.BasicLookAndFeel:11:15: note: overridden declaration is here
    open func initSystemColorDefaults(_ _arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaLookAndFeel.swift:128:15: error: overriding declaration requires an 'override' keyword
    open func initClassDefaults( arg0: javax_swing.UIDefaults? ) {
              ^
         override 
javax_swing.BasicLookAndFeel:12:15: note: overridden declaration is here
    open func initClassDefaults(arg0: javax_swing.UIDefaults?)
              ^
com_apple/Sources/AquaLookAndFeel.swift:135:15: error: overriding declaration requires an 'override' keyword
    open func initClassDefaults( _ _arg0: javax_swing.UIDefaults? ) {
              ^
         override 
javax_swing.BasicLookAndFeel:13:15: note: overridden declaration is here
    open func initClassDefaults(_ _arg0: javax_swing.UIDefaults?)
              ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaButtonLabeledUI.swift:162:15: error: overriding declaration requires an 'override' keyword
    open func setThemeBorder( arg0: javax_swing.AbstractButton? ) {
              ^
         override 
com_apple/Sources/AquaButtonUI.swift:145:15: note: overridden declaration is here
    open func setThemeBorder( arg0: javax_swing.AbstractButton? ) {
              ^
com_apple/Sources/AquaButtonLabeledUI.swift:169:15: error: overriding declaration requires an 'override' keyword
    open func setThemeBorder( _ _arg0: javax_swing.AbstractButton? ) {
              ^
         override 
com_apple/Sources/AquaButtonUI.swift:152:15: note: overridden declaration is here
    open func setThemeBorder( _ _arg0: javax_swing.AbstractButton? ) {
              ^
com_apple/Sources/AquaInternalFrameUI.swift:119:14: error: overriding declaration requires an 'override' keyword
    open var frame: javax_swing.JInternalFrame! {
             ^
javax_swing.BasicInternalFrameUI:4:14: note: overridden declaration is here
    open var frame: javax_swing.JInternalFrame! { get set }
             ^
com_apple/Sources/AquaInternalFrameUI.swift:138:14: error: overriding declaration requires an 'override' keyword
    open var borderListener: javax_swing.MouseInputAdapter! {
             ^
javax_swing.BasicInternalFrameUI:5:14: note: overridden declaration is here
    open var borderListener: javax_swing.MouseInputAdapter! { get set }
             ^
com_apple/Sources/AquaInternalFrameUI.swift:155:14: error: overriding declaration requires an 'override' keyword
    open var propertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
             ^
javax_swing.BasicInternalFrameUI:6:14: note: overridden declaration is here
    open var propertyChangeListener: UnclassedProtocol! { get set }
             ^
com_apple/Sources/AquaInternalFrameUI.swift:172:14: error: overriding declaration requires an 'override' keyword
    open var internalFrameLayout: java_awt.LayoutManager! {
             ^
javax_swing.BasicInternalFrameUI:7:14: note: overridden declaration is here
    open var internalFrameLayout: LayoutManager! { get set }
             ^
com_apple/Sources/AquaInternalFrameUI.swift:189:14: error: overriding declaration requires an 'override' keyword
    open var componentListener: java_awt.ComponentListener! {
             ^
javax_swing.BasicInternalFrameUI:8:14: note: overridden declaration is here
    open var componentListener: ComponentListener! { get set }
             ^
com_apple/Sources/AquaInternalFrameUI.swift:206:14: error: overriding declaration requires an 'override' keyword
    open var glassPaneDispatcher: javax_swing.MouseInputListener! {
             ^
javax_swing.BasicInternalFrameUI:9:14: note: overridden declaration is here
    open var glassPaneDispatcher: MouseInputListener! { get set }
             ^
com_apple/Sources/AquaInternalFrameUI.swift:225:14: error: overriding declaration requires an 'override' keyword
    open var northPane: javax_swing.JComponent! {
             ^
javax_swing.BasicInternalFrameUI:10:14: note: overridden declaration is here
    open var northPane: javax_swing.JComponent! { get set }
             ^
com_apple/Sources/AquaInternalFrameUI.swift:242:14: error: overriding declaration requires an 'override' keyword
    open var southPane: javax_swing.JComponent! {
             ^
javax_swing.BasicInternalFrameUI:11:14: note: overridden declaration is here
    open var southPane: javax_swing.JComponent! { get set }
             ^
com_apple/Sources/AquaInternalFrameUI.swift:259:14: error: overriding declaration requires an 'override' keyword
    open var westPane: javax_swing.JComponent! {
             ^
javax_swing.BasicInternalFrameUI:12:14: note: overridden declaration is here
    open var westPane: javax_swing.JComponent! { get set }
             ^
com_apple/Sources/AquaInternalFrameUI.swift:276:14: error: overriding declaration requires an 'override' keyword
    open var eastPane: javax_swing.JComponent! {
             ^
javax_swing.BasicInternalFrameUI:13:14: note: overridden declaration is here
    open var eastPane: javax_swing.JComponent! { get set }
             ^
com_apple/Sources/AquaInternalFrameUI.swift:293:14: error: overriding declaration requires an 'override' keyword
    open var titlePane: javax_swing.BasicInternalFrameTitlePane! {
             ^
javax_swing.BasicInternalFrameUI:14:14: note: overridden declaration is here
    open var titlePane: javax_swing.BasicInternalFrameTitlePane! { get set }
             ^
com_apple/Sources/AquaInternalFrameUI.swift:320:14: error: overriding declaration requires an 'override' keyword
    open var openMenuKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicInternalFrameUI:15:14: note: overridden declaration is here
    open var openMenuKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaInternalFrameUI.swift:656:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicInternalFrameUI:18:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaInternalFrameUI.swift:665:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicInternalFrameUI:19:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaInternalFrameUI.swift:673:15: error: overriding declaration requires an 'override' keyword
    open func installDefaults() {
              ^
         override 
javax_swing.BasicInternalFrameUI:21:15: note: overridden declaration is here
    open func installDefaults()
              ^
com_apple/Sources/AquaInternalFrameUI.swift:684:15: error: overriding declaration requires an 'override' keyword
    open func installListeners() {
              ^
         override 
javax_swing.BasicInternalFrameUI:20:15: note: overridden declaration is here
    open func installListeners()
              ^
com_apple/Sources/AquaInternalFrameUI.swift:695:15: error: overriding declaration requires an 'override' keyword
    open func installKeyboardActions() {
              ^
         override 
javax_swing.BasicInternalFrameUI:23:15: note: overridden declaration is here
    open func installKeyboardActions()
              ^
com_apple/Sources/AquaInternalFrameUI.swift:706:15: error: overriding declaration requires an 'override' keyword
    open func uninstallKeyboardActions() {
              ^
         override 
javax_swing.BasicInternalFrameUI:27:15: note: overridden declaration is here
    open func uninstallKeyboardActions()
              ^
com_apple/Sources/AquaInternalFrameUI.swift:717:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners() {
              ^
         override 
javax_swing.BasicInternalFrameUI:26:15: note: overridden declaration is here
    open func uninstallListeners()
              ^
com_apple/Sources/AquaInternalFrameUI.swift:814:15: error: overriding declaration requires an 'override' keyword
    open func installComponents() {
              ^
         override 
javax_swing.BasicInternalFrameUI:22:15: note: overridden declaration is here
    open func installComponents()
              ^
com_apple/Sources/AquaInternalFrameUI.swift:938:15: error: overriding declaration requires an 'override' keyword
    open func installMouseHandlers( arg0: javax_swing.JComponent? ) {
              ^
         override 
javax_swing.BasicInternalFrameUI:51:15: note: overridden declaration is here
    open func installMouseHandlers(arg0: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:945:15: error: overriding declaration requires an 'override' keyword
    open func installMouseHandlers( _ _arg0: javax_swing.JComponent? ) {
              ^
         override 
javax_swing.BasicInternalFrameUI:52:15: note: overridden declaration is here
    open func installMouseHandlers(_ _arg0: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:953:15: error: overriding declaration requires an 'override' keyword
    open func deinstallMouseHandlers( arg0: javax_swing.JComponent? ) {
              ^
         override 
javax_swing.BasicInternalFrameUI:49:15: note: overridden declaration is here
    open func deinstallMouseHandlers(arg0: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:960:15: error: overriding declaration requires an 'override' keyword
    open func deinstallMouseHandlers( _ _arg0: javax_swing.JComponent? ) {
              ^
         override 
javax_swing.BasicInternalFrameUI:50:15: note: overridden declaration is here
    open func deinstallMouseHandlers(_ _arg0: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:970:15: error: overriding declaration requires an 'override' keyword
    open func replacePane( arg0: javax_swing.JComponent?, arg1: javax_swing.JComponent? ) {
              ^
         override 
javax_swing.BasicInternalFrameUI:47:15: note: overridden declaration is here
    open func replacePane(arg0: javax_swing.JComponent?, arg1: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:978:15: error: overriding declaration requires an 'override' keyword
    open func replacePane( _ _arg0: javax_swing.JComponent?, _ _arg1: javax_swing.JComponent? ) {
              ^
         override 
javax_swing.BasicInternalFrameUI:48:15: note: overridden declaration is here
    open func replacePane(_ _arg0: javax_swing.JComponent?, _ _arg1: javax_swing.JComponent?)
              ^
com_apple/Sources/AquaInternalFrameUI.swift:986:15: error: overriding declaration requires an 'override' keyword
    open func createBorderListener( arg0: javax_swing.JInternalFrame? ) -> javax_swing.MouseInputAdapter! {
              ^
         override 
javax_swing.BasicInternalFrameUI:61:15: note: overridden declaration is here
    open func createBorderListener(arg0: javax_swing.JInternalFrame?) -> javax_swing.MouseInputAdapter!
              ^
com_apple/Sources/AquaInternalFrameUI.swift:995:15: error: overriding declaration requires an 'override' keyword
    open func createBorderListener( _ _arg0: javax_swing.JInternalFrame? ) -> javax_swing.MouseInputAdapter! {
              ^
         override 
javax_swing.BasicInternalFrameUI:62:15: note: overridden declaration is here
    open func createBorderListener(_ _arg0: javax_swing.JInternalFrame?) -> javax_swing.MouseInputAdapter!
              ^
com_apple/Sources/AppEvent_AboutEvent.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AquaPopupMenuUI.swift:38:14: error: overriding declaration requires an 'override' keyword
    open var popupMenu: javax_swing.JPopupMenu! {
             ^
javax_swing.BasicPopupMenuUI:4:14: note: overridden declaration is here
    open var popupMenu: javax_swing.JPopupMenu! { get set }
             ^
com_apple/Sources/AquaPopupMenuUI.swift:79:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicPopupMenuUI:6:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaPopupMenuUI.swift:88:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicPopupMenuUI:7:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaOptionPaneUI_AquaButtonAreaLayout.swift:31:14: error: overriding declaration requires an 'override' keyword
    open var syncAllWidths: Bool {
             ^
javax_swing.BasicOptionPaneUI_ButtonAreaLayout:4:14: note: overridden declaration is here
    open var syncAllWidths: Bool { get set }
             ^
com_apple/Sources/AquaOptionPaneUI_AquaButtonAreaLayout.swift:48:14: error: overriding declaration requires an 'override' keyword
    open var padding: Int {
             ^
javax_swing.BasicOptionPaneUI_ButtonAreaLayout:5:14: note: overridden declaration is here
    open var padding: Int { get set }
             ^
com_apple/Sources/AquaOptionPaneUI_AquaButtonAreaLayout.swift:65:14: error: overriding declaration requires an 'override' keyword
    open var centersChildren: Bool {
             ^
javax_swing.BasicOptionPaneUI_ButtonAreaLayout:6:14: note: overridden declaration is here
    open var centersChildren: Bool { get set }
             ^
com_apple/Sources/AppEvent_PreferencesEvent.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AppEvent_AppForegroundEvent.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AquaTreeUI.swift:152:14: error: overriding declaration requires an 'override' keyword
    open var collapsedIcon: javax_swing.Icon! {
             ^
javax_swing.BasicTreeUI:4:14: note: overridden declaration is here
    open var collapsedIcon: Icon! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:169:14: error: overriding declaration requires an 'override' keyword
    open var expandedIcon: javax_swing.Icon! {
             ^
javax_swing.BasicTreeUI:5:14: note: overridden declaration is here
    open var expandedIcon: Icon! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:188:14: error: overriding declaration requires an 'override' keyword
    open var leftChildIndent: Int {
             ^
javax_swing.BasicTreeUI:6:14: note: overridden declaration is here
    open var leftChildIndent: Int { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:205:14: error: overriding declaration requires an 'override' keyword
    open var rightChildIndent: Int {
             ^
javax_swing.BasicTreeUI:7:14: note: overridden declaration is here
    open var rightChildIndent: Int { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:222:14: error: overriding declaration requires an 'override' keyword
    open var totalChildIndent: Int {
             ^
javax_swing.BasicTreeUI:8:14: note: overridden declaration is here
    open var totalChildIndent: Int { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:239:14: error: overriding declaration requires an 'override' keyword
    open var preferredMinSize: java_awt.Dimension! {
             ^
javax_swing.BasicTreeUI:9:14: note: overridden declaration is here
    open var preferredMinSize: java_awt.Dimension! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:256:14: error: overriding declaration requires an 'override' keyword
    open var lastSelectedRow: Int {
             ^
javax_swing.BasicTreeUI:10:14: note: overridden declaration is here
    open var lastSelectedRow: Int { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:273:14: error: overriding declaration requires an 'override' keyword
    open var tree: javax_swing.JTree! {
             ^
javax_swing.BasicTreeUI:11:14: note: overridden declaration is here
    open var tree: javax_swing.JTree! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:290:14: error: overriding declaration requires an 'override' keyword
    open var currentCellRenderer: javax_swing.TreeCellRenderer! {
             ^
javax_swing.BasicTreeUI:12:14: note: overridden declaration is here
    open var currentCellRenderer: TreeCellRenderer! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:307:14: error: overriding declaration requires an 'override' keyword
    open var createdRenderer: Bool {
             ^
javax_swing.BasicTreeUI:13:14: note: overridden declaration is here
    open var createdRenderer: Bool { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:324:14: error: overriding declaration requires an 'override' keyword
    open var cellEditor: javax_swing.TreeCellEditor! {
             ^
javax_swing.BasicTreeUI:14:14: note: overridden declaration is here
    open var cellEditor: TreeCellEditor! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:341:14: error: overriding declaration requires an 'override' keyword
    open var createdCellEditor: Bool {
             ^
javax_swing.BasicTreeUI:15:14: note: overridden declaration is here
    open var createdCellEditor: Bool { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:358:14: error: overriding declaration requires an 'override' keyword
    open var stopEditingInCompleteEditing: Bool {
             ^
javax_swing.BasicTreeUI:16:14: note: overridden declaration is here
    open var stopEditingInCompleteEditing: Bool { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:375:14: error: overriding declaration requires an 'override' keyword
    open var rendererPane: javax_swing.CellRendererPane! {
             ^
javax_swing.BasicTreeUI:17:14: note: overridden declaration is here
    open var rendererPane: javax_swing.CellRendererPane! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:392:14: error: overriding declaration requires an 'override' keyword
    open var preferredSize: java_awt.Dimension! {
             ^
javax_swing.BasicTreeUI:18:14: note: overridden declaration is here
    open var preferredSize: java_awt.Dimension! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:409:14: error: overriding declaration requires an 'override' keyword
    open var validCachedPreferredSize: Bool {
             ^
javax_swing.BasicTreeUI:19:14: note: overridden declaration is here
    open var validCachedPreferredSize: Bool { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:426:14: error: overriding declaration requires an 'override' keyword
    open var treeState: javax_swing.AbstractLayoutCache! {
             ^
javax_swing.BasicTreeUI:20:14: note: overridden declaration is here
    open var treeState: javax_swing.AbstractLayoutCache! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:443:14: error: overriding declaration requires an 'override' keyword
    open var drawingCache: java_util.Hashtable! {
             ^
javax_swing.BasicTreeUI:21:14: note: overridden declaration is here
    open var drawingCache: java_util.Hashtable! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:460:14: error: overriding declaration requires an 'override' keyword
    open var largeModel: Bool {
             ^
javax_swing.BasicTreeUI:22:14: note: overridden declaration is here
    open var largeModel: Bool { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:477:14: error: overriding declaration requires an 'override' keyword
    open var nodeDimensions: javax_swing.AbstractLayoutCache_NodeDimensions! {
             ^
javax_swing.BasicTreeUI:23:14: note: overridden declaration is here
    open var nodeDimensions: javax_swing.AbstractLayoutCache_NodeDimensions! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:494:14: error: overriding declaration requires an 'override' keyword
    open var treeModel: javax_swing.TreeModel! {
             ^
javax_swing.BasicTreeUI:24:14: note: overridden declaration is here
    open var treeModel: TreeModel! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:511:14: error: overriding declaration requires an 'override' keyword
    open var treeSelectionModel: javax_swing.TreeSelectionModel! {
             ^
javax_swing.BasicTreeUI:25:14: note: overridden declaration is here
    open var treeSelectionModel: TreeSelectionModel! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:528:14: error: overriding declaration requires an 'override' keyword
    open var depthOffset: Int {
             ^
javax_swing.BasicTreeUI:26:14: note: overridden declaration is here
    open var depthOffset: Int { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:545:14: error: overriding declaration requires an 'override' keyword
    open var editingComponent: java_awt.Component! {
             ^
javax_swing.BasicTreeUI:27:14: note: overridden declaration is here
    open var editingComponent: java_awt.Component! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:562:14: error: overriding declaration requires an 'override' keyword
    open var editingPath: javax_swing.TreePath! {
             ^
javax_swing.BasicTreeUI:28:14: note: overridden declaration is here
    open var editingPath: javax_swing.TreePath! { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:579:14: error: overriding declaration requires an 'override' keyword
    open var editingRow: Int {
             ^
javax_swing.BasicTreeUI:29:14: note: overridden declaration is here
    open var editingRow: Int { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:596:14: error: overriding declaration requires an 'override' keyword
    open var editorHasDifferentSize: Bool {
             ^
javax_swing.BasicTreeUI:30:14: note: overridden declaration is here
    open var editorHasDifferentSize: Bool { get set }
             ^
com_apple/Sources/AquaTreeUI.swift:750:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicTreeUI:39:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTreeUI.swift:759:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicTreeUI:40:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTreeUI.swift:767:15: error: overriding declaration requires an 'override' keyword
    open func installKeyboardActions() {
              ^
         override 
javax_swing.BasicTreeUI:57:15: note: overridden declaration is here
    open func installKeyboardActions()
              ^
com_apple/Sources/AquaTreeUI.swift:778:15: error: overriding declaration requires an 'override' keyword
    open func createPropertyChangeListener() -> /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
              ^
         override 
javax_swing.BasicTreeUI:62:15: note: overridden declaration is here
    open func createPropertyChangeListener() -> UnclassedProtocol!
              ^
com_apple/Sources/AquaTreeUI.swift:791:15: error: overriding declaration requires an 'override' keyword
    open func createFocusListener() -> java_awt.FocusListener! {
              ^
         override 
javax_swing.BasicTreeUI:67:15: note: overridden declaration is here
    open func createFocusListener() -> FocusListener!
              ^
com_apple/Sources/AquaTreeUI.swift:877:15: error: overriding declaration requires an 'override' keyword
    open func paintVerticalPartOfLeg( arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: javax_swing.TreePath? ) {
              ^
         override 
javax_swing.BasicTreeUI:113:15: note: overridden declaration is here
    open func paintVerticalPartOfLeg(arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: javax_swing.TreePath?)
              ^
com_apple/Sources/AquaTreeUI.swift:887:15: error: overriding declaration requires an 'override' keyword
    open func paintVerticalPartOfLeg( _ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: javax_swing.TreePath? ) {
              ^
         override 
javax_swing.BasicTreeUI:114:15: note: overridden declaration is here
    open func paintVerticalPartOfLeg(_ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: javax_swing.TreePath?)
              ^
com_apple/Sources/AquaTreeUI.swift:895:15: error: overriding declaration requires an 'override' keyword
    open func paintHorizontalPartOfLeg( arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: java_awt.Rectangle?, arg4: javax_swing.TreePath?, arg5: Int, arg6: Bool, arg7: Bool, arg8: Bool ) {
              ^
         override 
javax_swing.BasicTreeUI:111:15: note: overridden declaration is here
    open func paintHorizontalPartOfLeg(arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: java_awt.Rectangle?, arg4: javax_swing.TreePath?, arg5: Int, arg6: Bool, arg7: Bool, arg8: Bool)
              ^
com_apple/Sources/AquaTreeUI.swift:910:15: error: overriding declaration requires an 'override' keyword
    open func paintHorizontalPartOfLeg( _ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: java_awt.Rectangle?, _ _arg4: javax_swing.TreePath?, _ _arg5: Int, _ _arg6: Bool, _ _arg7: Bool, _ _arg8: Bool ) {
              ^
         override 
javax_swing.BasicTreeUI:112:15: note: overridden declaration is here
    open func paintHorizontalPartOfLeg(_ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: java_awt.Rectangle?, _ _arg4: javax_swing.TreePath?, _ _arg5: Int, _ _arg6: Bool, _ _arg7: Bool, _ _arg8: Bool)
              ^
com_apple/Sources/AquaTreeUI.swift:918:15: error: overriding declaration requires an 'override' keyword
    open func paintExpandControl( arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: java_awt.Rectangle?, arg4: javax_swing.TreePath?, arg5: Int, arg6: Bool, arg7: Bool, arg8: Bool ) {
              ^
         override 
javax_swing.BasicTreeUI:115:15: note: overridden declaration is here
    open func paintExpandControl(arg0: java_awt.Graphics?, arg1: java_awt.Rectangle?, arg2: java_awt.Insets?, arg3: java_awt.Rectangle?, arg4: javax_swing.TreePath?, arg5: Int, arg6: Bool, arg7: Bool, arg8: Bool)
              ^
com_apple/Sources/AquaTreeUI.swift:933:15: error: overriding declaration requires an 'override' keyword
    open func paintExpandControl( _ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: java_awt.Rectangle?, _ _arg4: javax_swing.TreePath?, _ _arg5: Int, _ _arg6: Bool, _ _arg7: Bool, _ _arg8: Bool ) {
              ^
         override 
javax_swing.BasicTreeUI:116:15: note: overridden declaration is here
    open func paintExpandControl(_ _arg0: java_awt.Graphics?, _ _arg1: java_awt.Rectangle?, _ _arg2: java_awt.Insets?, _ _arg3: java_awt.Rectangle?, _ _arg4: javax_swing.TreePath?, _ _arg5: Int, _ _arg6: Bool, _ _arg7: Bool, _ _arg8: Bool)
              ^
com_apple/Sources/AquaTreeUI.swift:960:15: error: overriding declaration requires an 'override' keyword
    open func handleExpandControlClick( arg0: javax_swing.TreePath?, arg1: Int, arg2: Int ) {
              ^
         override 
javax_swing.BasicTreeUI:160:15: note: overridden declaration is here
    open func handleExpandControlClick(arg0: javax_swing.TreePath?, arg1: Int, arg2: Int)
              ^
com_apple/Sources/AquaTreeUI.swift:969:15: error: overriding declaration requires an 'override' keyword
    open func handleExpandControlClick( _ _arg0: javax_swing.TreePath?, _ _arg1: Int, _ _arg2: Int ) {
              ^
         override 
javax_swing.BasicTreeUI:161:15: note: overridden declaration is here
    open func handleExpandControlClick(_ _arg0: javax_swing.TreePath?, _ _arg1: Int, _ _arg2: Int)
              ^
com_apple/Sources/AquaTreeUI.swift:977:15: error: overriding declaration requires an 'override' keyword
    open func isToggleSelectionEvent( arg0: java_awt.MouseEvent? ) -> Bool {
              ^
         override 
javax_swing.BasicTreeUI:164:15: note: overridden declaration is here
    open func isToggleSelectionEvent(arg0: java_awt.MouseEvent?) -> Bool
              ^
com_apple/Sources/AquaTreeUI.swift:985:15: error: overriding declaration requires an 'override' keyword
    open func isToggleSelectionEvent( _ _arg0: java_awt.MouseEvent? ) -> Bool {
              ^
         override 
javax_swing.BasicTreeUI:165:15: note: overridden declaration is here
    open func isToggleSelectionEvent(_ _arg0: java_awt.MouseEvent?) -> Bool
              ^
com_apple/Sources/AquaSplitPaneDividerUI.swift:42:14: error: overriding declaration requires an 'override' keyword
    open var dragger: /* javax.swing.plaf.basic.BasicSplitPaneDivider$DragController */ UnclassedObject! {
             ^
javax_swing.BasicSplitPaneDivider:4:14: note: overridden declaration is here
    open var dragger: java_swift.UnclassedObject! { get set }
             ^
com_apple/Sources/AquaSplitPaneDividerUI.swift:59:14: error: overriding declaration requires an 'override' keyword
    open var splitPaneUI: javax_swing.BasicSplitPaneUI! {
             ^
javax_swing.BasicSplitPaneDivider:5:14: note: overridden declaration is here
    open var splitPaneUI: javax_swing.BasicSplitPaneUI! { get set }
             ^
com_apple/Sources/AquaSplitPaneDividerUI.swift:76:14: error: overriding declaration requires an 'override' keyword
    open var dividerSize: Int {
             ^
javax_swing.BasicSplitPaneDivider:6:14: note: overridden declaration is here
    open var dividerSize: Int { get set }
             ^
com_apple/Sources/AquaSplitPaneDividerUI.swift:93:14: error: overriding declaration requires an 'override' keyword
    open var hiddenDivider: java_awt.Component! {
             ^
javax_swing.BasicSplitPaneDivider:7:14: note: overridden declaration is here
    open var hiddenDivider: java_awt.Component! { get set }
             ^
com_apple/Sources/AquaSplitPaneDividerUI.swift:110:14: error: overriding declaration requires an 'override' keyword
    open var splitPane: javax_swing.JSplitPane! {
             ^
javax_swing.BasicSplitPaneDivider:8:14: note: overridden declaration is here
    open var splitPane: javax_swing.JSplitPane! { get set }
             ^
com_apple/Sources/AquaSplitPaneDividerUI.swift:127:14: error: overriding declaration requires an 'override' keyword
    open var mouseHandler: /* javax.swing.plaf.basic.BasicSplitPaneDivider$MouseHandler */ UnclassedObject! {
             ^
javax_swing.BasicSplitPaneDivider:9:14: note: overridden declaration is here
    open var mouseHandler: java_swift.UnclassedObject! { get set }
             ^
com_apple/Sources/AquaSplitPaneDividerUI.swift:144:14: error: overriding declaration requires an 'override' keyword
    open var orientation: Int {
             ^
javax_swing.BasicSplitPaneDivider:10:14: note: overridden declaration is here
    open var orientation: Int { get set }
             ^
com_apple/Sources/AquaSplitPaneDividerUI.swift:161:14: error: overriding declaration requires an 'override' keyword
    open var leftButton: javax_swing.JButton! {
             ^
javax_swing.BasicSplitPaneDivider:11:14: note: overridden declaration is here
    open var leftButton: javax_swing.JButton! { get set }
             ^
com_apple/Sources/AquaSplitPaneDividerUI.swift:178:14: error: overriding declaration requires an 'override' keyword
    open var rightButton: javax_swing.JButton! {
             ^
javax_swing.BasicSplitPaneDivider:12:14: note: overridden declaration is here
    open var rightButton: javax_swing.JButton! { get set }
             ^
com_apple/Sources/AquaSplitPaneDividerUI.swift:554:15: error: overriding declaration requires an 'override' keyword
    open func createLeftOneTouchButton() -> javax_swing.JButton! {
              ^
         override 
javax_swing.BasicSplitPaneDivider:21:15: note: overridden declaration is here
    open func createLeftOneTouchButton() -> javax_swing.JButton!
              ^
com_apple/Sources/AquaSplitPaneDividerUI.swift:567:15: error: overriding declaration requires an 'override' keyword
    open func createRightOneTouchButton() -> javax_swing.JButton! {
              ^
         override 
javax_swing.BasicSplitPaneDivider:22:15: note: overridden declaration is here
    open func createRightOneTouchButton() -> javax_swing.JButton!
              ^
com_apple/Sources/AquaInternalFrameDockIconUI.swift:323:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.ComponentUI:29:21: note: overridden declaration is here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaInternalFrameDockIconUI.swift:332:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.ComponentUI:30:21: note: overridden declaration is here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaSliderUI.swift:105:14: error: overriding declaration requires an 'override' keyword
    open var scrollTimer: javax_swing.Timer! {
             ^
javax_swing.BasicSliderUI:8:14: note: overridden declaration is here
    open var scrollTimer: javax_swing.Timer! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:122:14: error: overriding declaration requires an 'override' keyword
    open var slider: javax_swing.JSlider! {
             ^
javax_swing.BasicSliderUI:9:14: note: overridden declaration is here
    open var slider: javax_swing.JSlider! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:139:14: error: overriding declaration requires an 'override' keyword
    open var focusInsets: java_awt.Insets! {
             ^
javax_swing.BasicSliderUI:10:14: note: overridden declaration is here
    open var focusInsets: java_awt.Insets! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:156:14: error: overriding declaration requires an 'override' keyword
    open var insetCache: java_awt.Insets! {
             ^
javax_swing.BasicSliderUI:11:14: note: overridden declaration is here
    open var insetCache: java_awt.Insets! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:173:14: error: overriding declaration requires an 'override' keyword
    open var leftToRightCache: Bool {
             ^
javax_swing.BasicSliderUI:12:14: note: overridden declaration is here
    open var leftToRightCache: Bool { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:190:14: error: overriding declaration requires an 'override' keyword
    open var focusRect: java_awt.Rectangle! {
             ^
javax_swing.BasicSliderUI:13:14: note: overridden declaration is here
    open var focusRect: java_awt.Rectangle! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:207:14: error: overriding declaration requires an 'override' keyword
    open var contentRect: java_awt.Rectangle! {
             ^
javax_swing.BasicSliderUI:14:14: note: overridden declaration is here
    open var contentRect: java_awt.Rectangle! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:224:14: error: overriding declaration requires an 'override' keyword
    open var labelRect: java_awt.Rectangle! {
             ^
javax_swing.BasicSliderUI:15:14: note: overridden declaration is here
    open var labelRect: java_awt.Rectangle! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:241:14: error: overriding declaration requires an 'override' keyword
    open var tickRect: java_awt.Rectangle! {
             ^
javax_swing.BasicSliderUI:16:14: note: overridden declaration is here
    open var tickRect: java_awt.Rectangle! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:258:14: error: overriding declaration requires an 'override' keyword
    open var trackRect: java_awt.Rectangle! {
             ^
javax_swing.BasicSliderUI:17:14: note: overridden declaration is here
    open var trackRect: java_awt.Rectangle! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:275:14: error: overriding declaration requires an 'override' keyword
    open var thumbRect: java_awt.Rectangle! {
             ^
javax_swing.BasicSliderUI:18:14: note: overridden declaration is here
    open var thumbRect: java_awt.Rectangle! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:292:14: error: overriding declaration requires an 'override' keyword
    open var trackBuffer: Int {
             ^
javax_swing.BasicSliderUI:19:14: note: overridden declaration is here
    open var trackBuffer: Int { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:311:14: error: overriding declaration requires an 'override' keyword
    open var trackListener: javax_swing.BasicSliderUI_TrackListener! {
             ^
javax_swing.BasicSliderUI:20:14: note: overridden declaration is here
    open var trackListener: javax_swing.BasicSliderUI_TrackListener! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:328:14: error: overriding declaration requires an 'override' keyword
    open var changeListener: javax_swing.ChangeListener! {
             ^
javax_swing.BasicSliderUI:21:14: note: overridden declaration is here
    open var changeListener: ChangeListener! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:345:14: error: overriding declaration requires an 'override' keyword
    open var componentListener: java_awt.ComponentListener! {
             ^
javax_swing.BasicSliderUI:22:14: note: overridden declaration is here
    open var componentListener: ComponentListener! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:362:14: error: overriding declaration requires an 'override' keyword
    open var focusListener: java_awt.FocusListener! {
             ^
javax_swing.BasicSliderUI:23:14: note: overridden declaration is here
    open var focusListener: FocusListener! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:379:14: error: overriding declaration requires an 'override' keyword
    open var scrollListener: javax_swing.BasicSliderUI_ScrollListener! {
             ^
javax_swing.BasicSliderUI:24:14: note: overridden declaration is here
    open var scrollListener: javax_swing.BasicSliderUI_ScrollListener! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:396:14: error: overriding declaration requires an 'override' keyword
    open var propertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
             ^
javax_swing.BasicSliderUI:25:14: note: overridden declaration is here
    open var propertyChangeListener: UnclassedProtocol! { get set }
             ^
com_apple/Sources/AquaSliderUI.swift:518:15: error: overriding declaration requires an 'override' keyword
    open func createChangeListener( arg0: javax_swing.JSlider? ) -> javax_swing.ChangeListener! {
              ^
         override 
javax_swing.BasicSliderUI:33:15: note: overridden declaration is here
    open func createChangeListener(arg0: javax_swing.JSlider?) -> ChangeListener!
              ^
com_apple/Sources/AquaSliderUI.swift:527:15: error: overriding declaration requires an 'override' keyword
    open func createChangeListener( _ _arg0: javax_swing.JSlider? ) -> javax_swing.ChangeListener! {
              ^
         override 
javax_swing.BasicSliderUI:34:15: note: overridden declaration is here
    open func createChangeListener(_ _arg0: javax_swing.JSlider?) -> ChangeListener!
              ^
com_apple/Sources/AquaSliderUI.swift:535:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicSliderUI:29:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaSliderUI.swift:544:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicSliderUI:30:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaSliderUI.swift:568:15: error: overriding declaration requires an 'override' keyword
    open func installListeners( arg0: javax_swing.JSlider? ) {
              ^
         override 
javax_swing.BasicSliderUI:35:15: note: overridden declaration is here
    open func installListeners(arg0: javax_swing.JSlider?)
              ^
com_apple/Sources/AquaSliderUI.swift:575:15: error: overriding declaration requires an 'override' keyword
    open func installListeners( _ _arg0: javax_swing.JSlider? ) {
              ^
         override 
javax_swing.BasicSliderUI:36:15: note: overridden declaration is here
    open func installListeners(_ _arg0: javax_swing.JSlider?)
              ^
com_apple/Sources/AquaSliderUI.swift:583:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners( arg0: javax_swing.JSlider? ) {
              ^
         override 
javax_swing.BasicSliderUI:43:15: note: overridden declaration is here
    open func uninstallListeners(arg0: javax_swing.JSlider?)
              ^
com_apple/Sources/AquaSliderUI.swift:590:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners( _ _arg0: javax_swing.JSlider? ) {
              ^
         override 
javax_swing.BasicSliderUI:44:15: note: overridden declaration is here
    open func uninstallListeners(_ _arg0: javax_swing.JSlider?)
              ^
com_apple/Sources/AquaSliderUI.swift:642:15: error: overriding declaration requires an 'override' keyword
    open func createTrackListener( arg0: javax_swing.JSlider? ) -> javax_swing.BasicSliderUI_TrackListener! {
              ^
         override 
javax_swing.BasicSliderUI:55:15: note: overridden declaration is here
    open func createTrackListener(arg0: javax_swing.JSlider?) -> javax_swing.BasicSliderUI_TrackListener!
              ^
com_apple/Sources/AquaSliderUI.swift:651:15: error: overriding declaration requires an 'override' keyword
    open func createTrackListener( _ _arg0: javax_swing.JSlider? ) -> javax_swing.BasicSliderUI_TrackListener! {
              ^
         override 
javax_swing.BasicSliderUI:56:15: note: overridden declaration is here
    open func createTrackListener(_ _arg0: javax_swing.JSlider?) -> javax_swing.BasicSliderUI_TrackListener!
              ^
com_apple/Sources/AquaSliderUI.swift:659:15: error: overriding declaration requires an 'override' keyword
    open func calculateThumbLocation() {
              ^
         override 
javax_swing.BasicSliderUI:79:15: note: overridden declaration is here
    open func calculateThumbLocation()
              ^
com_apple/Sources/AquaSliderUI.swift:710:15: error: overriding declaration requires an 'override' keyword
    open func calculateThumbSize() {
              ^
         override 
javax_swing.BasicSliderUI:77:15: note: overridden declaration is here
    open func calculateThumbSize()
              ^
com_apple/Sources/AquaSliderUI.swift:733:15: error: overriding declaration requires an 'override' keyword
    open func calculateTickRect() {
              ^
         override 
javax_swing.BasicSliderUI:83:15: note: overridden declaration is here
    open func calculateTickRect()
              ^
com_apple/Sources/ApplicationEvent.swift:37:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
java_util.EventObject:7:14: note: overridden declaration is here
    open var source: java_lang.JavaObject! { get set }
             ^
com_apple/Sources/AquaButtonCheckBoxUI.swift:41:14: error: overriding declaration requires an 'override' keyword
    open var widgetBorder: AquaButtonBorder! {
             ^
com_apple/Sources/AquaButtonLabeledUI.swift:37:14: note: overridden declaration is here
    open var widgetBorder: AquaButtonBorder! {
             ^
com_apple/Sources/AquaButtonCheckBoxUI.swift:72:14: error: overriding declaration requires an 'override' keyword
    open var defaultTextIconGap: Int {
             ^
com_apple/Sources/AquaButtonLabeledUI.swift:68:23: note: overridden declaration is here
    override open var defaultTextIconGap: Int {
                      ^
com_apple/Sources/AquaButtonCheckBoxUI.swift:91:14: error: overriding declaration requires an 'override' keyword
    open var defaultTextShiftOffset: Int {
             ^
com_apple/Sources/AquaButtonLabeledUI.swift:87:23: note: overridden declaration is here
    override open var defaultTextShiftOffset: Int {
                      ^
com_apple/Sources/AquaButtonCheckBoxUI.swift:130:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaButtonToggleUI.swift:103:30: note: overridden declaration is here
    override open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
com_apple/Sources/AquaButtonCheckBoxUI.swift:139:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaButtonToggleUI.swift:112:30: note: overridden declaration is here
    override open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
com_apple/Sources/AquaButtonCheckBoxUI.swift:160:15: error: overriding declaration requires an 'override' keyword
    open func getPropertyPrefix() -> String! {
              ^
         override 
com_apple/Sources/AquaButtonToggleUI.swift:120:24: note: overridden declaration is here
    override open func getPropertyPrefix() -> String! {
                       ^
com_apple/Sources/AquaButtonCheckBoxUI.swift:172:15: error: overriding declaration requires an 'override' keyword
    open func getPainter() -> AquaButtonBorder! {
              ^
         override 
com_apple/Sources/AquaButtonLabeledUI.swift:130:15: note: overridden declaration is here
    open func getPainter() -> AquaButtonBorder! {
              ^
com_apple/Sources/AquaButtonUI.swift:177:15: error: overriding declaration requires an 'override' keyword
    open func paintText( arg0: java_awt.Graphics?, arg1: javax_swing.AbstractButton?, arg2: java_awt.Rectangle?, arg3: String? ) {
              ^
         override 
javax_swing.BasicButtonUI:15:15: note: overridden declaration is here
    open func paintText(arg0: java_awt.Graphics?, arg1: javax_swing.AbstractButton?, arg2: java_awt.Rectangle?, arg3: String?)
              ^
com_apple/Sources/AquaButtonUI.swift:187:15: error: overriding declaration requires an 'override' keyword
    open func paintText( _ _arg0: java_awt.Graphics?, _ _arg1: javax_swing.AbstractButton?, _ _arg2: java_awt.Rectangle?, _ _arg3: String? ) {
              ^
         override 
javax_swing.BasicButtonUI:16:15: note: overridden declaration is here
    open func paintText(_ _arg0: java_awt.Graphics?, _ _arg1: javax_swing.AbstractButton?, _ _arg2: java_awt.Rectangle?, _ _arg3: String?)
              ^
com_apple/Sources/AquaButtonUI.swift:195:15: error: overriding declaration requires an 'override' keyword
    open func paintText( arg0: java_awt.Graphics?, arg1: javax_swing.JComponent?, arg2: java_awt.Rectangle?, arg3: String? ) {
              ^
         override 
javax_swing.BasicButtonUI:17:15: note: overridden declaration is here
    open func paintText(arg0: java_awt.Graphics?, arg1: javax_swing.JComponent?, arg2: java_awt.Rectangle?, arg3: String?)
              ^
com_apple/Sources/AquaButtonUI.swift:205:15: error: overriding declaration requires an 'override' keyword
    open func paintText( _ _arg0: java_awt.Graphics?, _ _arg1: javax_swing.JComponent?, _ _arg2: java_awt.Rectangle?, _ _arg3: String? ) {
              ^
         override 
javax_swing.BasicButtonUI:18:15: note: overridden declaration is here
    open func paintText(_ _arg0: java_awt.Graphics?, _ _arg1: javax_swing.JComponent?, _ _arg2: java_awt.Rectangle?, _ _arg3: String?)
              ^
com_apple/Sources/AquaButtonUI.swift:213:15: error: overriding declaration requires an 'override' keyword
    open func installDefaults( arg0: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:20:15: note: overridden declaration is here
    open func installDefaults(arg0: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaButtonUI.swift:220:15: error: overriding declaration requires an 'override' keyword
    open func installDefaults( _ _arg0: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:21:15: note: overridden declaration is here
    open func installDefaults(_ _arg0: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaButtonUI.swift:308:15: error: overriding declaration requires an 'override' keyword
    open func installListeners( arg0: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:13:15: note: overridden declaration is here
    open func installListeners(arg0: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaButtonUI.swift:315:15: error: overriding declaration requires an 'override' keyword
    open func installListeners( _ _arg0: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:14:15: note: overridden declaration is here
    open func installListeners(_ _arg0: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaButtonUI.swift:323:15: error: overriding declaration requires an 'override' keyword
    open func installKeyboardActions( arg0: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:22:15: note: overridden declaration is here
    open func installKeyboardActions(arg0: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaButtonUI.swift:330:15: error: overriding declaration requires an 'override' keyword
    open func installKeyboardActions( _ _arg0: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:23:15: note: overridden declaration is here
    open func installKeyboardActions(_ _arg0: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaButtonUI.swift:338:15: error: overriding declaration requires an 'override' keyword
    open func uninstallKeyboardActions( arg0: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:28:15: note: overridden declaration is here
    open func uninstallKeyboardActions(arg0: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaButtonUI.swift:345:15: error: overriding declaration requires an 'override' keyword
    open func uninstallKeyboardActions( _ _arg0: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:29:15: note: overridden declaration is here
    open func uninstallKeyboardActions(_ _arg0: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaButtonUI.swift:353:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners( arg0: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:26:15: note: overridden declaration is here
    open func uninstallListeners(arg0: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaButtonUI.swift:360:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners( _ _arg0: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:27:15: note: overridden declaration is here
    open func uninstallListeners(_ _arg0: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaButtonUI.swift:368:15: error: overriding declaration requires an 'override' keyword
    open func uninstallDefaults( arg0: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:24:15: note: overridden declaration is here
    open func uninstallDefaults(arg0: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaButtonUI.swift:375:15: error: overriding declaration requires an 'override' keyword
    open func uninstallDefaults( _ _arg0: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:25:15: note: overridden declaration is here
    open func uninstallDefaults(_ _arg0: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaButtonUI.swift:383:15: error: overriding declaration requires an 'override' keyword
    open func createButtonListener( arg0: javax_swing.AbstractButton? ) -> javax_swing.BasicButtonListener! {
              ^
         override 
javax_swing.BasicButtonUI:33:15: note: overridden declaration is here
    open func createButtonListener(arg0: javax_swing.AbstractButton?) -> javax_swing.BasicButtonListener!
              ^
com_apple/Sources/AquaButtonUI.swift:392:15: error: overriding declaration requires an 'override' keyword
    open func createButtonListener( _ _arg0: javax_swing.AbstractButton? ) -> javax_swing.BasicButtonListener! {
              ^
         override 
javax_swing.BasicButtonUI:34:15: note: overridden declaration is here
    open func createButtonListener(_ _arg0: javax_swing.AbstractButton?) -> javax_swing.BasicButtonListener!
              ^
com_apple/Sources/AquaButtonUI.swift:424:15: error: overriding declaration requires an 'override' keyword
    open func paintButtonPressed( arg0: java_awt.Graphics?, arg1: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:31:15: note: overridden declaration is here
    open func paintButtonPressed(arg0: java_awt.Graphics?, arg1: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaButtonUI.swift:432:15: error: overriding declaration requires an 'override' keyword
    open func paintButtonPressed( _ _arg0: java_awt.Graphics?, _ _arg1: javax_swing.AbstractButton? ) {
              ^
         override 
javax_swing.BasicButtonUI:32:15: note: overridden declaration is here
    open func paintButtonPressed(_ _arg0: java_awt.Graphics?, _ _arg1: javax_swing.AbstractButton?)
              ^
com_apple/Sources/AquaTextPasswordFieldUI.swift:34:14: error: overriding declaration requires an 'override' keyword
    open var delegate: /* com.apple.laf.AquaUtils$JComponentPainter */ UnclassedProtocol! {
             ^
com_apple/Sources/AquaTextFieldUI.swift:32:14: note: overridden declaration is here
    open var delegate: /* com.apple.laf.AquaUtils$JComponentPainter */ UnclassedProtocol! {
             ^
com_apple/Sources/AquaTextPasswordFieldUI.swift:51:14: error: overriding declaration requires an 'override' keyword
    open var handler: AquaFocusHandler! {
             ^
com_apple/Sources/AquaTextFieldUI.swift:49:14: note: overridden declaration is here
    open var handler: AquaFocusHandler! {
             ^
com_apple/Sources/AquaTextFieldUI.swift:100:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicTextFieldUI:5:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTextFieldUI.swift:109:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicTextFieldUI:6:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTextPasswordFieldUI.swift:106:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaTextFieldUI.swift:100:21: note: overridden declaration is here
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
com_apple/Sources/AquaTextPasswordFieldUI.swift:115:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaTextFieldUI.swift:109:21: note: overridden declaration is here
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
com_apple/Sources/AquaTextPasswordFieldUI.swift:123:15: error: overriding declaration requires an 'override' keyword
    open func getPropertyPrefix() -> String! {
              ^
         override 
javax_swing.BasicTextFieldUI:7:24: note: overridden declaration is here
    override open func getPropertyPrefix() -> String!
                       ^
com_apple/Sources/AquaTextFieldUI.swift:128:15: error: overriding declaration requires an 'override' keyword
    open func installListeners() {
              ^
         override 
javax_swing.BasicTextUI:13:15: note: overridden declaration is here
    open func installListeners()
              ^
com_apple/Sources/AquaTextPasswordFieldUI.swift:135:15: error: overriding declaration requires an 'override' keyword
    open func installListeners() {
              ^
         override 
com_apple/Sources/AquaTextFieldUI.swift:128:15: note: overridden declaration is here
    open func installListeners() {
              ^
com_apple/Sources/AquaTextFieldUI.swift:150:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners() {
              ^
         override 
javax_swing.BasicTextUI:18:15: note: overridden declaration is here
    open func uninstallListeners()
              ^
com_apple/Sources/AquaTextPasswordFieldUI.swift:146:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners() {
              ^
         override 
com_apple/Sources/AquaTextFieldUI.swift:150:15: note: overridden declaration is here
    open func uninstallListeners() {
              ^
com_apple/Sources/AquaTextPasswordFieldUI.swift:157:15: error: overriding declaration requires an 'override' keyword
    open func paintBackgroundSafely( arg0: java_awt.Graphics? ) {
              ^
         override 
com_apple/Sources/AquaTextFieldUI.swift:241:15: note: overridden declaration is here
    open func paintBackgroundSafely( arg0: java_awt.Graphics? ) {
              ^
com_apple/Sources/AquaTextPasswordFieldUI.swift:164:15: error: overriding declaration requires an 'override' keyword
    open func paintBackgroundSafely( _ _arg0: java_awt.Graphics? ) {
              ^
         override 
com_apple/Sources/AquaTextFieldUI.swift:248:15: note: overridden declaration is here
    open func paintBackgroundSafely( _ _arg0: java_awt.Graphics? ) {
              ^
com_apple/Sources/AppEvent_FullScreenEvent.swift:35:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AquaProgressBarUI.swift:264:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.ComponentUI:29:21: note: overridden declaration is here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaProgressBarUI.swift:273:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.ComponentUI:30:21: note: overridden declaration is here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaButtonBorder_Toolbar.swift:40:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaButtonBorder.swift:67:23: note: overridden declaration is here
    override open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
                      ^
com_apple/Sources/AquaButtonBorder_Toolbar.swift:52:14: error: overriding declaration requires an 'override' keyword
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaButtonBorder.swift:79:23: note: overridden declaration is here
    override open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
                      ^
com_apple/Sources/AquaButtonBorder_Toolbar.swift:64:14: error: overriding declaration requires an 'override' keyword
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaButtonBorder.swift:91:23: note: overridden declaration is here
    override open var sizeVariant: AquaUtilControlSize_SizeVariant! {
                      ^
com_apple/Sources/AquaButtonBorder_Toolbar.swift:110:15: error: overriding declaration requires an 'override' keyword
    open func doButtonPaint( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:185:15: note: overridden declaration is here
    open func doButtonPaint( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
com_apple/Sources/AquaButtonBorder_Toolbar.swift:123:15: error: overriding declaration requires an 'override' keyword
    open func doButtonPaint( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:198:15: note: overridden declaration is here
    open func doButtonPaint( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^
com_apple/Sources/AquaTextFieldBorder.swift:34:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaBorder.swift:32:14: note: overridden declaration is here
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaTextFieldBorder.swift:46:14: error: overriding declaration requires an 'override' keyword
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaBorder.swift:44:14: note: overridden declaration is here
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaTextFieldBorder.swift:58:14: error: overriding declaration requires an 'override' keyword
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaBorder.swift:56:14: note: overridden declaration is here
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaTextFieldBorder.swift:121:15: error: overriding declaration requires an 'override' keyword
    open func setSize( arg0: /* apple.laf.JRSUIConstants$Size */ UnclassedObject? ) {
              ^
         override 
com_apple/Sources/AquaBorder.swift:107:15: note: overridden declaration is here
    open func setSize( arg0: /* apple.laf.JRSUIConstants$Size */ UnclassedObject? ) {
              ^
com_apple/Sources/AquaTextFieldBorder.swift:128:15: error: overriding declaration requires an 'override' keyword
    open func setSize( _ _arg0: /* apple.laf.JRSUIConstants$Size */ UnclassedObject? ) {
              ^
         override 
com_apple/Sources/AquaBorder.swift:114:15: note: overridden declaration is here
    open func setSize( _ _arg0: /* apple.laf.JRSUIConstants$Size */ UnclassedObject? ) {
              ^
com_apple/Sources/AquaButtonBorder_Toggle.swift:40:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaButtonBorder.swift:67:23: note: overridden declaration is here
    override open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
                      ^
com_apple/Sources/AquaButtonBorder_Toggle.swift:52:14: error: overriding declaration requires an 'override' keyword
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaButtonBorder.swift:79:23: note: overridden declaration is here
    override open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
                      ^
com_apple/Sources/AquaButtonBorder_Toggle.swift:64:14: error: overriding declaration requires an 'override' keyword
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaButtonBorder.swift:91:23: note: overridden declaration is here
    override open var sizeVariant: AquaUtilControlSize_SizeVariant! {
                      ^
com_apple/Sources/AquaButtonBorder_Toggle.swift:110:15: error: overriding declaration requires an 'override' keyword
    open func doButtonPaint( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:185:15: note: overridden declaration is here
    open func doButtonPaint( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
com_apple/Sources/AquaButtonBorder_Toggle.swift:123:15: error: overriding declaration requires an 'override' keyword
    open func doButtonPaint( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:198:15: note: overridden declaration is here
    open func doButtonPaint( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^
com_apple/Sources/AppEvent_FilesEvent.swift:35:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AppEvent_PrintFilesEvent.swift:35:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent_FilesEvent.swift:35:14: note: overridden declaration is here
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/MacOSXResourceBundle.swift:41:14: error: overriding declaration requires an 'override' keyword
    open var parent: java_util.ResourceBundle! {
             ^
java_util.PropertyResourceBundle:7:23: note: overridden declaration is here
    override open var parent: java_util.ResourceBundle! { get set }
                      ^
com_apple/Sources/AquaFileChooserUI.swift:981:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.ComponentUI:29:21: note: overridden declaration is here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaFileChooserUI.swift:990:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.ComponentUI:30:21: note: overridden declaration is here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaSplitPaneUI.swift:39:14: error: overriding declaration requires an 'override' keyword
    open var splitPane: javax_swing.JSplitPane! {
             ^
javax_swing.BasicSplitPaneUI:4:14: note: overridden declaration is here
    open var splitPane: javax_swing.JSplitPane! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:56:14: error: overriding declaration requires an 'override' keyword
    open var layoutManager: javax_swing.BasicSplitPaneUI_BasicHorizontalLayoutManager! {
             ^
javax_swing.BasicSplitPaneUI:5:14: note: overridden declaration is here
    open var layoutManager: javax_swing.BasicSplitPaneUI_BasicHorizontalLayoutManager! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:73:14: error: overriding declaration requires an 'override' keyword
    open var divider: javax_swing.BasicSplitPaneDivider! {
             ^
javax_swing.BasicSplitPaneUI:6:14: note: overridden declaration is here
    open var divider: javax_swing.BasicSplitPaneDivider! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:90:14: error: overriding declaration requires an 'override' keyword
    open var propertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
             ^
javax_swing.BasicSplitPaneUI:7:14: note: overridden declaration is here
    open var propertyChangeListener: UnclassedProtocol! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:107:14: error: overriding declaration requires an 'override' keyword
    open var focusListener: java_awt.FocusListener! {
             ^
javax_swing.BasicSplitPaneUI:8:14: note: overridden declaration is here
    open var focusListener: FocusListener! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:130:14: error: overriding declaration requires an 'override' keyword
    open var dividerSize: Int {
             ^
javax_swing.BasicSplitPaneUI:9:14: note: overridden declaration is here
    open var dividerSize: Int { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:147:14: error: overriding declaration requires an 'override' keyword
    open var nonContinuousLayoutDivider: java_awt.Component! {
             ^
javax_swing.BasicSplitPaneUI:10:14: note: overridden declaration is here
    open var nonContinuousLayoutDivider: java_awt.Component! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:164:14: error: overriding declaration requires an 'override' keyword
    open var draggingHW: Bool {
             ^
javax_swing.BasicSplitPaneUI:11:14: note: overridden declaration is here
    open var draggingHW: Bool { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:181:14: error: overriding declaration requires an 'override' keyword
    open var beginDragDividerLocation: Int {
             ^
javax_swing.BasicSplitPaneUI:12:14: note: overridden declaration is here
    open var beginDragDividerLocation: Int { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:198:14: error: overriding declaration requires an 'override' keyword
    open var upKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicSplitPaneUI:13:14: note: overridden declaration is here
    open var upKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:215:14: error: overriding declaration requires an 'override' keyword
    open var downKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicSplitPaneUI:14:14: note: overridden declaration is here
    open var downKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:232:14: error: overriding declaration requires an 'override' keyword
    open var leftKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicSplitPaneUI:15:14: note: overridden declaration is here
    open var leftKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:249:14: error: overriding declaration requires an 'override' keyword
    open var rightKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicSplitPaneUI:16:14: note: overridden declaration is here
    open var rightKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:266:14: error: overriding declaration requires an 'override' keyword
    open var homeKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicSplitPaneUI:17:14: note: overridden declaration is here
    open var homeKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:283:14: error: overriding declaration requires an 'override' keyword
    open var endKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicSplitPaneUI:18:14: note: overridden declaration is here
    open var endKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:300:14: error: overriding declaration requires an 'override' keyword
    open var dividerResizeToggleKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicSplitPaneUI:19:14: note: overridden declaration is here
    open var dividerResizeToggleKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:317:14: error: overriding declaration requires an 'override' keyword
    open var keyboardUpLeftListener: java_awt.ActionListener! {
             ^
javax_swing.BasicSplitPaneUI:20:14: note: overridden declaration is here
    open var keyboardUpLeftListener: ActionListener! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:334:14: error: overriding declaration requires an 'override' keyword
    open var keyboardDownRightListener: java_awt.ActionListener! {
             ^
javax_swing.BasicSplitPaneUI:21:14: note: overridden declaration is here
    open var keyboardDownRightListener: ActionListener! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:351:14: error: overriding declaration requires an 'override' keyword
    open var keyboardHomeListener: java_awt.ActionListener! {
             ^
javax_swing.BasicSplitPaneUI:22:14: note: overridden declaration is here
    open var keyboardHomeListener: ActionListener! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:368:14: error: overriding declaration requires an 'override' keyword
    open var keyboardEndListener: java_awt.ActionListener! {
             ^
javax_swing.BasicSplitPaneUI:23:14: note: overridden declaration is here
    open var keyboardEndListener: ActionListener! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:385:14: error: overriding declaration requires an 'override' keyword
    open var keyboardResizeToggleListener: java_awt.ActionListener! {
             ^
javax_swing.BasicSplitPaneUI:24:14: note: overridden declaration is here
    open var keyboardResizeToggleListener: ActionListener! { get set }
             ^
com_apple/Sources/AquaSplitPaneUI.swift:524:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicSplitPaneUI:29:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaSplitPaneUI.swift:533:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicSplitPaneUI:30:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaSplitPaneUI.swift:541:15: error: overriding declaration requires an 'override' keyword
    open func installListeners() {
              ^
         override 
javax_swing.BasicSplitPaneUI:33:15: note: overridden declaration is here
    open func installListeners()
              ^
com_apple/Sources/AquaSplitPaneUI.swift:552:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners() {
              ^
         override 
javax_swing.BasicSplitPaneUI:38:15: note: overridden declaration is here
    open func uninstallListeners()
              ^
com_apple/Sources/AquaTextFieldUI.swift:117:15: error: overriding declaration requires an 'override' keyword
    open func installDefaults() {
              ^
         override 
javax_swing.BasicTextUI:15:15: note: overridden declaration is here
    open func installDefaults()
              ^
com_apple/Sources/AquaTextFieldUI.swift:139:15: error: overriding declaration requires an 'override' keyword
    open func installKeyboardActions() {
              ^
         override 
javax_swing.BasicTextUI:16:15: note: overridden declaration is here
    open func installKeyboardActions()
              ^
com_apple/Sources/AquaTextFieldUI.swift:161:15: error: overriding declaration requires an 'override' keyword
    open func uninstallDefaults() {
              ^
         override 
javax_swing.BasicTextUI:17:15: note: overridden declaration is here
    open func uninstallDefaults()
              ^
com_apple/Sources/AquaTextFieldUI.swift:172:15: error: overriding declaration requires an 'override' keyword
    open func createCaret() -> javax_swing.Caret! {
              ^
         override 
javax_swing.BasicTextUI:12:15: note: overridden declaration is here
    open func createCaret() -> Caret!
              ^
com_apple/Sources/AquaTextFieldUI.swift:185:15: error: overriding declaration requires an 'override' keyword
    open func createHighlighter() -> javax_swing.Highlighter! {
              ^
         override 
javax_swing.BasicTextUI:22:15: note: overridden declaration is here
    open func createHighlighter() -> Highlighter!
              ^
com_apple/Sources/AquaTextFieldUI.swift:198:15: error: overriding declaration requires an 'override' keyword
    open func paintBackground( arg0: java_awt.Graphics? ) {
              ^
         override 
javax_swing.BasicTextUI:20:15: note: overridden declaration is here
    open func paintBackground(arg0: java_awt.Graphics?)
              ^
com_apple/Sources/AquaTextFieldUI.swift:205:15: error: overriding declaration requires an 'override' keyword
    open func paintBackground( _ _arg0: java_awt.Graphics? ) {
              ^
         override 
javax_swing.BasicTextUI:21:15: note: overridden declaration is here
    open func paintBackground(_ _arg0: java_awt.Graphics?)
              ^
com_apple/Sources/AquaTextFieldUI.swift:213:15: error: overriding declaration requires an 'override' keyword
    open func paintSafely( arg0: java_awt.Graphics? ) {
              ^
         override 
javax_swing.BasicTextUI:28:15: note: overridden declaration is here
    open func paintSafely(arg0: java_awt.Graphics?)
              ^
com_apple/Sources/AquaTextFieldUI.swift:220:15: error: overriding declaration requires an 'override' keyword
    open func paintSafely( _ _arg0: java_awt.Graphics? ) {
              ^
         override 
javax_swing.BasicTextUI:29:15: note: overridden declaration is here
    open func paintSafely(_ _arg0: java_awt.Graphics?)
              ^
com_apple/Sources/AquaTextFieldUI.swift:228:15: error: overriding declaration requires an 'override' keyword
    open func getVisibleEditorRect() -> java_awt.Rectangle! {
              ^
         override 
javax_swing.BasicTextUI:30:15: note: overridden declaration is here
    open func getVisibleEditorRect() -> java_awt.Rectangle!
              ^
com_apple/Sources/AquaOptionPaneUI.swift:46:14: error: overriding declaration requires an 'override' keyword
    open var optionPane: javax_swing.JOptionPane! {
             ^
javax_swing.BasicOptionPaneUI:6:14: note: overridden declaration is here
    open var optionPane: javax_swing.JOptionPane! { get set }
             ^
com_apple/Sources/AquaOptionPaneUI.swift:63:14: error: overriding declaration requires an 'override' keyword
    open var minimumSize: java_awt.Dimension! {
             ^
javax_swing.BasicOptionPaneUI:7:14: note: overridden declaration is here
    open var minimumSize: java_awt.Dimension! { get set }
             ^
com_apple/Sources/AquaOptionPaneUI.swift:80:14: error: overriding declaration requires an 'override' keyword
    open var inputComponent: javax_swing.JComponent! {
             ^
javax_swing.BasicOptionPaneUI:8:14: note: overridden declaration is here
    open var inputComponent: javax_swing.JComponent! { get set }
             ^
com_apple/Sources/AquaOptionPaneUI.swift:97:14: error: overriding declaration requires an 'override' keyword
    open var initialFocusComponent: java_awt.Component! {
             ^
javax_swing.BasicOptionPaneUI:9:14: note: overridden declaration is here
    open var initialFocusComponent: java_awt.Component! { get set }
             ^
com_apple/Sources/AquaOptionPaneUI.swift:114:14: error: overriding declaration requires an 'override' keyword
    open var hasCustomComponents: Bool {
             ^
javax_swing.BasicOptionPaneUI:10:14: note: overridden declaration is here
    open var hasCustomComponents: Bool { get set }
             ^
com_apple/Sources/AquaOptionPaneUI.swift:131:14: error: overriding declaration requires an 'override' keyword
    open var propertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
             ^
javax_swing.BasicOptionPaneUI:11:14: note: overridden declaration is here
    open var propertyChangeListener: UnclassedProtocol! { get set }
             ^
com_apple/Sources/AquaOptionPaneUI.swift:162:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicOptionPaneUI:15:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaOptionPaneUI.swift:171:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicOptionPaneUI:16:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaOptionPaneUI.swift:179:15: error: overriding declaration requires an 'override' keyword
    open func createButtonArea() -> java_awt.Container! {
              ^
         override 
javax_swing.BasicOptionPaneUI:42:15: note: overridden declaration is here
    open func createButtonArea() -> java_awt.Container!
              ^
com_apple/Sources/AquaOptionPaneUI.swift:192:15: error: overriding declaration requires an 'override' keyword
    open func createMessageArea() -> java_awt.Container! {
              ^
         override 
javax_swing.BasicOptionPaneUI:34:15: note: overridden declaration is here
    open func createMessageArea() -> java_awt.Container!
              ^
com_apple/Sources/AquaTextFieldUI.swift:117:15: error: overriding declaration requires an 'override' keyword
    open func installDefaults() {
              ^
         override 
javax_swing.BasicTextUI:15:15: note: overridden declaration is here
    open func installDefaults()
              ^
com_apple/Sources/AquaTextFieldUI.swift:139:15: error: overriding declaration requires an 'override' keyword
    open func installKeyboardActions() {
              ^
         override 
javax_swing.BasicTextUI:16:15: note: overridden declaration is here
    open func installKeyboardActions()
              ^
com_apple/Sources/AquaTextFieldUI.swift:161:15: error: overriding declaration requires an 'override' keyword
    open func uninstallDefaults() {
              ^
         override 
javax_swing.BasicTextUI:17:15: note: overridden declaration is here
    open func uninstallDefaults()
              ^
com_apple/Sources/AquaTextFieldUI.swift:172:15: error: overriding declaration requires an 'override' keyword
    open func createCaret() -> javax_swing.Caret! {
              ^
         override 
javax_swing.BasicTextUI:12:15: note: overridden declaration is here
    open func createCaret() -> Caret!
              ^
com_apple/Sources/AquaTextFieldUI.swift:185:15: error: overriding declaration requires an 'override' keyword
    open func createHighlighter() -> javax_swing.Highlighter! {
              ^
         override 
javax_swing.BasicTextUI:22:15: note: overridden declaration is here
    open func createHighlighter() -> Highlighter!
              ^
com_apple/Sources/AquaTextFieldUI.swift:198:15: error: overriding declaration requires an 'override' keyword
    open func paintBackground( arg0: java_awt.Graphics? ) {
              ^
         override 
javax_swing.BasicTextUI:20:15: note: overridden declaration is here
    open func paintBackground(arg0: java_awt.Graphics?)
              ^
com_apple/Sources/AquaTextFieldUI.swift:205:15: error: overriding declaration requires an 'override' keyword
    open func paintBackground( _ _arg0: java_awt.Graphics? ) {
              ^
         override 
javax_swing.BasicTextUI:21:15: note: overridden declaration is here
    open func paintBackground(_ _arg0: java_awt.Graphics?)
              ^
com_apple/Sources/AquaTextFieldUI.swift:213:15: error: overriding declaration requires an 'override' keyword
    open func paintSafely( arg0: java_awt.Graphics? ) {
              ^
         override 
javax_swing.BasicTextUI:28:15: note: overridden declaration is here
    open func paintSafely(arg0: java_awt.Graphics?)
              ^
com_apple/Sources/AquaTextFieldUI.swift:220:15: error: overriding declaration requires an 'override' keyword
    open func paintSafely( _ _arg0: java_awt.Graphics? ) {
              ^
         override 
javax_swing.BasicTextUI:29:15: note: overridden declaration is here
    open func paintSafely(_ _arg0: java_awt.Graphics?)
              ^
com_apple/Sources/AquaTextFieldUI.swift:228:15: error: overriding declaration requires an 'override' keyword
    open func getVisibleEditorRect() -> java_awt.Rectangle! {
              ^
         override 
javax_swing.BasicTextUI:30:15: note: overridden declaration is here
    open func getVisibleEditorRect() -> java_awt.Rectangle!
              ^
com_apple/Sources/AppEvent_OpenFilesEvent.swift:37:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent_FilesEvent.swift:35:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AquaEditorPaneUI.swift:70:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicEditorPaneUI:7:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaEditorPaneUI.swift:79:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicEditorPaneUI:8:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaEditorPaneUI.swift:87:15: error: overriding declaration requires an 'override' keyword
    open func installDefaults() {
              ^
         override 
javax_swing.BasicTextUI:15:15: note: overridden declaration is here
    open func installDefaults()
              ^
com_apple/Sources/AquaEditorPaneUI.swift:98:15: error: overriding declaration requires an 'override' keyword
    open func installListeners() {
              ^
         override 
javax_swing.BasicTextUI:13:15: note: overridden declaration is here
    open func installListeners()
              ^
com_apple/Sources/AquaEditorPaneUI.swift:109:15: error: overriding declaration requires an 'override' keyword
    open func installKeyboardActions() {
              ^
         override 
javax_swing.BasicTextUI:16:15: note: overridden declaration is here
    open func installKeyboardActions()
              ^
com_apple/Sources/AquaEditorPaneUI.swift:120:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners() {
              ^
         override 
javax_swing.BasicTextUI:18:15: note: overridden declaration is here
    open func uninstallListeners()
              ^
com_apple/Sources/AquaEditorPaneUI.swift:131:15: error: overriding declaration requires an 'override' keyword
    open func uninstallDefaults() {
              ^
         override 
javax_swing.BasicTextUI:17:15: note: overridden declaration is here
    open func uninstallDefaults()
              ^
com_apple/Sources/AquaEditorPaneUI.swift:155:15: error: overriding declaration requires an 'override' keyword
    open func createCaret() -> javax_swing.Caret! {
              ^
         override 
javax_swing.BasicTextUI:12:15: note: overridden declaration is here
    open func createCaret() -> Caret!
              ^
com_apple/Sources/AquaEditorPaneUI.swift:168:15: error: overriding declaration requires an 'override' keyword
    open func createHighlighter() -> javax_swing.Highlighter! {
              ^
         override 
javax_swing.BasicTextUI:22:15: note: overridden declaration is here
    open func createHighlighter() -> Highlighter!
              ^
com_apple/Sources/AppEvent_AppHiddenEvent.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AppEvent_QuitEvent.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AquaGroupBorder.swift:37:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaBorder.swift:32:14: note: overridden declaration is here
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaGroupBorder.swift:49:14: error: overriding declaration requires an 'override' keyword
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaBorder.swift:44:14: note: overridden declaration is here
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaGroupBorder.swift:61:14: error: overriding declaration requires an 'override' keyword
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaBorder.swift:56:14: note: overridden declaration is here
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaButtonCheckBoxUI_CheckBoxButtonBorder.swift:38:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:40:23: note: overridden declaration is here
    override open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
                      ^
com_apple/Sources/AquaButtonCheckBoxUI_CheckBoxButtonBorder.swift:50:14: error: overriding declaration requires an 'override' keyword
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:52:23: note: overridden declaration is here
    override open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
                      ^
com_apple/Sources/AquaButtonCheckBoxUI_CheckBoxButtonBorder.swift:62:14: error: overriding declaration requires an 'override' keyword
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:64:23: note: overridden declaration is here
    override open var sizeVariant: AquaUtilControlSize_SizeVariant! {
                      ^
com_apple/Sources/AquaButtonBorder_Named.swift:40:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaButtonBorder.swift:67:23: note: overridden declaration is here
    override open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
                      ^
com_apple/Sources/AquaButtonExtendedTypes_SegmentedNamedBorder.swift:38:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaButtonBorder_Named.swift:40:14: note: overridden declaration is here
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaButtonBorder_Named.swift:52:14: error: overriding declaration requires an 'override' keyword
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaButtonBorder.swift:79:23: note: overridden declaration is here
    override open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
                      ^
com_apple/Sources/AquaButtonExtendedTypes_SegmentedNamedBorder.swift:50:14: error: overriding declaration requires an 'override' keyword
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaButtonBorder_Named.swift:52:14: note: overridden declaration is here
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaButtonBorder_Named.swift:64:14: error: overriding declaration requires an 'override' keyword
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaButtonBorder.swift:91:23: note: overridden declaration is here
    override open var sizeVariant: AquaUtilControlSize_SizeVariant! {
                      ^
com_apple/Sources/AquaButtonExtendedTypes_SegmentedNamedBorder.swift:62:14: error: overriding declaration requires an 'override' keyword
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaButtonBorder_Named.swift:64:14: note: overridden declaration is here
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaButtonExtendedTypes_SegmentedNamedBorder.swift:114:15: error: overriding declaration requires an 'override' keyword
    open func isSelectionPressing() -> Bool {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:294:15: note: overridden declaration is here
    open func isSelectionPressing() -> Bool {
              ^
com_apple/Sources/AppEvent_AppReOpenedEvent.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AquaSpinnerUI.swift:64:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.ComponentUI:29:21: note: overridden declaration is here
    open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaSpinnerUI.swift:73:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.ComponentUI:30:21: note: overridden declaration is here
    open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                    ^
com_apple/Sources/AquaTableUI.swift:51:14: error: overriding declaration requires an 'override' keyword
    open var table: javax_swing.JTable! {
             ^
javax_swing.BasicTableUI:4:14: note: overridden declaration is here
    open var table: javax_swing.JTable! { get set }
             ^
com_apple/Sources/AquaTableUI.swift:68:14: error: overriding declaration requires an 'override' keyword
    open var rendererPane: javax_swing.CellRendererPane! {
             ^
javax_swing.BasicTableUI:5:14: note: overridden declaration is here
    open var rendererPane: javax_swing.CellRendererPane! { get set }
             ^
com_apple/Sources/AquaTableUI.swift:85:14: error: overriding declaration requires an 'override' keyword
    open var keyListener: java_awt.KeyListener! {
             ^
javax_swing.BasicTableUI:6:14: note: overridden declaration is here
    open var keyListener: KeyListener! { get set }
             ^
com_apple/Sources/AquaTableUI.swift:102:14: error: overriding declaration requires an 'override' keyword
    open var focusListener: java_awt.FocusListener! {
             ^
javax_swing.BasicTableUI:7:14: note: overridden declaration is here
    open var focusListener: FocusListener! { get set }
             ^
com_apple/Sources/AquaTableUI.swift:119:14: error: overriding declaration requires an 'override' keyword
    open var mouseInputListener: javax_swing.MouseInputListener! {
             ^
javax_swing.BasicTableUI:8:14: note: overridden declaration is here
    open var mouseInputListener: MouseInputListener! { get set }
             ^
com_apple/Sources/AquaTableUI.swift:156:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicTableUI:10:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTableUI.swift:165:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicTableUI:11:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTableUI.swift:173:15: error: overriding declaration requires an 'override' keyword
    open func installListeners() {
              ^
         override 
javax_swing.BasicTableUI:12:15: note: overridden declaration is here
    open func installListeners()
              ^
com_apple/Sources/AquaTableUI.swift:184:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners() {
              ^
         override 
javax_swing.BasicTableUI:16:15: note: overridden declaration is here
    open func uninstallListeners()
              ^
com_apple/Sources/AquaTableUI.swift:195:15: error: overriding declaration requires an 'override' keyword
    open func createFocusListener() -> java_awt.FocusListener! {
              ^
         override 
javax_swing.BasicTableUI:20:15: note: overridden declaration is here
    open func createFocusListener() -> FocusListener!
              ^
com_apple/Sources/AquaTableUI.swift:208:15: error: overriding declaration requires an 'override' keyword
    open func createMouseInputListener() -> javax_swing.MouseInputListener! {
              ^
         override 
javax_swing.BasicTableUI:18:15: note: overridden declaration is here
    open func createMouseInputListener() -> MouseInputListener!
              ^
com_apple/Sources/AppEvent_QuitEvent.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AquaButtonBorder_Named.swift:40:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaButtonBorder.swift:67:23: note: overridden declaration is here
    override open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
                      ^
com_apple/Sources/AquaButtonBorder_Named.swift:52:14: error: overriding declaration requires an 'override' keyword
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaButtonBorder.swift:79:23: note: overridden declaration is here
    override open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
                      ^
com_apple/Sources/AquaButtonBorder_Named.swift:64:14: error: overriding declaration requires an 'override' keyword
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaButtonBorder.swift:91:23: note: overridden declaration is here
    override open var sizeVariant: AquaUtilControlSize_SizeVariant! {
                      ^
com_apple/Sources/AquaButtonBorder_Named.swift:116:15: error: overriding declaration requires an 'override' keyword
    open func doButtonPaint( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:185:15: note: overridden declaration is here
    open func doButtonPaint( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
com_apple/Sources/AquaButtonBorder_Named.swift:129:15: error: overriding declaration requires an 'override' keyword
    open func doButtonPaint( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:198:15: note: overridden declaration is here
    open func doButtonPaint( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^
com_apple/Sources/AquaMenuBarUI.swift:36:14: error: overriding declaration requires an 'override' keyword
    open var menuBar: javax_swing.JMenuBar! {
             ^
javax_swing.BasicMenuBarUI:4:14: note: overridden declaration is here
    open var menuBar: javax_swing.JMenuBar! { get set }
             ^
com_apple/Sources/AquaMenuBarUI.swift:53:14: error: overriding declaration requires an 'override' keyword
    open var containerListener: java_awt.ContainerListener! {
             ^
javax_swing.BasicMenuBarUI:5:14: note: overridden declaration is here
    open var containerListener: ContainerListener! { get set }
             ^
com_apple/Sources/AquaMenuBarUI.swift:70:14: error: overriding declaration requires an 'override' keyword
    open var changeListener: javax_swing.ChangeListener! {
             ^
javax_swing.BasicMenuBarUI:6:14: note: overridden declaration is here
    open var changeListener: ChangeListener! { get set }
             ^
com_apple/Sources/AquaMenuBarUI.swift:120:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicMenuBarUI:8:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaMenuBarUI.swift:129:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicMenuBarUI:9:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaMenuBarUI.swift:137:15: error: overriding declaration requires an 'override' keyword
    open func installKeyboardActions() {
              ^
         override 
javax_swing.BasicMenuBarUI:13:15: note: overridden declaration is here
    open func installKeyboardActions()
              ^
com_apple/Sources/AquaMenuBarUI.swift:148:15: error: overriding declaration requires an 'override' keyword
    open func uninstallKeyboardActions() {
              ^
         override 
javax_swing.BasicMenuBarUI:16:15: note: overridden declaration is here
    open func uninstallKeyboardActions()
              ^
com_apple/Sources/AquaToolTipUI.swift:51:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicToolTipUI:5:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaToolTipUI.swift:60:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicToolTipUI:6:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AppEvent_SystemSleepEvent.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AppEvent_AppHiddenEvent.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AppEvent_QuitEvent.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AquaTabbedPaneUI.swift:178:14: error: overriding declaration requires an 'override' keyword
    open var tabPane: javax_swing.JTabbedPane! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:32:14: note: overridden declaration is here
    open var tabPane: javax_swing.JTabbedPane! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:195:14: error: overriding declaration requires an 'override' keyword
    open var highlight: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:49:14: note: overridden declaration is here
    open var highlight: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:212:14: error: overriding declaration requires an 'override' keyword
    open var lightHighlight: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:66:14: note: overridden declaration is here
    open var lightHighlight: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:229:14: error: overriding declaration requires an 'override' keyword
    open var shadow: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:83:14: note: overridden declaration is here
    open var shadow: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:246:14: error: overriding declaration requires an 'override' keyword
    open var darkShadow: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:100:14: note: overridden declaration is here
    open var darkShadow: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:263:14: error: overriding declaration requires an 'override' keyword
    open var focus: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:117:14: note: overridden declaration is here
    open var focus: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:282:14: error: overriding declaration requires an 'override' keyword
    open var textIconGap: Int {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:136:14: note: overridden declaration is here
    open var textIconGap: Int {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:299:14: error: overriding declaration requires an 'override' keyword
    open var tabRunOverlay: Int {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:153:14: note: overridden declaration is here
    open var tabRunOverlay: Int {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:316:14: error: overriding declaration requires an 'override' keyword
    open var tabInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:170:14: note: overridden declaration is here
    open var tabInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:333:14: error: overriding declaration requires an 'override' keyword
    open var selectedTabPadInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:187:14: note: overridden declaration is here
    open var selectedTabPadInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:350:14: error: overriding declaration requires an 'override' keyword
    open var tabAreaInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:204:14: note: overridden declaration is here
    open var tabAreaInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:367:14: error: overriding declaration requires an 'override' keyword
    open var contentBorderInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:221:14: note: overridden declaration is here
    open var contentBorderInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:390:14: error: overriding declaration requires an 'override' keyword
    open var upKey: javax_swing.KeyStroke! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:244:14: note: overridden declaration is here
    open var upKey: javax_swing.KeyStroke! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:407:14: error: overriding declaration requires an 'override' keyword
    open var downKey: javax_swing.KeyStroke! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:261:14: note: overridden declaration is here
    open var downKey: javax_swing.KeyStroke! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:424:14: error: overriding declaration requires an 'override' keyword
    open var leftKey: javax_swing.KeyStroke! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:278:14: note: overridden declaration is here
    open var leftKey: javax_swing.KeyStroke! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:441:14: error: overriding declaration requires an 'override' keyword
    open var rightKey: javax_swing.KeyStroke! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:295:14: note: overridden declaration is here
    open var rightKey: javax_swing.KeyStroke! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:458:14: error: overriding declaration requires an 'override' keyword
    open var tabRuns: [Int32]! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:312:14: note: overridden declaration is here
    open var tabRuns: [Int32]! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:475:14: error: overriding declaration requires an 'override' keyword
    open var runCount: Int {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:329:14: note: overridden declaration is here
    open var runCount: Int {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:492:14: error: overriding declaration requires an 'override' keyword
    open var selectedRun: Int {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:346:14: note: overridden declaration is here
    open var selectedRun: Int {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:509:14: error: overriding declaration requires an 'override' keyword
    open var rects: [Rectangle]! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:363:14: note: overridden declaration is here
    open var rects: [Rectangle]! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:526:14: error: overriding declaration requires an 'override' keyword
    open var maxTabHeight: Int {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:380:14: note: overridden declaration is here
    open var maxTabHeight: Int {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:543:14: error: overriding declaration requires an 'override' keyword
    open var maxTabWidth: Int {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:397:14: note: overridden declaration is here
    open var maxTabWidth: Int {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:560:14: error: overriding declaration requires an 'override' keyword
    open var tabChangeListener: javax_swing.ChangeListener! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:414:14: note: overridden declaration is here
    open var tabChangeListener: javax_swing.ChangeListener! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:577:14: error: overriding declaration requires an 'override' keyword
    open var propertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:431:14: note: overridden declaration is here
    open var propertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:594:14: error: overriding declaration requires an 'override' keyword
    open var mouseListener: java_awt.MouseListener! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:448:14: note: overridden declaration is here
    open var mouseListener: java_awt.MouseListener! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:611:14: error: overriding declaration requires an 'override' keyword
    open var focusListener: java_awt.FocusListener! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:465:14: note: overridden declaration is here
    open var focusListener: java_awt.FocusListener! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:644:14: error: overriding declaration requires an 'override' keyword
    open var calcRect: java_awt.Rectangle! {
             ^
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:498:14: note: overridden declaration is here
    open var calcRect: java_awt.Rectangle! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:750:15: error: overriding declaration requires an 'override' keyword
    open func createChangeListener() -> javax_swing.ChangeListener! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:843:15: note: overridden declaration is here
    open func createChangeListener() -> javax_swing.ChangeListener! {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:763:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:856:30: note: overridden declaration is here
    override open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
com_apple/Sources/AquaTabbedPaneUI.swift:772:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:865:30: note: overridden declaration is here
    override open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
com_apple/Sources/AquaTabbedPaneUI.swift:780:15: error: overriding declaration requires an 'override' keyword
    open func installDefaults() {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:915:15: note: overridden declaration is here
    open func installDefaults() {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:791:15: error: overriding declaration requires an 'override' keyword
    open func installListeners() {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:926:15: note: overridden declaration is here
    open func installListeners() {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:802:15: error: overriding declaration requires an 'override' keyword
    open func uninstallDefaults() {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:970:15: note: overridden declaration is here
    open func uninstallDefaults() {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:813:15: error: overriding declaration requires an 'override' keyword
    open func createMouseListener() -> java_awt.MouseListener! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:983:15: note: overridden declaration is here
    open func createMouseListener() -> java_awt.MouseListener! {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:826:15: error: overriding declaration requires an 'override' keyword
    open func createPropertyChangeListener() -> /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:996:15: note: overridden declaration is here
    open func createPropertyChangeListener() -> /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:839:15: error: overriding declaration requires an 'override' keyword
    open func createFocusListener() -> java_awt.FocusListener! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1009:15: note: overridden declaration is here
    open func createFocusListener() -> java_awt.FocusListener! {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:852:15: error: overriding declaration requires an 'override' keyword
    open func createLayoutManager() -> java_awt.LayoutManager! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1046:15: note: overridden declaration is here
    open func createLayoutManager() -> java_awt.LayoutManager! {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:975:15: error: overriding declaration requires an 'override' keyword
    open func assureRectsCreated( arg0: Int ) {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1078:15: note: overridden declaration is here
    open func assureRectsCreated( arg0: Int ) {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:982:15: error: overriding declaration requires an 'override' keyword
    open func assureRectsCreated( _ _arg0: Int ) {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1085:15: note: overridden declaration is here
    open func assureRectsCreated( _ _arg0: Int ) {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1049:15: error: overriding declaration requires an 'override' keyword
    open func getTabLabelShiftX( arg0: Int, arg1: Int, arg2: Bool ) -> Int {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1093:15: note: overridden declaration is here
    open func getTabLabelShiftX( arg0: Int, arg1: Int, arg2: Bool ) -> Int {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1059:15: error: overriding declaration requires an 'override' keyword
    open func getTabLabelShiftX( _ _arg0: Int, _ _arg1: Int, _ _arg2: Bool ) -> Int {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1103:15: note: overridden declaration is here
    open func getTabLabelShiftX( _ _arg0: Int, _ _arg1: Int, _ _arg2: Bool ) -> Int {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1067:15: error: overriding declaration requires an 'override' keyword
    open func getTabLabelShiftY( arg0: Int, arg1: Int, arg2: Bool ) -> Int {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1111:15: note: overridden declaration is here
    open func getTabLabelShiftY( arg0: Int, arg1: Int, arg2: Bool ) -> Int {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1077:15: error: overriding declaration requires an 'override' keyword
    open func getTabLabelShiftY( _ _arg0: Int, _ _arg1: Int, _ _arg2: Bool ) -> Int {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1121:15: note: overridden declaration is here
    open func getTabLabelShiftY( _ _arg0: Int, _ _arg1: Int, _ _arg2: Bool ) -> Int {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1309:15: error: overriding declaration requires an 'override' keyword
    open func getContentBorderInsets( arg0: Int ) -> java_awt.Insets! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1129:15: note: overridden declaration is here
    open func getContentBorderInsets( arg0: Int ) -> java_awt.Insets! {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1318:15: error: overriding declaration requires an 'override' keyword
    open func getContentBorderInsets( _ _arg0: Int ) -> java_awt.Insets! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1138:15: note: overridden declaration is here
    open func getContentBorderInsets( _ _arg0: Int ) -> java_awt.Insets! {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1326:21: error: overriding declaration requires an 'override' keyword
    open class func rotateInsets( arg0: java_awt.Insets?, arg1: java_awt.Insets?, arg2: Int ) {
                    ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1146:21: note: overridden declaration is here
    open class func rotateInsets( arg0: java_awt.Insets?, arg1: java_awt.Insets?, arg2: Int ) {
                    ^
com_apple/Sources/AquaTabbedPaneUI.swift:1335:21: error: overriding declaration requires an 'override' keyword
    open class func rotateInsets( _ _arg0: java_awt.Insets?, _ _arg1: java_awt.Insets?, _ _arg2: Int ) {
                    ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1155:21: note: overridden declaration is here
    open class func rotateInsets( _ _arg0: java_awt.Insets?, _ _arg1: java_awt.Insets?, _ _arg2: Int ) {
                    ^
com_apple/Sources/AquaTabbedPaneUI.swift:1360:15: error: overriding declaration requires an 'override' keyword
    open func getIconForTab( arg0: Int ) -> javax_swing.Icon! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1163:15: note: overridden declaration is here
    open func getIconForTab( arg0: Int ) -> javax_swing.Icon! {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1369:15: error: overriding declaration requires an 'override' keyword
    open func getIconForTab( _ _arg0: Int ) -> javax_swing.Icon! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1172:15: note: overridden declaration is here
    open func getIconForTab( _ _arg0: Int ) -> javax_swing.Icon! {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1377:15: error: overriding declaration requires an 'override' keyword
    open func paintContentBorder( arg0: java_awt.Graphics?, arg1: Int, arg2: Int ) {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1180:15: note: overridden declaration is here
    open func paintContentBorder( arg0: java_awt.Graphics?, arg1: Int, arg2: Int ) {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1386:15: error: overriding declaration requires an 'override' keyword
    open func paintContentBorder( _ _arg0: java_awt.Graphics?, _ _arg1: Int, _ _arg2: Int ) {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1189:15: note: overridden declaration is here
    open func paintContentBorder( _ _arg0: java_awt.Graphics?, _ _arg1: Int, _ _arg2: Int ) {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1423:15: error: overriding declaration requires an 'override' keyword
    open func getTabInsets( arg0: Int, arg1: Int ) -> java_awt.Insets! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1201:15: note: overridden declaration is here
    open func getTabInsets( arg0: Int, arg1: Int ) -> java_awt.Insets! {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1433:15: error: overriding declaration requires an 'override' keyword
    open func getTabInsets( _ _arg0: Int, _ _arg1: Int ) -> java_awt.Insets! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1211:15: note: overridden declaration is here
    open func getTabInsets( _ _arg0: Int, _ _arg1: Int ) -> java_awt.Insets! {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1441:15: error: overriding declaration requires an 'override' keyword
    open func calculateTabHeight( arg0: Int, arg1: Int, arg2: Int ) -> Int {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1219:15: note: overridden declaration is here
    open func calculateTabHeight( arg0: Int, arg1: Int, arg2: Int ) -> Int {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1451:15: error: overriding declaration requires an 'override' keyword
    open func calculateTabHeight( _ _arg0: Int, _ _arg1: Int, _ _arg2: Int ) -> Int {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1229:15: note: overridden declaration is here
    open func calculateTabHeight( _ _arg0: Int, _ _arg1: Int, _ _arg2: Int ) -> Int {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1459:15: error: overriding declaration requires an 'override' keyword
    open func shouldRotateTabRuns( arg0: Int ) -> Bool {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1237:15: note: overridden declaration is here
    open func shouldRotateTabRuns( arg0: Int ) -> Bool {
              ^
com_apple/Sources/AquaTabbedPaneUI.swift:1467:15: error: overriding declaration requires an 'override' keyword
    open func shouldRotateTabRuns( _ _arg0: Int ) -> Bool {
              ^
         override 
com_apple/Sources/AquaTabbedPaneCopyFromBasicUI.swift:1245:15: note: overridden declaration is here
    open func shouldRotateTabRuns( _ _arg0: Int ) -> Bool {
              ^
Build settings from command line:
    SYMROOT = /tmp
com_apple/Sources/AquaTextAreaUI.swift:67:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicTextAreaUI:7:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTextAreaUI.swift:76:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicTextAreaUI:8:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaTextAreaUI.swift:84:15: error: overriding declaration requires an 'override' keyword
    open func installDefaults() {
              ^
         override 
javax_swing.BasicTextAreaUI:10:24: note: overridden declaration is here
    override open func installDefaults()
                       ^
com_apple/Sources/AquaTextAreaUI.swift:95:15: error: overriding declaration requires an 'override' keyword
    open func installListeners() {
              ^
         override 
javax_swing.BasicTextUI:13:15: note: overridden declaration is here
    open func installListeners()
              ^
com_apple/Sources/AquaTextAreaUI.swift:106:15: error: overriding declaration requires an 'override' keyword
    open func installKeyboardActions() {
              ^
         override 
javax_swing.BasicTextUI:16:15: note: overridden declaration is here
    open func installKeyboardActions()
              ^
com_apple/Sources/AquaTextAreaUI.swift:117:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners() {
              ^
         override 
javax_swing.BasicTextUI:18:15: note: overridden declaration is here
    open func uninstallListeners()
              ^
com_apple/Sources/AquaTextAreaUI.swift:128:15: error: overriding declaration requires an 'override' keyword
    open func uninstallDefaults() {
              ^
         override 
javax_swing.BasicTextUI:17:15: note: overridden declaration is here
    open func uninstallDefaults()
              ^
com_apple/Sources/AquaTextAreaUI.swift:139:15: error: overriding declaration requires an 'override' keyword
    open func createCaret() -> javax_swing.Caret! {
              ^
         override 
javax_swing.BasicTextUI:12:15: note: overridden declaration is here
    open func createCaret() -> Caret!
              ^
com_apple/Sources/AquaTextAreaUI.swift:152:15: error: overriding declaration requires an 'override' keyword
    open func createHighlighter() -> javax_swing.Highlighter! {
              ^
         override 
javax_swing.BasicTextUI:22:15: note: overridden declaration is here
    open func createHighlighter() -> Highlighter!
              ^
com_apple/Sources/AquaLabelUI.swift:56:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicLabelUI:7:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaLabelUI.swift:65:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicLabelUI:8:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaLabelUI.swift:73:15: error: overriding declaration requires an 'override' keyword
    open func installListeners( arg0: javax_swing.JLabel? ) {
              ^
         override 
javax_swing.BasicLabelUI:9:15: note: overridden declaration is here
    open func installListeners(arg0: javax_swing.JLabel?)
              ^
com_apple/Sources/AquaLabelUI.swift:80:15: error: overriding declaration requires an 'override' keyword
    open func installListeners( _ _arg0: javax_swing.JLabel? ) {
              ^
         override 
javax_swing.BasicLabelUI:10:15: note: overridden declaration is here
    open func installListeners(_ _arg0: javax_swing.JLabel?)
              ^
com_apple/Sources/AquaLabelUI.swift:88:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners( arg0: javax_swing.JLabel? ) {
              ^
         override 
javax_swing.BasicLabelUI:21:15: note: overridden declaration is here
    open func uninstallListeners(arg0: javax_swing.JLabel?)
              ^
com_apple/Sources/AquaLabelUI.swift:95:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners( _ _arg0: javax_swing.JLabel? ) {
              ^
         override 
javax_swing.BasicLabelUI:22:15: note: overridden declaration is here
    open func uninstallListeners(_ _arg0: javax_swing.JLabel?)
              ^
com_apple/Sources/AquaLabelUI.swift:103:15: error: overriding declaration requires an 'override' keyword
    open func paintEnabledText( arg0: javax_swing.JLabel?, arg1: java_awt.Graphics?, arg2: String?, arg3: Int, arg4: Int ) {
              ^
         override 
javax_swing.BasicLabelUI:29:15: note: overridden declaration is here
    open func paintEnabledText(arg0: javax_swing.JLabel?, arg1: java_awt.Graphics?, arg2: String?, arg3: Int, arg4: Int)
              ^
com_apple/Sources/AquaLabelUI.swift:114:15: error: overriding declaration requires an 'override' keyword
    open func paintEnabledText( _ _arg0: javax_swing.JLabel?, _ _arg1: java_awt.Graphics?, _ _arg2: String?, _ _arg3: Int, _ _arg4: Int ) {
              ^
         override 
javax_swing.BasicLabelUI:30:15: note: overridden declaration is here
    open func paintEnabledText(_ _arg0: javax_swing.JLabel?, _ _arg1: java_awt.Graphics?, _ _arg2: String?, _ _arg3: Int, _ _arg4: Int)
              ^
com_apple/Sources/AquaLabelUI.swift:122:15: error: overriding declaration requires an 'override' keyword
    open func paintDisabledText( arg0: javax_swing.JLabel?, arg1: java_awt.Graphics?, arg2: String?, arg3: Int, arg4: Int ) {
              ^
         override 
javax_swing.BasicLabelUI:25:15: note: overridden declaration is here
    open func paintDisabledText(arg0: javax_swing.JLabel?, arg1: java_awt.Graphics?, arg2: String?, arg3: Int, arg4: Int)
              ^
com_apple/Sources/AquaLabelUI.swift:133:15: error: overriding declaration requires an 'override' keyword
    open func paintDisabledText( _ _arg0: javax_swing.JLabel?, _ _arg1: java_awt.Graphics?, _ _arg2: String?, _ _arg3: Int, _ _arg4: Int ) {
              ^
         override 
javax_swing.BasicLabelUI:26:15: note: overridden declaration is here
    open func paintDisabledText(_ _arg0: javax_swing.JLabel?, _ _arg1: java_awt.Graphics?, _ _arg2: String?, _ _arg3: Int, _ _arg4: Int)
              ^
com_apple/Sources/AquaRootPaneUI.swift:257:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicRootPaneUI:7:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaRootPaneUI.swift:266:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicRootPaneUI:8:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaToolBarUI.swift:34:14: error: overriding declaration requires an 'override' keyword
    open var toolBar: javax_swing.JToolBar! {
             ^
javax_swing.BasicToolBarUI:4:14: note: overridden declaration is here
    open var toolBar: javax_swing.JToolBar! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:61:14: error: overriding declaration requires an 'override' keyword
    open var dragWindow: /* javax.swing.plaf.basic.BasicToolBarUI$DragWindow */ UnclassedObject! {
             ^
javax_swing.BasicToolBarUI:5:14: note: overridden declaration is here
    open var dragWindow: java_swift.UnclassedObject! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:82:14: error: overriding declaration requires an 'override' keyword
    open var focusedCompIndex: Int {
             ^
javax_swing.BasicToolBarUI:6:14: note: overridden declaration is here
    open var focusedCompIndex: Int { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:99:14: error: overriding declaration requires an 'override' keyword
    open var dockingColor: java_awt.Color! {
             ^
javax_swing.BasicToolBarUI:7:14: note: overridden declaration is here
    open var dockingColor: java_awt.Color! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:116:14: error: overriding declaration requires an 'override' keyword
    open var floatingColor: java_awt.Color! {
             ^
javax_swing.BasicToolBarUI:8:14: note: overridden declaration is here
    open var floatingColor: java_awt.Color! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:133:14: error: overriding declaration requires an 'override' keyword
    open var dockingBorderColor: java_awt.Color! {
             ^
javax_swing.BasicToolBarUI:9:14: note: overridden declaration is here
    open var dockingBorderColor: java_awt.Color! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:150:14: error: overriding declaration requires an 'override' keyword
    open var floatingBorderColor: java_awt.Color! {
             ^
javax_swing.BasicToolBarUI:10:14: note: overridden declaration is here
    open var floatingBorderColor: java_awt.Color! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:167:14: error: overriding declaration requires an 'override' keyword
    open var dockingListener: javax_swing.MouseInputListener! {
             ^
javax_swing.BasicToolBarUI:11:14: note: overridden declaration is here
    open var dockingListener: MouseInputListener! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:184:14: error: overriding declaration requires an 'override' keyword
    open var propertyListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
             ^
javax_swing.BasicToolBarUI:12:14: note: overridden declaration is here
    open var propertyListener: UnclassedProtocol! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:201:14: error: overriding declaration requires an 'override' keyword
    open var toolBarContListener: java_awt.ContainerListener! {
             ^
javax_swing.BasicToolBarUI:13:14: note: overridden declaration is here
    open var toolBarContListener: ContainerListener! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:218:14: error: overriding declaration requires an 'override' keyword
    open var toolBarFocusListener: java_awt.FocusListener! {
             ^
javax_swing.BasicToolBarUI:14:14: note: overridden declaration is here
    open var toolBarFocusListener: FocusListener! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:237:14: error: overriding declaration requires an 'override' keyword
    open var constraintBeforeFloating: String! {
             ^
javax_swing.BasicToolBarUI:15:14: note: overridden declaration is here
    open var constraintBeforeFloating: String! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:268:14: error: overriding declaration requires an 'override' keyword
    open var upKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicToolBarUI:16:14: note: overridden declaration is here
    open var upKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:285:14: error: overriding declaration requires an 'override' keyword
    open var downKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicToolBarUI:17:14: note: overridden declaration is here
    open var downKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:302:14: error: overriding declaration requires an 'override' keyword
    open var leftKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicToolBarUI:18:14: note: overridden declaration is here
    open var leftKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:319:14: error: overriding declaration requires an 'override' keyword
    open var rightKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicToolBarUI:19:14: note: overridden declaration is here
    open var rightKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaToolBarUI.swift:388:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicToolBarUI:40:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaToolBarUI.swift:397:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicToolBarUI:41:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaToolBarUI.swift:418:15: error: overriding declaration requires an 'override' keyword
    open func setBorderToNonRollover( arg0: java_awt.Component? ) {
              ^
         override 
javax_swing.BasicToolBarUI:77:15: note: overridden declaration is here
    open func setBorderToNonRollover(arg0: java_awt.Component?)
              ^
com_apple/Sources/AquaToolBarUI.swift:425:15: error: overriding declaration requires an 'override' keyword
    open func setBorderToNonRollover( _ _arg0: java_awt.Component? ) {
              ^
         override 
javax_swing.BasicToolBarUI:78:15: note: overridden declaration is here
    open func setBorderToNonRollover(_ _arg0: java_awt.Component?)
              ^
com_apple/Sources/AquaToolBarUI.swift:433:15: error: overriding declaration requires an 'override' keyword
    open func setBorderToNormal( arg0: java_awt.Component? ) {
              ^
         override 
javax_swing.BasicToolBarUI:81:15: note: overridden declaration is here
    open func setBorderToNormal(arg0: java_awt.Component?)
              ^
com_apple/Sources/AquaToolBarUI.swift:440:15: error: overriding declaration requires an 'override' keyword
    open func setBorderToNormal( _ _arg0: java_awt.Component? ) {
              ^
         override 
javax_swing.BasicToolBarUI:82:15: note: overridden declaration is here
    open func setBorderToNormal(_ _arg0: java_awt.Component?)
              ^
com_apple/Sources/AquaToolBarUI.swift:448:15: error: overriding declaration requires an 'override' keyword
    open func setBorderToRollover( arg0: java_awt.Component? ) {
              ^
         override 
javax_swing.BasicToolBarUI:73:15: note: overridden declaration is here
    open func setBorderToRollover(arg0: java_awt.Component?)
              ^
com_apple/Sources/AquaToolBarUI.swift:455:15: error: overriding declaration requires an 'override' keyword
    open func setBorderToRollover( _ _arg0: java_awt.Component? ) {
              ^
         override 
javax_swing.BasicToolBarUI:74:15: note: overridden declaration is here
    open func setBorderToRollover(_ _arg0: java_awt.Component?)
              ^
com_apple/Sources/AquaToolBarUI.swift:463:15: error: overriding declaration requires an 'override' keyword
    open func createFloatingWindow( arg0: javax_swing.JToolBar? ) -> javax_swing.RootPaneContainer! {
              ^
         override 
javax_swing.BasicToolBarUI:54:15: note: overridden declaration is here
    open func createFloatingWindow(arg0: javax_swing.JToolBar?) -> RootPaneContainer!
              ^
com_apple/Sources/AquaToolBarUI.swift:472:15: error: overriding declaration requires an 'override' keyword
    open func createFloatingWindow( _ _arg0: javax_swing.JToolBar? ) -> javax_swing.RootPaneContainer! {
              ^
         override 
javax_swing.BasicToolBarUI:55:15: note: overridden declaration is here
    open func createFloatingWindow(_ _arg0: javax_swing.JToolBar?) -> RootPaneContainer!
              ^
com_apple/Sources/AquaInternalFramePaneUI.swift:46:14: error: overriding declaration requires an 'override' keyword
    open var desktop: javax_swing.JDesktopPane! {
             ^
javax_swing.BasicDesktopPaneUI:4:14: note: overridden declaration is here
    open var desktop: javax_swing.JDesktopPane! { get set }
             ^
com_apple/Sources/AquaInternalFramePaneUI.swift:63:14: error: overriding declaration requires an 'override' keyword
    open var desktopManager: javax_swing.DesktopManager! {
             ^
javax_swing.BasicDesktopPaneUI:5:14: note: overridden declaration is here
    open var desktopManager: DesktopManager! { get set }
             ^
com_apple/Sources/AquaInternalFramePaneUI.swift:80:14: error: overriding declaration requires an 'override' keyword
    open var minimizeKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicDesktopPaneUI:6:14: note: overridden declaration is here
    open var minimizeKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaInternalFramePaneUI.swift:97:14: error: overriding declaration requires an 'override' keyword
    open var maximizeKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicDesktopPaneUI:7:14: note: overridden declaration is here
    open var maximizeKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaInternalFramePaneUI.swift:114:14: error: overriding declaration requires an 'override' keyword
    open var closeKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicDesktopPaneUI:8:14: note: overridden declaration is here
    open var closeKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaInternalFramePaneUI.swift:131:14: error: overriding declaration requires an 'override' keyword
    open var navigateKey: javax_swing.KeyStroke! {
             ^
javax_swing.BasicDesktopPaneUI:9:14: note: overridden declaration is here
    open var navigateKey: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaInternalFramePaneUI.swift:148:14: error: overriding declaration requires an 'override' keyword
    open var navigateKey2: javax_swing.KeyStroke! {
             ^
javax_swing.BasicDesktopPaneUI:10:14: note: overridden declaration is here
    open var navigateKey2: javax_swing.KeyStroke! { get set }
             ^
com_apple/Sources/AquaInternalFramePaneUI.swift:258:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicDesktopPaneUI:12:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaInternalFramePaneUI.swift:267:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicDesktopPaneUI:13:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaInternalFramePaneUI.swift:275:15: error: overriding declaration requires an 'override' keyword
    open func installDesktopManager() {
              ^
         override 
javax_swing.BasicDesktopPaneUI:21:15: note: overridden declaration is here
    open func installDesktopManager()
              ^
com_apple/Sources/AquaInternalFramePaneUI.swift:286:15: error: overriding declaration requires an 'override' keyword
    open func uninstallDesktopManager() {
              ^
         override 
javax_swing.BasicDesktopPaneUI:22:15: note: overridden declaration is here
    open func uninstallDesktopManager()
              ^
com_apple/Sources/AquaToolBarSeparatorUI.swift:36:14: error: overriding declaration requires an 'override' keyword
    open var shadow: java_awt.Color! {
             ^
javax_swing.BasicToolBarSeparatorUI:4:23: note: overridden declaration is here
    override open var shadow: java_awt.Color! { get set }
                      ^
com_apple/Sources/AquaToolBarSeparatorUI.swift:53:14: error: overriding declaration requires an 'override' keyword
    open var highlight: java_awt.Color! {
             ^
javax_swing.BasicToolBarSeparatorUI:5:23: note: overridden declaration is here
    override open var highlight: java_awt.Color! { get set }
                      ^
com_apple/Sources/AquaToolBarSeparatorUI.swift:90:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicToolBarSeparatorUI:7:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaToolBarSeparatorUI.swift:99:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicToolBarSeparatorUI:8:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AppEvent_UserSessionEvent.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
com_apple/Sources/AquaMenuUI.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var changeListener: javax_swing.ChangeListener! {
             ^
javax_swing.BasicMenuUI:4:14: note: overridden declaration is here
    open var changeListener: ChangeListener! { get set }
             ^
com_apple/Sources/AquaMenuUI.swift:49:14: error: overriding declaration requires an 'override' keyword
    open var menuListener: javax_swing.MenuListener! {
             ^
javax_swing.BasicMenuUI:5:14: note: overridden declaration is here
    open var menuListener: MenuListener! { get set }
             ^
com_apple/Sources/AquaMenuUI.swift:78:14: error: overriding declaration requires an 'override' keyword
    open var menuItem: javax_swing.JMenuItem! {
             ^
javax_swing.BasicMenuUI:6:23: note: overridden declaration is here
    override open var menuItem: javax_swing.JMenuItem! { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:95:14: error: overriding declaration requires an 'override' keyword
    open var selectionBackground: java_awt.Color! {
             ^
javax_swing.BasicMenuUI:7:23: note: overridden declaration is here
    override open var selectionBackground: java_awt.Color! { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:112:14: error: overriding declaration requires an 'override' keyword
    open var selectionForeground: java_awt.Color! {
             ^
javax_swing.BasicMenuUI:8:23: note: overridden declaration is here
    override open var selectionForeground: java_awt.Color! { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:129:14: error: overriding declaration requires an 'override' keyword
    open var disabledForeground: java_awt.Color! {
             ^
javax_swing.BasicMenuUI:9:23: note: overridden declaration is here
    override open var disabledForeground: java_awt.Color! { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:146:14: error: overriding declaration requires an 'override' keyword
    open var acceleratorForeground: java_awt.Color! {
             ^
javax_swing.BasicMenuUI:10:23: note: overridden declaration is here
    override open var acceleratorForeground: java_awt.Color! { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:163:14: error: overriding declaration requires an 'override' keyword
    open var acceleratorSelectionForeground: java_awt.Color! {
             ^
javax_swing.BasicMenuUI:11:23: note: overridden declaration is here
    override open var acceleratorSelectionForeground: java_awt.Color! { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:182:14: error: overriding declaration requires an 'override' keyword
    open var defaultTextIconGap: Int {
             ^
javax_swing.BasicMenuUI:12:23: note: overridden declaration is here
    override open var defaultTextIconGap: Int { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:199:14: error: overriding declaration requires an 'override' keyword
    open var acceleratorFont: java_awt.Font! {
             ^
javax_swing.BasicMenuUI:13:23: note: overridden declaration is here
    override open var acceleratorFont: java_awt.Font! { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:216:14: error: overriding declaration requires an 'override' keyword
    open var mouseInputListener: javax_swing.MouseInputListener! {
             ^
javax_swing.BasicMenuUI:14:23: note: overridden declaration is here
    override open var mouseInputListener: MouseInputListener! { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:233:14: error: overriding declaration requires an 'override' keyword
    open var menuDragMouseListener: javax_swing.MenuDragMouseListener! {
             ^
javax_swing.BasicMenuUI:15:23: note: overridden declaration is here
    override open var menuDragMouseListener: MenuDragMouseListener! { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:250:14: error: overriding declaration requires an 'override' keyword
    open var menuKeyListener: javax_swing.MenuKeyListener! {
             ^
javax_swing.BasicMenuUI:16:23: note: overridden declaration is here
    override open var menuKeyListener: MenuKeyListener! { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:267:14: error: overriding declaration requires an 'override' keyword
    open var propertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
             ^
javax_swing.BasicMenuUI:17:23: note: overridden declaration is here
    override open var propertyChangeListener: UnclassedProtocol! { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:286:14: error: overriding declaration requires an 'override' keyword
    open var arrowIcon: javax_swing.Icon! {
             ^
javax_swing.BasicMenuUI:18:23: note: overridden declaration is here
    override open var arrowIcon: Icon! { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:303:14: error: overriding declaration requires an 'override' keyword
    open var checkIcon: javax_swing.Icon! {
             ^
javax_swing.BasicMenuUI:19:23: note: overridden declaration is here
    override open var checkIcon: Icon! { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:320:14: error: overriding declaration requires an 'override' keyword
    open var oldBorderPainted: Bool {
             ^
javax_swing.BasicMenuUI:20:23: note: overridden declaration is here
    override open var oldBorderPainted: Bool { get set }
                      ^
com_apple/Sources/AquaMenuUI.swift:371:15: error: overriding declaration requires an 'override' keyword
    open func createChangeListener( arg0: javax_swing.JComponent? ) -> javax_swing.ChangeListener! {
              ^
         override 
javax_swing.BasicMenuUI:24:15: note: overridden declaration is here
    open func createChangeListener(arg0: javax_swing.JComponent?) -> ChangeListener!
              ^
com_apple/Sources/AquaMenuUI.swift:380:15: error: overriding declaration requires an 'override' keyword
    open func createChangeListener( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ChangeListener! {
              ^
         override 
javax_swing.BasicMenuUI:25:15: note: overridden declaration is here
    open func createChangeListener(_ _arg0: javax_swing.JComponent?) -> ChangeListener!
              ^
com_apple/Sources/AquaMenuUI.swift:388:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicMenuUI:22:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaMenuUI.swift:397:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicMenuUI:23:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaMenuUI.swift:405:15: error: overriding declaration requires an 'override' keyword
    open func installDefaults() {
              ^
         override 
javax_swing.BasicMenuUI:28:24: note: overridden declaration is here
    override open func installDefaults()
                       ^
com_apple/Sources/AquaMenuUI.swift:434:15: error: overriding declaration requires an 'override' keyword
    open func createMouseInputListener( arg0: javax_swing.JComponent? ) -> javax_swing.MouseInputListener! {
              ^
         override 
javax_swing.BasicMenuUI:33:24: note: overridden declaration is here
    override open func createMouseInputListener(arg0: javax_swing.JComponent?) -> MouseInputListener!
                       ^
com_apple/Sources/AquaMenuUI.swift:443:15: error: overriding declaration requires an 'override' keyword
    open func createMouseInputListener( _ _arg0: javax_swing.JComponent? ) -> javax_swing.MouseInputListener! {
              ^
         override 
javax_swing.BasicMenuUI:34:24: note: overridden declaration is here
    override open func createMouseInputListener(_ _arg0: javax_swing.JComponent?) -> MouseInputListener!
                       ^
com_apple/Sources/AquaMenuUI.swift:451:15: error: overriding declaration requires an 'override' keyword
    open func paintMenuItem( arg0: java_awt.Graphics?, arg1: javax_swing.JComponent?, arg2: javax_swing.Icon?, arg3: javax_swing.Icon?, arg4: java_awt.Color?, arg5: java_awt.Color?, arg6: Int ) {
              ^
         override 
javax_swing.BasicMenuItemUI:48:15: note: overridden declaration is here
    open func paintMenuItem(arg0: java_awt.Graphics?, arg1: javax_swing.JComponent?, arg2: Icon?, arg3: Icon?, arg4: java_awt.Color?, arg5: java_awt.Color?, arg6: Int)
              ^
com_apple/Sources/AquaMenuUI.swift:464:15: error: overriding declaration requires an 'override' keyword
    open func paintMenuItem( _ _arg0: java_awt.Graphics?, _ _arg1: javax_swing.JComponent?, _ _arg2: javax_swing.Icon?, _ _arg3: javax_swing.Icon?, _ _arg4: java_awt.Color?, _ _arg5: java_awt.Color?, _ _arg6: Int ) {
              ^
         override 
javax_swing.BasicMenuItemUI:49:15: note: overridden declaration is here
    open func paintMenuItem(_ _arg0: java_awt.Graphics?, _ _arg1: javax_swing.JComponent?, _ _arg2: Icon?, _ _arg3: Icon?, _ _arg4: java_awt.Color?, _ _arg5: java_awt.Color?, _ _arg6: Int)
              ^
com_apple/Sources/AquaMenuUI.swift:472:15: error: overriding declaration requires an 'override' keyword
    open func getPreferredMenuItemSize( arg0: javax_swing.JComponent?, arg1: javax_swing.Icon?, arg2: javax_swing.Icon?, arg3: Int ) -> java_awt.Dimension! {
              ^
         override 
javax_swing.BasicMenuItemUI:46:15: note: overridden declaration is here
    open func getPreferredMenuItemSize(arg0: javax_swing.JComponent?, arg1: Icon?, arg2: Icon?, arg3: Int) -> java_awt.Dimension!
              ^
com_apple/Sources/AquaMenuUI.swift:484:15: error: overriding declaration requires an 'override' keyword
    open func getPreferredMenuItemSize( _ _arg0: javax_swing.JComponent?, _ _arg1: javax_swing.Icon?, _ _arg2: javax_swing.Icon?, _ _arg3: Int ) -> java_awt.Dimension! {
              ^
         override 
javax_swing.BasicMenuItemUI:47:15: note: overridden declaration is here
    open func getPreferredMenuItemSize(_ _arg0: javax_swing.JComponent?, _ _arg1: Icon?, _ _arg2: Icon?, _ _arg3: Int) -> java_awt.Dimension!
              ^
com_apple/Sources/AquaMenuUI.swift:492:15: error: overriding declaration requires an 'override' keyword
    open func createMenuDragMouseListener( arg0: javax_swing.JComponent? ) -> javax_swing.MenuDragMouseListener! {
              ^
         override 
javax_swing.BasicMenuUI:35:24: note: overridden declaration is here
    override open func createMenuDragMouseListener(arg0: javax_swing.JComponent?) -> MenuDragMouseListener!
                       ^
com_apple/Sources/AquaMenuUI.swift:501:15: error: overriding declaration requires an 'override' keyword
    open func createMenuDragMouseListener( _ _arg0: javax_swing.JComponent? ) -> javax_swing.MenuDragMouseListener! {
              ^
         override 
javax_swing.BasicMenuUI:36:24: note: overridden declaration is here
    override open func createMenuDragMouseListener(_ _arg0: javax_swing.JComponent?) -> MenuDragMouseListener!
                       ^
com_apple/Sources/AquaPopupMenuSeparatorUI.swift:34:14: error: overriding declaration requires an 'override' keyword
    open var shadow: java_awt.Color! {
             ^
javax_swing.BasicSeparatorUI:4:14: note: overridden declaration is here
    open var shadow: java_awt.Color! { get set }
             ^
com_apple/Sources/AquaPopupMenuSeparatorUI.swift:51:14: error: overriding declaration requires an 'override' keyword
    open var highlight: java_awt.Color! {
             ^
javax_swing.BasicSeparatorUI:5:14: note: overridden declaration is here
    open var highlight: java_awt.Color! { get set }
             ^
com_apple/Sources/AquaPopupMenuSeparatorUI.swift:86:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicSeparatorUI:7:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaPopupMenuSeparatorUI.swift:95:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicSeparatorUI:8:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaComboBoxUI.swift:58:14: error: overriding declaration requires an 'override' keyword
    open var comboBox: javax_swing.JComboBox! {
             ^
javax_swing.BasicComboBoxUI:4:14: note: overridden declaration is here
    open var comboBox: javax_swing.JComboBox! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:75:14: error: overriding declaration requires an 'override' keyword
    open var hasFocus: Bool {
             ^
javax_swing.BasicComboBoxUI:5:14: note: overridden declaration is here
    open var hasFocus: Bool { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:96:14: error: overriding declaration requires an 'override' keyword
    open var listBox: javax_swing.JList! {
             ^
javax_swing.BasicComboBoxUI:6:14: note: overridden declaration is here
    open var listBox: javax_swing.JList! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:113:14: error: overriding declaration requires an 'override' keyword
    open var currentValuePane: javax_swing.CellRendererPane! {
             ^
javax_swing.BasicComboBoxUI:7:14: note: overridden declaration is here
    open var currentValuePane: javax_swing.CellRendererPane! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:130:14: error: overriding declaration requires an 'override' keyword
    open var popup: javax_swing.ComboPopup! {
             ^
javax_swing.BasicComboBoxUI:8:14: note: overridden declaration is here
    open var popup: ComboPopup! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:147:14: error: overriding declaration requires an 'override' keyword
    open var editor: java_awt.Component! {
             ^
javax_swing.BasicComboBoxUI:9:14: note: overridden declaration is here
    open var editor: java_awt.Component! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:164:14: error: overriding declaration requires an 'override' keyword
    open var arrowButton: javax_swing.JButton! {
             ^
javax_swing.BasicComboBoxUI:10:14: note: overridden declaration is here
    open var arrowButton: javax_swing.JButton! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:181:14: error: overriding declaration requires an 'override' keyword
    open var keyListener: java_awt.KeyListener! {
             ^
javax_swing.BasicComboBoxUI:11:14: note: overridden declaration is here
    open var keyListener: KeyListener! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:198:14: error: overriding declaration requires an 'override' keyword
    open var focusListener: java_awt.FocusListener! {
             ^
javax_swing.BasicComboBoxUI:12:14: note: overridden declaration is here
    open var focusListener: FocusListener! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:215:14: error: overriding declaration requires an 'override' keyword
    open var propertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
             ^
javax_swing.BasicComboBoxUI:13:14: note: overridden declaration is here
    open var propertyChangeListener: UnclassedProtocol! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:232:14: error: overriding declaration requires an 'override' keyword
    open var itemListener: java_awt.ItemListener! {
             ^
javax_swing.BasicComboBoxUI:14:14: note: overridden declaration is here
    open var itemListener: ItemListener! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:249:14: error: overriding declaration requires an 'override' keyword
    open var popupMouseListener: java_awt.MouseListener! {
             ^
javax_swing.BasicComboBoxUI:15:14: note: overridden declaration is here
    open var popupMouseListener: MouseListener! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:266:14: error: overriding declaration requires an 'override' keyword
    open var popupMouseMotionListener: java_awt.MouseMotionListener! {
             ^
javax_swing.BasicComboBoxUI:16:14: note: overridden declaration is here
    open var popupMouseMotionListener: MouseMotionListener! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:283:14: error: overriding declaration requires an 'override' keyword
    open var popupKeyListener: java_awt.KeyListener! {
             ^
javax_swing.BasicComboBoxUI:17:14: note: overridden declaration is here
    open var popupKeyListener: KeyListener! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:300:14: error: overriding declaration requires an 'override' keyword
    open var listDataListener: javax_swing.ListDataListener! {
             ^
javax_swing.BasicComboBoxUI:18:14: note: overridden declaration is here
    open var listDataListener: ListDataListener! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:327:14: error: overriding declaration requires an 'override' keyword
    open var isMinimumSizeDirty: Bool {
             ^
javax_swing.BasicComboBoxUI:19:14: note: overridden declaration is here
    open var isMinimumSizeDirty: Bool { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:344:14: error: overriding declaration requires an 'override' keyword
    open var cachedMinimumSize: java_awt.Dimension! {
             ^
javax_swing.BasicComboBoxUI:20:14: note: overridden declaration is here
    open var cachedMinimumSize: java_awt.Dimension! { get set }
             ^
com_apple/Sources/AquaComboBoxUI.swift:463:15: error: overriding declaration requires an 'override' keyword
    open func createItemListener() -> java_awt.ItemListener! {
              ^
         override 
javax_swing.BasicComboBoxUI:25:15: note: overridden declaration is here
    open func createItemListener() -> ItemListener!
              ^
com_apple/Sources/AquaComboBoxUI.swift:476:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicComboBoxUI:23:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaComboBoxUI.swift:485:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicComboBoxUI:24:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaComboBoxUI.swift:509:15: error: overriding declaration requires an 'override' keyword
    open func installListeners() {
              ^
         override 
javax_swing.BasicComboBoxUI:27:15: note: overridden declaration is here
    open func installListeners()
              ^
com_apple/Sources/AquaComboBoxUI.swift:520:15: error: overriding declaration requires an 'override' keyword
    open func installKeyboardActions() {
              ^
         override 
javax_swing.BasicComboBoxUI:30:15: note: overridden declaration is here
    open func installKeyboardActions()
              ^
com_apple/Sources/AquaComboBoxUI.swift:531:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners() {
              ^
         override 
javax_swing.BasicComboBoxUI:33:15: note: overridden declaration is here
    open func uninstallListeners()
              ^
com_apple/Sources/AquaComboBoxUI.swift:623:15: error: overriding declaration requires an 'override' keyword
    open func createFocusListener() -> java_awt.FocusListener! {
              ^
         override 
javax_swing.BasicComboBoxUI:40:15: note: overridden declaration is here
    open func createFocusListener() -> FocusListener!
              ^
com_apple/Sources/AquaComboBoxUI.swift:710:15: error: overriding declaration requires an 'override' keyword
    open func installComponents() {
              ^
         override 
javax_swing.BasicComboBoxUI:29:15: note: overridden declaration is here
    open func installComponents()
              ^
com_apple/Sources/AquaComboBoxUI.swift:721:15: error: overriding declaration requires an 'override' keyword
    open func uninstallComponents() {
              ^
         override 
javax_swing.BasicComboBoxUI:32:15: note: overridden declaration is here
    open func uninstallComponents()
              ^
com_apple/Sources/AquaComboBoxUI.swift:732:15: error: overriding declaration requires an 'override' keyword
    open func createRenderer() -> javax_swing.ListCellRenderer! {
              ^
         override 
javax_swing.BasicComboBoxUI:43:15: note: overridden declaration is here
    open func createRenderer() -> ListCellRenderer!
              ^
com_apple/Sources/AquaComboBoxUI.swift:745:15: error: overriding declaration requires an 'override' keyword
    open func createPopup() -> javax_swing.ComboPopup! {
              ^
         override 
javax_swing.BasicComboBoxUI:38:15: note: overridden declaration is here
    open func createPopup() -> ComboPopup!
              ^
com_apple/Sources/AquaComboBoxUI.swift:758:15: error: overriding declaration requires an 'override' keyword
    open func createArrowButton() -> javax_swing.JButton! {
              ^
         override 
javax_swing.BasicComboBoxUI:50:15: note: overridden declaration is here
    open func createArrowButton() -> javax_swing.JButton!
              ^
com_apple/Sources/AquaComboBoxUI.swift:771:15: error: overriding declaration requires an 'override' keyword
    open func createEditor() -> javax_swing.ComboBoxEditor! {
              ^
         override 
javax_swing.BasicComboBoxUI:26:15: note: overridden declaration is here
    open func createEditor() -> ComboBoxEditor!
              ^
com_apple/Sources/AquaComboBoxUI.swift:784:15: error: overriding declaration requires an 'override' keyword
    open func createLayoutManager() -> java_awt.LayoutManager! {
              ^
         override 
javax_swing.BasicComboBoxUI:42:15: note: overridden declaration is here
    open func createLayoutManager() -> LayoutManager!
              ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:40:14: error: overriding declaration requires an 'override' keyword
    open var currentContentDrawingInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:40:14: note: overridden declaration is here
    open var currentContentDrawingInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:52:14: error: overriding declaration requires an 'override' keyword
    open var currentContentBorderInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:52:14: note: overridden declaration is here
    open var currentContentBorderInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:64:14: error: overriding declaration requires an 'override' keyword
    open var contentDrawingInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:64:14: note: overridden declaration is here
    open var contentDrawingInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:76:14: error: overriding declaration requires an 'override' keyword
    open var pressedTab: Int {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:76:14: note: overridden declaration is here
    open var pressedTab: Int {
             ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:93:14: error: overriding declaration requires an 'override' keyword
    open var popupSelectionChanged: Bool {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:93:14: note: overridden declaration is here
    open var popupSelectionChanged: Bool {
             ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:110:14: error: overriding declaration requires an 'override' keyword
    open var isDefaultFocusReceiver: java_lang.Boolean! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:110:14: note: overridden declaration is here
    open var isDefaultFocusReceiver: java_lang.Boolean! {
             ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:127:14: error: overriding declaration requires an 'override' keyword
    open var hasAvoidedFirstFocus: Bool {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:127:14: note: overridden declaration is here
    open var hasAvoidedFirstFocus: Bool {
             ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:144:14: error: overriding declaration requires an 'override' keyword
    open var visibleTabState: /* com.apple.laf.AquaTabbedPaneTabState */ UnclassedObject! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:144:14: note: overridden declaration is here
    open var visibleTabState: /* com.apple.laf.AquaTabbedPaneTabState */ UnclassedObject! {
             ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:156:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:156:14: note: overridden declaration is here
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:178:14: error: overriding declaration requires an 'override' keyword
    open var tabPane: javax_swing.JTabbedPane! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:178:23: note: overridden declaration is here
    override open var tabPane: javax_swing.JTabbedPane! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:195:14: error: overriding declaration requires an 'override' keyword
    open var highlight: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:195:23: note: overridden declaration is here
    override open var highlight: java_awt.Color! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:212:14: error: overriding declaration requires an 'override' keyword
    open var lightHighlight: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:212:23: note: overridden declaration is here
    override open var lightHighlight: java_awt.Color! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:229:14: error: overriding declaration requires an 'override' keyword
    open var shadow: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:229:23: note: overridden declaration is here
    override open var shadow: java_awt.Color! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:246:14: error: overriding declaration requires an 'override' keyword
    open var darkShadow: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:246:23: note: overridden declaration is here
    override open var darkShadow: java_awt.Color! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:263:14: error: overriding declaration requires an 'override' keyword
    open var focus: java_awt.Color! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:263:23: note: overridden declaration is here
    override open var focus: java_awt.Color! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:282:14: error: overriding declaration requires an 'override' keyword
    open var textIconGap: Int {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:282:23: note: overridden declaration is here
    override open var textIconGap: Int {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:299:14: error: overriding declaration requires an 'override' keyword
    open var tabRunOverlay: Int {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:299:23: note: overridden declaration is here
    override open var tabRunOverlay: Int {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:316:14: error: overriding declaration requires an 'override' keyword
    open var tabInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:316:23: note: overridden declaration is here
    override open var tabInsets: java_awt.Insets! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:333:14: error: overriding declaration requires an 'override' keyword
    open var selectedTabPadInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:333:23: note: overridden declaration is here
    override open var selectedTabPadInsets: java_awt.Insets! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:350:14: error: overriding declaration requires an 'override' keyword
    open var tabAreaInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:350:23: note: overridden declaration is here
    override open var tabAreaInsets: java_awt.Insets! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:367:14: error: overriding declaration requires an 'override' keyword
    open var contentBorderInsets: java_awt.Insets! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:367:23: note: overridden declaration is here
    override open var contentBorderInsets: java_awt.Insets! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:390:14: error: overriding declaration requires an 'override' keyword
    open var upKey: javax_swing.KeyStroke! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:390:23: note: overridden declaration is here
    override open var upKey: javax_swing.KeyStroke! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:407:14: error: overriding declaration requires an 'override' keyword
    open var downKey: javax_swing.KeyStroke! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:407:23: note: overridden declaration is here
    override open var downKey: javax_swing.KeyStroke! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:424:14: error: overriding declaration requires an 'override' keyword
    open var leftKey: javax_swing.KeyStroke! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:424:23: note: overridden declaration is here
    override open var leftKey: javax_swing.KeyStroke! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:441:14: error: overriding declaration requires an 'override' keyword
    open var rightKey: javax_swing.KeyStroke! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:441:23: note: overridden declaration is here
    override open var rightKey: javax_swing.KeyStroke! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:458:14: error: overriding declaration requires an 'override' keyword
    open var tabRuns: [Int32]! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:458:23: note: overridden declaration is here
    override open var tabRuns: [Int32]! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:475:14: error: overriding declaration requires an 'override' keyword
    open var runCount: Int {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:475:23: note: overridden declaration is here
    override open var runCount: Int {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:492:14: error: overriding declaration requires an 'override' keyword
    open var selectedRun: Int {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:492:23: note: overridden declaration is here
    override open var selectedRun: Int {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:509:14: error: overriding declaration requires an 'override' keyword
    open var rects: [Rectangle]! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:509:23: note: overridden declaration is here
    override open var rects: [Rectangle]! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:526:14: error: overriding declaration requires an 'override' keyword
    open var maxTabHeight: Int {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:526:23: note: overridden declaration is here
    override open var maxTabHeight: Int {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:543:14: error: overriding declaration requires an 'override' keyword
    open var maxTabWidth: Int {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:543:23: note: overridden declaration is here
    override open var maxTabWidth: Int {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:560:14: error: overriding declaration requires an 'override' keyword
    open var tabChangeListener: javax_swing.ChangeListener! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:560:23: note: overridden declaration is here
    override open var tabChangeListener: javax_swing.ChangeListener! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:577:14: error: overriding declaration requires an 'override' keyword
    open var propertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:577:23: note: overridden declaration is here
    override open var propertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:594:14: error: overriding declaration requires an 'override' keyword
    open var mouseListener: java_awt.MouseListener! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:594:23: note: overridden declaration is here
    override open var mouseListener: java_awt.MouseListener! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:611:14: error: overriding declaration requires an 'override' keyword
    open var focusListener: java_awt.FocusListener! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:611:23: note: overridden declaration is here
    override open var focusListener: java_awt.FocusListener! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:644:14: error: overriding declaration requires an 'override' keyword
    open var calcRect: java_awt.Rectangle! {
             ^
com_apple/Sources/AquaTabbedPaneUI.swift:644:23: note: overridden declaration is here
    override open var calcRect: java_awt.Rectangle! {
                      ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:729:15: error: overriding declaration requires an 'override' keyword
    open func getState( arg0: Int, arg1: Bool, arg2: Bool ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneUI.swift:729:15: note: overridden declaration is here
    open func getState( arg0: Int, arg1: Bool, arg2: Bool ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
              ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:740:15: error: overriding declaration requires an 'override' keyword
    open func getState( _ _arg0: Int, _ _arg1: Bool, _ _arg2: Bool ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneUI.swift:740:15: note: overridden declaration is here
    open func getState( _ _arg0: Int, _ _arg1: Bool, _ _arg2: Bool ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
              ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:748:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaTabbedPaneUI.swift:763:30: note: overridden declaration is here
    override open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:757:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaTabbedPaneUI.swift:772:30: note: overridden declaration is here
    override open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:765:15: error: overriding declaration requires an 'override' keyword
    open func paintTitle( arg0: java_awt.Graphics2D?, arg1: java_awt.Font?, arg2: java_awt.FontMetrics?, arg3: java_awt.Rectangle?, arg4: Int, arg5: String? ) {
              ^
         override 
com_apple/Sources/AquaTabbedPaneUI.swift:878:15: note: overridden declaration is here
    open func paintTitle( arg0: java_awt.Graphics2D?, arg1: java_awt.Font?, arg2: java_awt.FontMetrics?, arg3: java_awt.Rectangle?, arg4: Int, arg5: String? ) {
              ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:777:15: error: overriding declaration requires an 'override' keyword
    open func paintTitle( _ _arg0: java_awt.Graphics2D?, _ _arg1: java_awt.Font?, _ _arg2: java_awt.FontMetrics?, _ _arg3: java_awt.Rectangle?, _ _arg4: Int, _ _arg5: String? ) {
              ^
         override 
com_apple/Sources/AquaTabbedPaneUI.swift:890:15: note: overridden declaration is here
    open func paintTitle( _ _arg0: java_awt.Graphics2D?, _ _arg1: java_awt.Font?, _ _arg2: java_awt.FontMetrics?, _ _arg3: java_awt.Rectangle?, _ _arg4: Int, _ _arg5: String? ) {
              ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:849:15: error: overriding declaration requires an 'override' keyword
    open func shouldRepaintSelectedTabOnMouseDown() -> Bool {
              ^
         override 
com_apple/Sources/AquaTabbedPaneUI.swift:898:15: note: overridden declaration is here
    open func shouldRepaintSelectedTabOnMouseDown() -> Bool {
              ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:861:15: error: overriding declaration requires an 'override' keyword
    open func shouldPressTabsOnMouseDrag() -> Bool {
              ^
         override 
com_apple/Sources/AquaTabbedPaneUI.swift:910:15: note: overridden declaration is here
    open func shouldPressTabsOnMouseDrag() -> Bool {
              ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:873:15: error: overriding declaration requires an 'override' keyword
    open func getSegmentTrailingSeparator( arg0: Int, arg1: Int ) -> /* apple.laf.JRSUIConstants$SegmentTrailingSeparator */ UnclassedObject! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneUI.swift:922:15: note: overridden declaration is here
    open func getSegmentTrailingSeparator( arg0: Int, arg1: Int ) -> /* apple.laf.JRSUIConstants$SegmentTrailingSeparator */ UnclassedObject! {
              ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:883:15: error: overriding declaration requires an 'override' keyword
    open func getSegmentTrailingSeparator( _ _arg0: Int, _ _arg1: Int ) -> /* apple.laf.JRSUIConstants$SegmentTrailingSeparator */ UnclassedObject! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneUI.swift:932:15: note: overridden declaration is here
    open func getSegmentTrailingSeparator( _ _arg0: Int, _ _arg1: Int ) -> /* apple.laf.JRSUIConstants$SegmentTrailingSeparator */ UnclassedObject! {
              ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:891:15: error: overriding declaration requires an 'override' keyword
    open func getSegmentLeadingSeparator( arg0: Int, arg1: Int ) -> /* apple.laf.JRSUIConstants$SegmentLeadingSeparator */ UnclassedObject! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneUI.swift:940:15: note: overridden declaration is here
    open func getSegmentLeadingSeparator( arg0: Int, arg1: Int ) -> /* apple.laf.JRSUIConstants$SegmentLeadingSeparator */ UnclassedObject! {
              ^
com_apple/Sources/AquaTabbedPaneContrastUI.swift:901:15: error: overriding declaration requires an 'override' keyword
    open func getSegmentLeadingSeparator( _ _arg0: Int, _ _arg1: Int ) -> /* apple.laf.JRSUIConstants$SegmentLeadingSeparator */ UnclassedObject! {
              ^
         override 
com_apple/Sources/AquaTabbedPaneUI.swift:950:15: note: overridden declaration is here
    open func getSegmentLeadingSeparator( _ _arg0: Int, _ _arg1: Int ) -> /* apple.laf.JRSUIConstants$SegmentLeadingSeparator */ UnclassedObject! {
              ^
com_apple/Sources/AquaButtonRadioUI_RadioButtonBorder.swift:38:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:40:23: note: overridden declaration is here
    override open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
                      ^
com_apple/Sources/AquaButtonRadioUI_RadioButtonBorder.swift:50:14: error: overriding declaration requires an 'override' keyword
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:52:23: note: overridden declaration is here
    override open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
                      ^
com_apple/Sources/AquaButtonRadioUI_RadioButtonBorder.swift:62:14: error: overriding declaration requires an 'override' keyword
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaButtonLabeledUI_LabeledButtonBorder.swift:64:23: note: overridden declaration is here
    override open var sizeVariant: AquaUtilControlSize_SizeVariant! {
                      ^
com_apple/Sources/AquaUtils_LazySingletonFromDefaultConstructor.swift:59:15: error: overriding declaration requires an 'override' keyword
    open func getInstance() -> java_lang.JavaObject! {
              ^
         override 
com_apple/Sources/AquaUtils_LazySingleton.swift:55:15: note: overridden declaration is here
    open func getInstance() -> java_lang.JavaObject! {
              ^
com_apple/Sources/AquaTextFieldFormattedUI.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var delegate: /* com.apple.laf.AquaUtils$JComponentPainter */ UnclassedProtocol! {
             ^
com_apple/Sources/AquaTextFieldUI.swift:32:14: note: overridden declaration is here
    open var delegate: /* com.apple.laf.AquaUtils$JComponentPainter */ UnclassedProtocol! {
             ^
com_apple/Sources/AquaTextFieldFormattedUI.swift:49:14: error: overriding declaration requires an 'override' keyword
    open var handler: AquaFocusHandler! {
             ^
com_apple/Sources/AquaTextFieldUI.swift:49:14: note: overridden declaration is here
    open var handler: AquaFocusHandler! {
             ^
com_apple/Sources/AquaTextFieldFormattedUI.swift:175:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaTextFieldUI.swift:100:30: note: overridden declaration is here
    override open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
com_apple/Sources/AquaTextFieldFormattedUI.swift:184:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
com_apple/Sources/AquaTextFieldUI.swift:109:30: note: overridden declaration is here
    override open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                             ^
com_apple/Sources/AquaTextFieldFormattedUI.swift:192:15: error: overriding declaration requires an 'override' keyword
    open func getPropertyPrefix() -> String! {
              ^
         override 
javax_swing.BasicTextFieldUI:7:24: note: overridden declaration is here
    override open func getPropertyPrefix() -> String!
                       ^
com_apple/Sources/AquaTextFieldFormattedUI.swift:204:15: error: overriding declaration requires an 'override' keyword
    open func installListeners() {
              ^
         override 
com_apple/Sources/AquaTextFieldUI.swift:128:24: note: overridden declaration is here
    override open func installListeners() {
                       ^
com_apple/Sources/AquaTextFieldFormattedUI.swift:215:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners() {
              ^
         override 
com_apple/Sources/AquaTextFieldUI.swift:150:24: note: overridden declaration is here
    override open func uninstallListeners() {
                       ^
com_apple/Sources/AquaScrollRegionBorder.swift:33:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaBorder.swift:32:14: note: overridden declaration is here
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaScrollRegionBorder.swift:45:14: error: overriding declaration requires an 'override' keyword
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaBorder.swift:44:14: note: overridden declaration is here
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaScrollRegionBorder.swift:57:14: error: overriding declaration requires an 'override' keyword
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaBorder.swift:56:14: note: overridden declaration is here
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaScrollRegionBorder.swift:105:15: error: overriding declaration requires an 'override' keyword
    open func createPainter() -> /* com.apple.laf.AquaPainter */ UnclassedObject! {
              ^
         override 
com_apple/Sources/AquaBorder.swift:187:15: note: overridden declaration is here
    open func createPainter() -> /* com.apple.laf.AquaPainter */ UnclassedObject! {
              ^
com_apple/Sources/AquaScrollPaneUI.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var scrollpane: javax_swing.JScrollPane! {
             ^
javax_swing.BasicScrollPaneUI:4:14: note: overridden declaration is here
    open var scrollpane: javax_swing.JScrollPane! { get set }
             ^
com_apple/Sources/AquaScrollPaneUI.swift:49:14: error: overriding declaration requires an 'override' keyword
    open var vsbChangeListener: javax_swing.ChangeListener! {
             ^
javax_swing.BasicScrollPaneUI:5:14: note: overridden declaration is here
    open var vsbChangeListener: ChangeListener! { get set }
             ^
com_apple/Sources/AquaScrollPaneUI.swift:66:14: error: overriding declaration requires an 'override' keyword
    open var hsbChangeListener: javax_swing.ChangeListener! {
             ^
javax_swing.BasicScrollPaneUI:6:14: note: overridden declaration is here
    open var hsbChangeListener: ChangeListener! { get set }
             ^
com_apple/Sources/AquaScrollPaneUI.swift:83:14: error: overriding declaration requires an 'override' keyword
    open var viewportChangeListener: javax_swing.ChangeListener! {
             ^
javax_swing.BasicScrollPaneUI:7:14: note: overridden declaration is here
    open var viewportChangeListener: ChangeListener! { get set }
             ^
com_apple/Sources/AquaScrollPaneUI.swift:100:14: error: overriding declaration requires an 'override' keyword
    open var spPropertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
             ^
javax_swing.BasicScrollPaneUI:8:14: note: overridden declaration is here
    open var spPropertyChangeListener: UnclassedProtocol! { get set }
             ^
com_apple/Sources/AquaScrollPaneUI.swift:183:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicScrollPaneUI:31:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaScrollPaneUI.swift:192:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicScrollPaneUI:32:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaScrollPaneUI.swift:200:15: error: overriding declaration requires an 'override' keyword
    open func createMouseWheelListener() -> java_awt.MouseWheelListener! {
              ^
         override 
javax_swing.BasicScrollPaneUI:50:15: note: overridden declaration is here
    open func createMouseWheelListener() -> MouseWheelListener!
              ^
com_apple/Sources/AquaMenuItemUI.swift:48:14: error: overriding declaration requires an 'override' keyword
    open var menuItem: javax_swing.JMenuItem! {
             ^
javax_swing.BasicMenuItemUI:4:14: note: overridden declaration is here
    open var menuItem: javax_swing.JMenuItem! { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:65:14: error: overriding declaration requires an 'override' keyword
    open var selectionBackground: java_awt.Color! {
             ^
javax_swing.BasicMenuItemUI:5:14: note: overridden declaration is here
    open var selectionBackground: java_awt.Color! { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:82:14: error: overriding declaration requires an 'override' keyword
    open var selectionForeground: java_awt.Color! {
             ^
javax_swing.BasicMenuItemUI:6:14: note: overridden declaration is here
    open var selectionForeground: java_awt.Color! { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:99:14: error: overriding declaration requires an 'override' keyword
    open var disabledForeground: java_awt.Color! {
             ^
javax_swing.BasicMenuItemUI:7:14: note: overridden declaration is here
    open var disabledForeground: java_awt.Color! { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:116:14: error: overriding declaration requires an 'override' keyword
    open var acceleratorForeground: java_awt.Color! {
             ^
javax_swing.BasicMenuItemUI:8:14: note: overridden declaration is here
    open var acceleratorForeground: java_awt.Color! { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:133:14: error: overriding declaration requires an 'override' keyword
    open var acceleratorSelectionForeground: java_awt.Color! {
             ^
javax_swing.BasicMenuItemUI:9:14: note: overridden declaration is here
    open var acceleratorSelectionForeground: java_awt.Color! { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:152:14: error: overriding declaration requires an 'override' keyword
    open var defaultTextIconGap: Int {
             ^
javax_swing.BasicMenuItemUI:10:14: note: overridden declaration is here
    open var defaultTextIconGap: Int { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:169:14: error: overriding declaration requires an 'override' keyword
    open var acceleratorFont: java_awt.Font! {
             ^
javax_swing.BasicMenuItemUI:11:14: note: overridden declaration is here
    open var acceleratorFont: java_awt.Font! { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:186:14: error: overriding declaration requires an 'override' keyword
    open var mouseInputListener: javax_swing.MouseInputListener! {
             ^
javax_swing.BasicMenuItemUI:12:14: note: overridden declaration is here
    open var mouseInputListener: MouseInputListener! { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:203:14: error: overriding declaration requires an 'override' keyword
    open var menuDragMouseListener: javax_swing.MenuDragMouseListener! {
             ^
javax_swing.BasicMenuItemUI:13:14: note: overridden declaration is here
    open var menuDragMouseListener: MenuDragMouseListener! { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:220:14: error: overriding declaration requires an 'override' keyword
    open var menuKeyListener: javax_swing.MenuKeyListener! {
             ^
javax_swing.BasicMenuItemUI:14:14: note: overridden declaration is here
    open var menuKeyListener: MenuKeyListener! { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:237:14: error: overriding declaration requires an 'override' keyword
    open var propertyChangeListener: /* java.beans.PropertyChangeListener */ UnclassedProtocol! {
             ^
javax_swing.BasicMenuItemUI:15:14: note: overridden declaration is here
    open var propertyChangeListener: UnclassedProtocol! { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:256:14: error: overriding declaration requires an 'override' keyword
    open var arrowIcon: javax_swing.Icon! {
             ^
javax_swing.BasicMenuItemUI:16:14: note: overridden declaration is here
    open var arrowIcon: Icon! { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:273:14: error: overriding declaration requires an 'override' keyword
    open var checkIcon: javax_swing.Icon! {
             ^
javax_swing.BasicMenuItemUI:17:14: note: overridden declaration is here
    open var checkIcon: Icon! { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:290:14: error: overriding declaration requires an 'override' keyword
    open var oldBorderPainted: Bool {
             ^
javax_swing.BasicMenuItemUI:18:14: note: overridden declaration is here
    open var oldBorderPainted: Bool { get set }
             ^
com_apple/Sources/AquaMenuItemUI.swift:325:15: error: overriding declaration requires an 'override' keyword
    open func doClick( arg0: javax_swing.MenuSelectionManager? ) {
              ^
         override 
javax_swing.BasicMenuItemUI:21:15: note: overridden declaration is here
    open func doClick(arg0: javax_swing.MenuSelectionManager?)
              ^
com_apple/Sources/AquaMenuItemUI.swift:332:15: error: overriding declaration requires an 'override' keyword
    open func doClick( _ _arg0: javax_swing.MenuSelectionManager? ) {
              ^
         override 
javax_swing.BasicMenuItemUI:22:15: note: overridden declaration is here
    open func doClick(_ _arg0: javax_swing.MenuSelectionManager?)
              ^
com_apple/Sources/AquaMenuItemUI.swift:340:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicMenuItemUI:23:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaMenuItemUI.swift:349:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicMenuItemUI:24:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaMenuItemUI.swift:357:15: error: overriding declaration requires an 'override' keyword
    open func getPropertyPrefix() -> String! {
              ^
         override 
javax_swing.BasicMenuItemUI:28:15: note: overridden declaration is here
    open func getPropertyPrefix() -> String!
              ^
com_apple/Sources/AquaMenuItemUI.swift:369:15: error: overriding declaration requires an 'override' keyword
    open func installListeners() {
              ^
         override 
javax_swing.BasicMenuItemUI:25:15: note: overridden declaration is here
    open func installListeners()
              ^
com_apple/Sources/AquaMenuItemUI.swift:380:15: error: overriding declaration requires an 'override' keyword
    open func uninstallListeners() {
              ^
         override 
javax_swing.BasicMenuItemUI:36:15: note: overridden declaration is here
    open func uninstallListeners()
              ^
com_apple/Sources/AquaMenuItemUI.swift:457:15: error: overriding declaration requires an 'override' keyword
    open func paintMenuItem( arg0: java_awt.Graphics?, arg1: javax_swing.JComponent?, arg2: javax_swing.Icon?, arg3: javax_swing.Icon?, arg4: java_awt.Color?, arg5: java_awt.Color?, arg6: Int ) {
              ^
         override 
javax_swing.BasicMenuItemUI:48:15: note: overridden declaration is here
    open func paintMenuItem(arg0: java_awt.Graphics?, arg1: javax_swing.JComponent?, arg2: Icon?, arg3: Icon?, arg4: java_awt.Color?, arg5: java_awt.Color?, arg6: Int)
              ^
com_apple/Sources/AquaMenuItemUI.swift:470:15: error: overriding declaration requires an 'override' keyword
    open func paintMenuItem( _ _arg0: java_awt.Graphics?, _ _arg1: javax_swing.JComponent?, _ _arg2: javax_swing.Icon?, _ _arg3: javax_swing.Icon?, _ _arg4: java_awt.Color?, _ _arg5: java_awt.Color?, _ _arg6: Int ) {
              ^
         override 
javax_swing.BasicMenuItemUI:49:15: note: overridden declaration is here
    open func paintMenuItem(_ _arg0: java_awt.Graphics?, _ _arg1: javax_swing.JComponent?, _ _arg2: Icon?, _ _arg3: Icon?, _ _arg4: java_awt.Color?, _ _arg5: java_awt.Color?, _ _arg6: Int)
              ^
com_apple/Sources/AquaMenuItemUI.swift:478:15: error: overriding declaration requires an 'override' keyword
    open func getPreferredMenuItemSize( arg0: javax_swing.JComponent?, arg1: javax_swing.Icon?, arg2: javax_swing.Icon?, arg3: Int ) -> java_awt.Dimension! {
              ^
         override 
javax_swing.BasicMenuItemUI:46:15: note: overridden declaration is here
    open func getPreferredMenuItemSize(arg0: javax_swing.JComponent?, arg1: Icon?, arg2: Icon?, arg3: Int) -> java_awt.Dimension!
              ^
com_apple/Sources/AquaMenuItemUI.swift:490:15: error: overriding declaration requires an 'override' keyword
    open func getPreferredMenuItemSize( _ _arg0: javax_swing.JComponent?, _ _arg1: javax_swing.Icon?, _ _arg2: javax_swing.Icon?, _ _arg3: Int ) -> java_awt.Dimension! {
              ^
         override 
javax_swing.BasicMenuItemUI:47:15: note: overridden declaration is here
    open func getPreferredMenuItemSize(_ _arg0: javax_swing.JComponent?, _ _arg1: Icon?, _ _arg2: Icon?, _ _arg3: Int) -> java_awt.Dimension!
              ^
com_apple/Sources/AquaPanelUI.swift:47:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicPanelUI:5:30: note: overridden declaration is here
    override open class func createUI(arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaPanelUI.swift:56:21: error: overriding declaration requires an 'override' keyword
    open class func createUI( _ _arg0: javax_swing.JComponent? ) -> javax_swing.ComponentUI! {
                    ^
         override 
javax_swing.BasicPanelUI:6:30: note: overridden declaration is here
    override open class func createUI(_ _arg0: javax_swing.JComponent?) -> javax_swing.ComponentUI!
                             ^
com_apple/Sources/AquaButtonBorder_Dynamic.swift:46:14: error: overriding declaration requires an 'override' keyword
    open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
             ^
com_apple/Sources/AquaButtonBorder.swift:67:23: note: overridden declaration is here
    override open var painter: /* com.apple.laf.AquaPainter */ UnclassedObject! {
                      ^
com_apple/Sources/AquaButtonBorder_Dynamic.swift:58:14: error: overriding declaration requires an 'override' keyword
    open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
             ^
com_apple/Sources/AquaButtonBorder.swift:79:23: note: overridden declaration is here
    override open var sizeDescriptor: AquaUtilControlSize_SizeDescriptor! {
                      ^
com_apple/Sources/AquaButtonBorder_Dynamic.swift:70:14: error: overriding declaration requires an 'override' keyword
    open var sizeVariant: AquaUtilControlSize_SizeVariant! {
             ^
com_apple/Sources/AquaButtonBorder.swift:91:23: note: overridden declaration is here
    override open var sizeVariant: AquaUtilControlSize_SizeVariant! {
                      ^
com_apple/Sources/AquaButtonBorder_Dynamic.swift:116:15: error: overriding declaration requires an 'override' keyword
    open func getButtonState( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel? ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:148:15: note: overridden declaration is here
    open func getButtonState( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel? ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
              ^
com_apple/Sources/AquaButtonBorder_Dynamic.swift:126:15: error: overriding declaration requires an 'override' keyword
    open func getButtonState( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel? ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:158:15: note: overridden declaration is here
    open func getButtonState( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel? ) -> /* apple.laf.JRSUIConstants$State */ UnclassedObject! {
              ^
com_apple/Sources/AquaButtonBorder_Dynamic.swift:136:15: error: overriding declaration requires an 'override' keyword
    open func doButtonPaint( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:185:15: note: overridden declaration is here
    open func doButtonPaint( arg0: javax_swing.AbstractButton?, arg1: javax_swing.ButtonModel?, arg2: java_awt.Graphics?, arg3: Int, arg4: Int, arg5: Int, arg6: Int ) {
              ^
com_apple/Sources/AquaButtonBorder_Dynamic.swift:149:15: error: overriding declaration requires an 'override' keyword
    open func doButtonPaint( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^
         override 
com_apple/Sources/AquaButtonBorder.swift:198:15: note: overridden declaration is here
    open func doButtonPaint( _ _arg0: javax_swing.AbstractButton?, _ _arg1: javax_swing.ButtonModel?, _ _arg2: java_awt.Graphics?, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int ) {
              ^
com_apple/Sources/AppEvent_UserSessionEvent.swift:32:14: error: overriding declaration requires an 'override' keyword
    open var source: java_lang.JavaObject! {
             ^
com_apple/Sources/AppEvent.swift:33:23: note: overridden declaration is here
    override open var source: java_lang.JavaObject! {
                      ^
